{"version":3,"file":"index.min8.mjs","sources":["../node_modules/@aws-sdk/nested-clients/dist-es/submodules/sts/auth/httpAuthSchemeProvider.js","../node_modules/@aws-sdk/nested-clients/dist-es/submodules/sts/endpoint/EndpointParameters.js","../node_modules/@aws-sdk/nested-clients/dist-es/submodules/sts/endpoint/ruleset.js","../node_modules/@aws-sdk/nested-clients/dist-es/submodules/sts/endpoint/endpointResolver.js","../node_modules/@aws-sdk/nested-clients/dist-es/submodules/sts/runtimeConfig.shared.js","../node_modules/@aws-sdk/nested-clients/dist-es/submodules/sts/runtimeConfig.js","../node_modules/@aws-sdk/nested-clients/dist-es/submodules/sts/auth/httpAuthExtensionConfiguration.js","../node_modules/@aws-sdk/nested-clients/dist-es/submodules/sts/STSClient.js","../node_modules/@aws-sdk/nested-clients/dist-es/submodules/sts/runtimeExtensions.js","../node_modules/@aws-sdk/nested-clients/dist-es/submodules/sts/models/STSServiceException.js","../node_modules/@aws-sdk/nested-clients/dist-es/submodules/sts/models/models_0.js","../node_modules/@aws-sdk/nested-clients/dist-es/submodules/sts/protocols/Aws_query.js","../node_modules/@aws-sdk/nested-clients/dist-es/submodules/sts/commands/AssumeRoleCommand.js","../node_modules/@aws-sdk/nested-clients/dist-es/submodules/sts/commands/AssumeRoleWithWebIdentityCommand.js","../node_modules/@aws-sdk/nested-clients/dist-es/submodules/sts/STS.js","../node_modules/@aws-sdk/nested-clients/dist-es/submodules/sts/defaultStsRoleAssumers.js","../node_modules/@aws-sdk/nested-clients/dist-es/submodules/sts/defaultRoleAssumers.js"],"sourcesContent":["import { resolveAwsSdkSigV4Config, } from \"@aws-sdk/core\";\nimport { getSmithyContext, normalizeProvider } from \"@smithy/util-middleware\";\nimport { STSClient } from \"../STSClient\";\nexport const defaultSTSHttpAuthSchemeParametersProvider = async (config, context, input) => {\n    return {\n        operation: getSmithyContext(context).operation,\n        region: (await normalizeProvider(config.region)()) ||\n            (() => {\n                throw new Error(\"expected `region` to be configured for `aws.auth#sigv4`\");\n            })(),\n    };\n};\nfunction createAwsAuthSigv4HttpAuthOption(authParameters) {\n    return {\n        schemeId: \"aws.auth#sigv4\",\n        signingProperties: {\n            name: \"sts\",\n            region: authParameters.region,\n        },\n        propertiesExtractor: (config, context) => ({\n            signingProperties: {\n                config,\n                context,\n            },\n        }),\n    };\n}\nfunction createSmithyApiNoAuthHttpAuthOption(authParameters) {\n    return {\n        schemeId: \"smithy.api#noAuth\",\n    };\n}\nexport const defaultSTSHttpAuthSchemeProvider = (authParameters) => {\n    const options = [];\n    switch (authParameters.operation) {\n        case \"AssumeRoleWithWebIdentity\": {\n            options.push(createSmithyApiNoAuthHttpAuthOption(authParameters));\n            break;\n        }\n        default: {\n            options.push(createAwsAuthSigv4HttpAuthOption(authParameters));\n        }\n    }\n    return options;\n};\nexport const resolveStsAuthConfig = (input) => ({\n    ...input,\n    stsClientCtor: STSClient,\n});\nexport const resolveHttpAuthSchemeConfig = (config) => {\n    const config_0 = resolveStsAuthConfig(config);\n    const config_1 = resolveAwsSdkSigV4Config(config_0);\n    return {\n        ...config_1,\n    };\n};\n","export const resolveClientEndpointParameters = (options) => {\n    return {\n        ...options,\n        useDualstackEndpoint: options.useDualstackEndpoint ?? false,\n        useFipsEndpoint: options.useFipsEndpoint ?? false,\n        useGlobalEndpoint: options.useGlobalEndpoint ?? false,\n        defaultSigningName: \"sts\",\n    };\n};\nexport const commonParams = {\n    UseGlobalEndpoint: { type: \"builtInParams\", name: \"useGlobalEndpoint\" },\n    UseFIPS: { type: \"builtInParams\", name: \"useFipsEndpoint\" },\n    Endpoint: { type: \"builtInParams\", name: \"endpoint\" },\n    Region: { type: \"builtInParams\", name: \"region\" },\n    UseDualStack: { type: \"builtInParams\", name: \"useDualstackEndpoint\" },\n};\n","const F = \"required\", G = \"type\", H = \"fn\", I = \"argv\", J = \"ref\";\nconst a = false, b = true, c = \"booleanEquals\", d = \"stringEquals\", e = \"sigv4\", f = \"sts\", g = \"us-east-1\", h = \"endpoint\", i = \"https://sts.{Region}.{PartitionResult#dnsSuffix}\", j = \"tree\", k = \"error\", l = \"getAttr\", m = { [F]: false, [G]: \"String\" }, n = { [F]: true, \"default\": false, [G]: \"Boolean\" }, o = { [J]: \"Endpoint\" }, p = { [H]: \"isSet\", [I]: [{ [J]: \"Region\" }] }, q = { [J]: \"Region\" }, r = { [H]: \"aws.partition\", [I]: [q], \"assign\": \"PartitionResult\" }, s = { [J]: \"UseFIPS\" }, t = { [J]: \"UseDualStack\" }, u = { \"url\": \"https://sts.amazonaws.com\", \"properties\": { \"authSchemes\": [{ \"name\": e, \"signingName\": f, \"signingRegion\": g }] }, \"headers\": {} }, v = {}, w = { \"conditions\": [{ [H]: d, [I]: [q, \"aws-global\"] }], [h]: u, [G]: h }, x = { [H]: c, [I]: [s, true] }, y = { [H]: c, [I]: [t, true] }, z = { [H]: l, [I]: [{ [J]: \"PartitionResult\" }, \"supportsFIPS\"] }, A = { [J]: \"PartitionResult\" }, B = { [H]: c, [I]: [true, { [H]: l, [I]: [A, \"supportsDualStack\"] }] }, C = [{ [H]: \"isSet\", [I]: [o] }], D = [x], E = [y];\nconst _data = { version: \"1.0\", parameters: { Region: m, UseDualStack: n, UseFIPS: n, Endpoint: m, UseGlobalEndpoint: n }, rules: [{ conditions: [{ [H]: c, [I]: [{ [J]: \"UseGlobalEndpoint\" }, b] }, { [H]: \"not\", [I]: C }, p, r, { [H]: c, [I]: [s, a] }, { [H]: c, [I]: [t, a] }], rules: [{ conditions: [{ [H]: d, [I]: [q, \"ap-northeast-1\"] }], endpoint: u, [G]: h }, { conditions: [{ [H]: d, [I]: [q, \"ap-south-1\"] }], endpoint: u, [G]: h }, { conditions: [{ [H]: d, [I]: [q, \"ap-southeast-1\"] }], endpoint: u, [G]: h }, { conditions: [{ [H]: d, [I]: [q, \"ap-southeast-2\"] }], endpoint: u, [G]: h }, w, { conditions: [{ [H]: d, [I]: [q, \"ca-central-1\"] }], endpoint: u, [G]: h }, { conditions: [{ [H]: d, [I]: [q, \"eu-central-1\"] }], endpoint: u, [G]: h }, { conditions: [{ [H]: d, [I]: [q, \"eu-north-1\"] }], endpoint: u, [G]: h }, { conditions: [{ [H]: d, [I]: [q, \"eu-west-1\"] }], endpoint: u, [G]: h }, { conditions: [{ [H]: d, [I]: [q, \"eu-west-2\"] }], endpoint: u, [G]: h }, { conditions: [{ [H]: d, [I]: [q, \"eu-west-3\"] }], endpoint: u, [G]: h }, { conditions: [{ [H]: d, [I]: [q, \"sa-east-1\"] }], endpoint: u, [G]: h }, { conditions: [{ [H]: d, [I]: [q, g] }], endpoint: u, [G]: h }, { conditions: [{ [H]: d, [I]: [q, \"us-east-2\"] }], endpoint: u, [G]: h }, { conditions: [{ [H]: d, [I]: [q, \"us-west-1\"] }], endpoint: u, [G]: h }, { conditions: [{ [H]: d, [I]: [q, \"us-west-2\"] }], endpoint: u, [G]: h }, { endpoint: { url: i, properties: { authSchemes: [{ name: e, signingName: f, signingRegion: \"{Region}\" }] }, headers: v }, [G]: h }], [G]: j }, { conditions: C, rules: [{ conditions: D, error: \"Invalid Configuration: FIPS and custom endpoint are not supported\", [G]: k }, { conditions: E, error: \"Invalid Configuration: Dualstack and custom endpoint are not supported\", [G]: k }, { endpoint: { url: o, properties: v, headers: v }, [G]: h }], [G]: j }, { conditions: [p], rules: [{ conditions: [r], rules: [{ conditions: [x, y], rules: [{ conditions: [{ [H]: c, [I]: [b, z] }, B], rules: [{ endpoint: { url: \"https://sts-fips.{Region}.{PartitionResult#dualStackDnsSuffix}\", properties: v, headers: v }, [G]: h }], [G]: j }, { error: \"FIPS and DualStack are enabled, but this partition does not support one or both\", [G]: k }], [G]: j }, { conditions: D, rules: [{ conditions: [{ [H]: c, [I]: [z, b] }], rules: [{ conditions: [{ [H]: d, [I]: [{ [H]: l, [I]: [A, \"name\"] }, \"aws-us-gov\"] }], endpoint: { url: \"https://sts.{Region}.amazonaws.com\", properties: v, headers: v }, [G]: h }, { endpoint: { url: \"https://sts-fips.{Region}.{PartitionResult#dnsSuffix}\", properties: v, headers: v }, [G]: h }], [G]: j }, { error: \"FIPS is enabled but this partition does not support FIPS\", [G]: k }], [G]: j }, { conditions: E, rules: [{ conditions: [B], rules: [{ endpoint: { url: \"https://sts.{Region}.{PartitionResult#dualStackDnsSuffix}\", properties: v, headers: v }, [G]: h }], [G]: j }, { error: \"DualStack is enabled but this partition does not support DualStack\", [G]: k }], [G]: j }, w, { endpoint: { url: i, properties: v, headers: v }, [G]: h }], [G]: j }], [G]: j }, { error: \"Invalid Configuration: Missing Region\", [G]: k }] };\nexport const ruleSet = _data;\n","import { awsEndpointFunctions } from \"@aws-sdk/util-endpoints\";\nimport { customEndpointFunctions, EndpointCache, resolveEndpoint } from \"@smithy/util-endpoints\";\nimport { ruleSet } from \"./ruleset\";\nconst cache = new EndpointCache({\n    size: 50,\n    params: [\"Endpoint\", \"Region\", \"UseDualStack\", \"UseFIPS\", \"UseGlobalEndpoint\"],\n});\nexport const defaultEndpointResolver = (endpointParams, context = {}) => {\n    return cache.get(endpointParams, () => resolveEndpoint(ruleSet, {\n        endpointParams: endpointParams,\n        logger: context.logger,\n    }));\n};\ncustomEndpointFunctions.aws = awsEndpointFunctions;\n","import { AwsSdkSigV4Signer } from \"@aws-sdk/core\";\nimport { NoAuthSigner } from \"@smithy/core\";\nimport { NoOpLogger } from \"@smithy/smithy-client\";\nimport { parseUrl } from \"@smithy/url-parser\";\nimport { fromBase64, toBase64 } from \"@smithy/util-base64\";\nimport { fromUtf8, toUtf8 } from \"@smithy/util-utf8\";\nimport { defaultSTSHttpAuthSchemeProvider } from \"./auth/httpAuthSchemeProvider\";\nimport { defaultEndpointResolver } from \"./endpoint/endpointResolver\";\nexport const getRuntimeConfig = (config) => {\n    return {\n        apiVersion: \"2011-06-15\",\n        base64Decoder: config?.base64Decoder ?? fromBase64,\n        base64Encoder: config?.base64Encoder ?? toBase64,\n        disableHostPrefix: config?.disableHostPrefix ?? false,\n        endpointProvider: config?.endpointProvider ?? defaultEndpointResolver,\n        extensions: config?.extensions ?? [],\n        httpAuthSchemeProvider: config?.httpAuthSchemeProvider ?? defaultSTSHttpAuthSchemeProvider,\n        httpAuthSchemes: config?.httpAuthSchemes ?? [\n            {\n                schemeId: \"aws.auth#sigv4\",\n                identityProvider: (ipc) => ipc.getIdentityProvider(\"aws.auth#sigv4\"),\n                signer: new AwsSdkSigV4Signer(),\n            },\n            {\n                schemeId: \"smithy.api#noAuth\",\n                identityProvider: (ipc) => ipc.getIdentityProvider(\"smithy.api#noAuth\") || (async () => ({})),\n                signer: new NoAuthSigner(),\n            },\n        ],\n        logger: config?.logger ?? new NoOpLogger(),\n        serviceId: config?.serviceId ?? \"STS\",\n        urlParser: config?.urlParser ?? parseUrl,\n        utf8Decoder: config?.utf8Decoder ?? fromUtf8,\n        utf8Encoder: config?.utf8Encoder ?? toUtf8,\n    };\n};\n","import packageInfo from \"../../../package.json\";\nimport { AwsSdkSigV4Signer, emitWarningIfUnsupportedVersion as awsCheckVersion } from \"@aws-sdk/core\";\nimport { NODE_APP_ID_CONFIG_OPTIONS, createDefaultUserAgentProvider } from \"@aws-sdk/util-user-agent-node\";\nimport { NODE_REGION_CONFIG_FILE_OPTIONS, NODE_REGION_CONFIG_OPTIONS, NODE_USE_DUALSTACK_ENDPOINT_CONFIG_OPTIONS, NODE_USE_FIPS_ENDPOINT_CONFIG_OPTIONS, } from \"@smithy/config-resolver\";\nimport { NoAuthSigner } from \"@smithy/core\";\nimport { Hash } from \"@smithy/hash-node\";\nimport { NODE_MAX_ATTEMPT_CONFIG_OPTIONS, NODE_RETRY_MODE_CONFIG_OPTIONS } from \"@smithy/middleware-retry\";\nimport { loadConfig as loadNodeConfig } from \"@smithy/node-config-provider\";\nimport { NodeHttpHandler as RequestHandler, streamCollector } from \"@smithy/node-http-handler\";\nimport { calculateBodyLength } from \"@smithy/util-body-length-node\";\nimport { DEFAULT_RETRY_MODE } from \"@smithy/util-retry\";\nimport { getRuntimeConfig as getSharedRuntimeConfig } from \"./runtimeConfig.shared\";\nimport { loadConfigsForDefaultMode } from \"@smithy/smithy-client\";\nimport { resolveDefaultsModeConfig } from \"@smithy/util-defaults-mode-node\";\nimport { emitWarningIfUnsupportedVersion } from \"@smithy/smithy-client\";\nexport const getRuntimeConfig = (config) => {\n    emitWarningIfUnsupportedVersion(process.version);\n    const defaultsMode = resolveDefaultsModeConfig(config);\n    const defaultConfigProvider = () => defaultsMode().then(loadConfigsForDefaultMode);\n    const clientSharedValues = getSharedRuntimeConfig(config);\n    awsCheckVersion(process.version);\n    const profileConfig = { profile: config?.profile };\n    return {\n        ...clientSharedValues,\n        ...config,\n        runtime: \"node\",\n        defaultsMode,\n        bodyLengthChecker: config?.bodyLengthChecker ?? calculateBodyLength,\n        defaultUserAgentProvider: config?.defaultUserAgentProvider ??\n            createDefaultUserAgentProvider({ serviceId: clientSharedValues.serviceId, clientVersion: packageInfo.version }),\n        httpAuthSchemes: config?.httpAuthSchemes ?? [\n            {\n                schemeId: \"aws.auth#sigv4\",\n                identityProvider: (ipc) => ipc.getIdentityProvider(\"aws.auth#sigv4\") ||\n                    (async (idProps) => await config.credentialDefaultProvider(idProps?.__config || {})()),\n                signer: new AwsSdkSigV4Signer(),\n            },\n            {\n                schemeId: \"smithy.api#noAuth\",\n                identityProvider: (ipc) => ipc.getIdentityProvider(\"smithy.api#noAuth\") || (async () => ({})),\n                signer: new NoAuthSigner(),\n            },\n        ],\n        maxAttempts: config?.maxAttempts ?? loadNodeConfig(NODE_MAX_ATTEMPT_CONFIG_OPTIONS, config),\n        region: config?.region ??\n            loadNodeConfig(NODE_REGION_CONFIG_OPTIONS, { ...NODE_REGION_CONFIG_FILE_OPTIONS, ...profileConfig }),\n        requestHandler: RequestHandler.create(config?.requestHandler ?? defaultConfigProvider),\n        retryMode: config?.retryMode ??\n            loadNodeConfig({\n                ...NODE_RETRY_MODE_CONFIG_OPTIONS,\n                default: async () => (await defaultConfigProvider()).retryMode || DEFAULT_RETRY_MODE,\n            }, config),\n        sha256: config?.sha256 ?? Hash.bind(null, \"sha256\"),\n        streamCollector: config?.streamCollector ?? streamCollector,\n        useDualstackEndpoint: config?.useDualstackEndpoint ?? loadNodeConfig(NODE_USE_DUALSTACK_ENDPOINT_CONFIG_OPTIONS, profileConfig),\n        useFipsEndpoint: config?.useFipsEndpoint ?? loadNodeConfig(NODE_USE_FIPS_ENDPOINT_CONFIG_OPTIONS, profileConfig),\n        userAgentAppId: config?.userAgentAppId ?? loadNodeConfig(NODE_APP_ID_CONFIG_OPTIONS, profileConfig),\n    };\n};\n","export const getHttpAuthExtensionConfiguration = (runtimeConfig) => {\n    const _httpAuthSchemes = runtimeConfig.httpAuthSchemes;\n    let _httpAuthSchemeProvider = runtimeConfig.httpAuthSchemeProvider;\n    let _credentials = runtimeConfig.credentials;\n    return {\n        setHttpAuthScheme(httpAuthScheme) {\n            const index = _httpAuthSchemes.findIndex((scheme) => scheme.schemeId === httpAuthScheme.schemeId);\n            if (index === -1) {\n                _httpAuthSchemes.push(httpAuthScheme);\n            }\n            else {\n                _httpAuthSchemes.splice(index, 1, httpAuthScheme);\n            }\n        },\n        httpAuthSchemes() {\n            return _httpAuthSchemes;\n        },\n        setHttpAuthSchemeProvider(httpAuthSchemeProvider) {\n            _httpAuthSchemeProvider = httpAuthSchemeProvider;\n        },\n        httpAuthSchemeProvider() {\n            return _httpAuthSchemeProvider;\n        },\n        setCredentials(credentials) {\n            _credentials = credentials;\n        },\n        credentials() {\n            return _credentials;\n        },\n    };\n};\nexport const resolveHttpAuthRuntimeConfig = (config) => {\n    return {\n        httpAuthSchemes: config.httpAuthSchemes(),\n        httpAuthSchemeProvider: config.httpAuthSchemeProvider(),\n        credentials: config.credentials(),\n    };\n};\n","import { getHostHeaderPlugin, resolveHostHeaderConfig, } from \"@aws-sdk/middleware-host-header\";\nimport { getLoggerPlugin } from \"@aws-sdk/middleware-logger\";\nimport { getRecursionDetectionPlugin } from \"@aws-sdk/middleware-recursion-detection\";\nimport { getUserAgentPlugin, resolveUserAgentConfig, } from \"@aws-sdk/middleware-user-agent\";\nimport { resolveRegionConfig } from \"@smithy/config-resolver\";\nimport { DefaultIdentityProviderConfig, getHttpAuthSchemeEndpointRuleSetPlugin, getHttpSigningPlugin, } from \"@smithy/core\";\nimport { getContentLengthPlugin } from \"@smithy/middleware-content-length\";\nimport { resolveEndpointConfig } from \"@smithy/middleware-endpoint\";\nimport { getRetryPlugin, resolveRetryConfig } from \"@smithy/middleware-retry\";\nimport { Client as __Client, } from \"@smithy/smithy-client\";\nimport { defaultSTSHttpAuthSchemeParametersProvider, resolveHttpAuthSchemeConfig, } from \"./auth/httpAuthSchemeProvider\";\nimport { resolveClientEndpointParameters, } from \"./endpoint/EndpointParameters\";\nimport { getRuntimeConfig as __getRuntimeConfig } from \"./runtimeConfig\";\nimport { resolveRuntimeExtensions } from \"./runtimeExtensions\";\nexport { __Client };\nexport class STSClient extends __Client {\n    config;\n    constructor(...[configuration]) {\n        const _config_0 = __getRuntimeConfig(configuration || {});\n        const _config_1 = resolveClientEndpointParameters(_config_0);\n        const _config_2 = resolveUserAgentConfig(_config_1);\n        const _config_3 = resolveRetryConfig(_config_2);\n        const _config_4 = resolveRegionConfig(_config_3);\n        const _config_5 = resolveHostHeaderConfig(_config_4);\n        const _config_6 = resolveEndpointConfig(_config_5);\n        const _config_7 = resolveHttpAuthSchemeConfig(_config_6);\n        const _config_8 = resolveRuntimeExtensions(_config_7, configuration?.extensions || []);\n        super(_config_8);\n        this.config = _config_8;\n        this.middlewareStack.use(getUserAgentPlugin(this.config));\n        this.middlewareStack.use(getRetryPlugin(this.config));\n        this.middlewareStack.use(getContentLengthPlugin(this.config));\n        this.middlewareStack.use(getHostHeaderPlugin(this.config));\n        this.middlewareStack.use(getLoggerPlugin(this.config));\n        this.middlewareStack.use(getRecursionDetectionPlugin(this.config));\n        this.middlewareStack.use(getHttpAuthSchemeEndpointRuleSetPlugin(this.config, {\n            httpAuthSchemeParametersProvider: defaultSTSHttpAuthSchemeParametersProvider,\n            identityProviderConfigProvider: async (config) => new DefaultIdentityProviderConfig({\n                \"aws.auth#sigv4\": config.credentials,\n            }),\n        }));\n        this.middlewareStack.use(getHttpSigningPlugin(this.config));\n    }\n    destroy() {\n        super.destroy();\n    }\n}\n","import { getAwsRegionExtensionConfiguration, resolveAwsRegionExtensionConfiguration, } from \"@aws-sdk/region-config-resolver\";\nimport { getHttpHandlerExtensionConfiguration, resolveHttpHandlerRuntimeConfig } from \"@smithy/protocol-http\";\nimport { getDefaultExtensionConfiguration, resolveDefaultRuntimeConfig } from \"@smithy/smithy-client\";\nimport { getHttpAuthExtensionConfiguration, resolveHttpAuthRuntimeConfig } from \"./auth/httpAuthExtensionConfiguration\";\nconst asPartial = (t) => t;\nexport const resolveRuntimeExtensions = (runtimeConfig, extensions) => {\n    const extensionConfiguration = {\n        ...asPartial(getAwsRegionExtensionConfiguration(runtimeConfig)),\n        ...asPartial(getDefaultExtensionConfiguration(runtimeConfig)),\n        ...asPartial(getHttpHandlerExtensionConfiguration(runtimeConfig)),\n        ...asPartial(getHttpAuthExtensionConfiguration(runtimeConfig)),\n    };\n    extensions.forEach((extension) => extension.configure(extensionConfiguration));\n    return {\n        ...runtimeConfig,\n        ...resolveAwsRegionExtensionConfiguration(extensionConfiguration),\n        ...resolveDefaultRuntimeConfig(extensionConfiguration),\n        ...resolveHttpHandlerRuntimeConfig(extensionConfiguration),\n        ...resolveHttpAuthRuntimeConfig(extensionConfiguration),\n    };\n};\n","import { ServiceException as __ServiceException, } from \"@smithy/smithy-client\";\nexport { __ServiceException };\nexport class STSServiceException extends __ServiceException {\n    constructor(options) {\n        super(options);\n        Object.setPrototypeOf(this, STSServiceException.prototype);\n    }\n}\n","import { SENSITIVE_STRING } from \"@smithy/smithy-client\";\nimport { STSServiceException as __BaseException } from \"./STSServiceException\";\nexport const CredentialsFilterSensitiveLog = (obj) => ({\n    ...obj,\n    ...(obj.SecretAccessKey && { SecretAccessKey: SENSITIVE_STRING }),\n});\nexport const AssumeRoleResponseFilterSensitiveLog = (obj) => ({\n    ...obj,\n    ...(obj.Credentials && { Credentials: CredentialsFilterSensitiveLog(obj.Credentials) }),\n});\nexport class ExpiredTokenException extends __BaseException {\n    name = \"ExpiredTokenException\";\n    $fault = \"client\";\n    constructor(opts) {\n        super({\n            name: \"ExpiredTokenException\",\n            $fault: \"client\",\n            ...opts,\n        });\n        Object.setPrototypeOf(this, ExpiredTokenException.prototype);\n    }\n}\nexport class MalformedPolicyDocumentException extends __BaseException {\n    name = \"MalformedPolicyDocumentException\";\n    $fault = \"client\";\n    constructor(opts) {\n        super({\n            name: \"MalformedPolicyDocumentException\",\n            $fault: \"client\",\n            ...opts,\n        });\n        Object.setPrototypeOf(this, MalformedPolicyDocumentException.prototype);\n    }\n}\nexport class PackedPolicyTooLargeException extends __BaseException {\n    name = \"PackedPolicyTooLargeException\";\n    $fault = \"client\";\n    constructor(opts) {\n        super({\n            name: \"PackedPolicyTooLargeException\",\n            $fault: \"client\",\n            ...opts,\n        });\n        Object.setPrototypeOf(this, PackedPolicyTooLargeException.prototype);\n    }\n}\nexport class RegionDisabledException extends __BaseException {\n    name = \"RegionDisabledException\";\n    $fault = \"client\";\n    constructor(opts) {\n        super({\n            name: \"RegionDisabledException\",\n            $fault: \"client\",\n            ...opts,\n        });\n        Object.setPrototypeOf(this, RegionDisabledException.prototype);\n    }\n}\nexport class IDPRejectedClaimException extends __BaseException {\n    name = \"IDPRejectedClaimException\";\n    $fault = \"client\";\n    constructor(opts) {\n        super({\n            name: \"IDPRejectedClaimException\",\n            $fault: \"client\",\n            ...opts,\n        });\n        Object.setPrototypeOf(this, IDPRejectedClaimException.prototype);\n    }\n}\nexport class InvalidIdentityTokenException extends __BaseException {\n    name = \"InvalidIdentityTokenException\";\n    $fault = \"client\";\n    constructor(opts) {\n        super({\n            name: \"InvalidIdentityTokenException\",\n            $fault: \"client\",\n            ...opts,\n        });\n        Object.setPrototypeOf(this, InvalidIdentityTokenException.prototype);\n    }\n}\nexport const AssumeRoleWithWebIdentityRequestFilterSensitiveLog = (obj) => ({\n    ...obj,\n    ...(obj.WebIdentityToken && { WebIdentityToken: SENSITIVE_STRING }),\n});\nexport const AssumeRoleWithWebIdentityResponseFilterSensitiveLog = (obj) => ({\n    ...obj,\n    ...(obj.Credentials && { Credentials: CredentialsFilterSensitiveLog(obj.Credentials) }),\n});\nexport class IDPCommunicationErrorException extends __BaseException {\n    name = \"IDPCommunicationErrorException\";\n    $fault = \"client\";\n    constructor(opts) {\n        super({\n            name: \"IDPCommunicationErrorException\",\n            $fault: \"client\",\n            ...opts,\n        });\n        Object.setPrototypeOf(this, IDPCommunicationErrorException.prototype);\n    }\n}\n","import { parseXmlBody as parseBody, parseXmlErrorBody as parseErrorBody } from \"@aws-sdk/core\";\nimport { HttpRequest as __HttpRequest } from \"@smithy/protocol-http\";\nimport { collectBody, decorateServiceException as __decorateServiceException, expectNonNull as __expectNonNull, expectString as __expectString, extendedEncodeURIComponent as __extendedEncodeURIComponent, parseRfc3339DateTimeWithOffset as __parseRfc3339DateTimeWithOffset, strictParseInt32 as __strictParseInt32, withBaseException, } from \"@smithy/smithy-client\";\nimport { ExpiredTokenException, IDPCommunicationErrorException, IDPRejectedClaimException, InvalidIdentityTokenException, MalformedPolicyDocumentException, PackedPolicyTooLargeException, RegionDisabledException, } from \"../models/models_0\";\nimport { STSServiceException as __BaseException } from \"../models/STSServiceException\";\nexport const se_AssumeRoleCommand = async (input, context) => {\n    const headers = SHARED_HEADERS;\n    let body;\n    body = buildFormUrlencodedString({\n        ...se_AssumeRoleRequest(input, context),\n        [_A]: _AR,\n        [_V]: _,\n    });\n    return buildHttpRpcRequest(context, headers, \"/\", undefined, body);\n};\nexport const se_AssumeRoleWithWebIdentityCommand = async (input, context) => {\n    const headers = SHARED_HEADERS;\n    let body;\n    body = buildFormUrlencodedString({\n        ...se_AssumeRoleWithWebIdentityRequest(input, context),\n        [_A]: _ARWWI,\n        [_V]: _,\n    });\n    return buildHttpRpcRequest(context, headers, \"/\", undefined, body);\n};\nexport const de_AssumeRoleCommand = async (output, context) => {\n    if (output.statusCode >= 300) {\n        return de_CommandError(output, context);\n    }\n    const data = await parseBody(output.body, context);\n    let contents = {};\n    contents = de_AssumeRoleResponse(data.AssumeRoleResult, context);\n    const response = {\n        $metadata: deserializeMetadata(output),\n        ...contents,\n    };\n    return response;\n};\nexport const de_AssumeRoleWithWebIdentityCommand = async (output, context) => {\n    if (output.statusCode >= 300) {\n        return de_CommandError(output, context);\n    }\n    const data = await parseBody(output.body, context);\n    let contents = {};\n    contents = de_AssumeRoleWithWebIdentityResponse(data.AssumeRoleWithWebIdentityResult, context);\n    const response = {\n        $metadata: deserializeMetadata(output),\n        ...contents,\n    };\n    return response;\n};\nconst de_CommandError = async (output, context) => {\n    const parsedOutput = {\n        ...output,\n        body: await parseErrorBody(output.body, context),\n    };\n    const errorCode = loadQueryErrorCode(output, parsedOutput.body);\n    switch (errorCode) {\n        case \"ExpiredTokenException\":\n        case \"com.amazonaws.sts#ExpiredTokenException\":\n            throw await de_ExpiredTokenExceptionRes(parsedOutput, context);\n        case \"MalformedPolicyDocument\":\n        case \"com.amazonaws.sts#MalformedPolicyDocumentException\":\n            throw await de_MalformedPolicyDocumentExceptionRes(parsedOutput, context);\n        case \"PackedPolicyTooLarge\":\n        case \"com.amazonaws.sts#PackedPolicyTooLargeException\":\n            throw await de_PackedPolicyTooLargeExceptionRes(parsedOutput, context);\n        case \"RegionDisabledException\":\n        case \"com.amazonaws.sts#RegionDisabledException\":\n            throw await de_RegionDisabledExceptionRes(parsedOutput, context);\n        case \"IDPCommunicationError\":\n        case \"com.amazonaws.sts#IDPCommunicationErrorException\":\n            throw await de_IDPCommunicationErrorExceptionRes(parsedOutput, context);\n        case \"IDPRejectedClaim\":\n        case \"com.amazonaws.sts#IDPRejectedClaimException\":\n            throw await de_IDPRejectedClaimExceptionRes(parsedOutput, context);\n        case \"InvalidIdentityToken\":\n        case \"com.amazonaws.sts#InvalidIdentityTokenException\":\n            throw await de_InvalidIdentityTokenExceptionRes(parsedOutput, context);\n        default:\n            const parsedBody = parsedOutput.body;\n            return throwDefaultError({\n                output,\n                parsedBody: parsedBody.Error,\n                errorCode,\n            });\n    }\n};\nconst de_ExpiredTokenExceptionRes = async (parsedOutput, context) => {\n    const body = parsedOutput.body;\n    const deserialized = de_ExpiredTokenException(body.Error, context);\n    const exception = new ExpiredTokenException({\n        $metadata: deserializeMetadata(parsedOutput),\n        ...deserialized,\n    });\n    return __decorateServiceException(exception, body);\n};\nconst de_IDPCommunicationErrorExceptionRes = async (parsedOutput, context) => {\n    const body = parsedOutput.body;\n    const deserialized = de_IDPCommunicationErrorException(body.Error, context);\n    const exception = new IDPCommunicationErrorException({\n        $metadata: deserializeMetadata(parsedOutput),\n        ...deserialized,\n    });\n    return __decorateServiceException(exception, body);\n};\nconst de_IDPRejectedClaimExceptionRes = async (parsedOutput, context) => {\n    const body = parsedOutput.body;\n    const deserialized = de_IDPRejectedClaimException(body.Error, context);\n    const exception = new IDPRejectedClaimException({\n        $metadata: deserializeMetadata(parsedOutput),\n        ...deserialized,\n    });\n    return __decorateServiceException(exception, body);\n};\nconst de_InvalidIdentityTokenExceptionRes = async (parsedOutput, context) => {\n    const body = parsedOutput.body;\n    const deserialized = de_InvalidIdentityTokenException(body.Error, context);\n    const exception = new InvalidIdentityTokenException({\n        $metadata: deserializeMetadata(parsedOutput),\n        ...deserialized,\n    });\n    return __decorateServiceException(exception, body);\n};\nconst de_MalformedPolicyDocumentExceptionRes = async (parsedOutput, context) => {\n    const body = parsedOutput.body;\n    const deserialized = de_MalformedPolicyDocumentException(body.Error, context);\n    const exception = new MalformedPolicyDocumentException({\n        $metadata: deserializeMetadata(parsedOutput),\n        ...deserialized,\n    });\n    return __decorateServiceException(exception, body);\n};\nconst de_PackedPolicyTooLargeExceptionRes = async (parsedOutput, context) => {\n    const body = parsedOutput.body;\n    const deserialized = de_PackedPolicyTooLargeException(body.Error, context);\n    const exception = new PackedPolicyTooLargeException({\n        $metadata: deserializeMetadata(parsedOutput),\n        ...deserialized,\n    });\n    return __decorateServiceException(exception, body);\n};\nconst de_RegionDisabledExceptionRes = async (parsedOutput, context) => {\n    const body = parsedOutput.body;\n    const deserialized = de_RegionDisabledException(body.Error, context);\n    const exception = new RegionDisabledException({\n        $metadata: deserializeMetadata(parsedOutput),\n        ...deserialized,\n    });\n    return __decorateServiceException(exception, body);\n};\nconst se_AssumeRoleRequest = (input, context) => {\n    const entries = {};\n    if (input[_RA] != null) {\n        entries[_RA] = input[_RA];\n    }\n    if (input[_RSN] != null) {\n        entries[_RSN] = input[_RSN];\n    }\n    if (input[_PA] != null) {\n        const memberEntries = se_policyDescriptorListType(input[_PA], context);\n        if (input[_PA]?.length === 0) {\n            entries.PolicyArns = [];\n        }\n        Object.entries(memberEntries).forEach(([key, value]) => {\n            const loc = `PolicyArns.${key}`;\n            entries[loc] = value;\n        });\n    }\n    if (input[_P] != null) {\n        entries[_P] = input[_P];\n    }\n    if (input[_DS] != null) {\n        entries[_DS] = input[_DS];\n    }\n    if (input[_T] != null) {\n        const memberEntries = se_tagListType(input[_T], context);\n        if (input[_T]?.length === 0) {\n            entries.Tags = [];\n        }\n        Object.entries(memberEntries).forEach(([key, value]) => {\n            const loc = `Tags.${key}`;\n            entries[loc] = value;\n        });\n    }\n    if (input[_TTK] != null) {\n        const memberEntries = se_tagKeyListType(input[_TTK], context);\n        if (input[_TTK]?.length === 0) {\n            entries.TransitiveTagKeys = [];\n        }\n        Object.entries(memberEntries).forEach(([key, value]) => {\n            const loc = `TransitiveTagKeys.${key}`;\n            entries[loc] = value;\n        });\n    }\n    if (input[_EI] != null) {\n        entries[_EI] = input[_EI];\n    }\n    if (input[_SN] != null) {\n        entries[_SN] = input[_SN];\n    }\n    if (input[_TC] != null) {\n        entries[_TC] = input[_TC];\n    }\n    if (input[_SI] != null) {\n        entries[_SI] = input[_SI];\n    }\n    if (input[_PC] != null) {\n        const memberEntries = se_ProvidedContextsListType(input[_PC], context);\n        if (input[_PC]?.length === 0) {\n            entries.ProvidedContexts = [];\n        }\n        Object.entries(memberEntries).forEach(([key, value]) => {\n            const loc = `ProvidedContexts.${key}`;\n            entries[loc] = value;\n        });\n    }\n    return entries;\n};\nconst se_AssumeRoleWithWebIdentityRequest = (input, context) => {\n    const entries = {};\n    if (input[_RA] != null) {\n        entries[_RA] = input[_RA];\n    }\n    if (input[_RSN] != null) {\n        entries[_RSN] = input[_RSN];\n    }\n    if (input[_WIT] != null) {\n        entries[_WIT] = input[_WIT];\n    }\n    if (input[_PI] != null) {\n        entries[_PI] = input[_PI];\n    }\n    if (input[_PA] != null) {\n        const memberEntries = se_policyDescriptorListType(input[_PA], context);\n        if (input[_PA]?.length === 0) {\n            entries.PolicyArns = [];\n        }\n        Object.entries(memberEntries).forEach(([key, value]) => {\n            const loc = `PolicyArns.${key}`;\n            entries[loc] = value;\n        });\n    }\n    if (input[_P] != null) {\n        entries[_P] = input[_P];\n    }\n    if (input[_DS] != null) {\n        entries[_DS] = input[_DS];\n    }\n    return entries;\n};\nconst se_policyDescriptorListType = (input, context) => {\n    const entries = {};\n    let counter = 1;\n    for (const entry of input) {\n        if (entry === null) {\n            continue;\n        }\n        const memberEntries = se_PolicyDescriptorType(entry, context);\n        Object.entries(memberEntries).forEach(([key, value]) => {\n            entries[`member.${counter}.${key}`] = value;\n        });\n        counter++;\n    }\n    return entries;\n};\nconst se_PolicyDescriptorType = (input, context) => {\n    const entries = {};\n    if (input[_a] != null) {\n        entries[_a] = input[_a];\n    }\n    return entries;\n};\nconst se_ProvidedContext = (input, context) => {\n    const entries = {};\n    if (input[_PAr] != null) {\n        entries[_PAr] = input[_PAr];\n    }\n    if (input[_CA] != null) {\n        entries[_CA] = input[_CA];\n    }\n    return entries;\n};\nconst se_ProvidedContextsListType = (input, context) => {\n    const entries = {};\n    let counter = 1;\n    for (const entry of input) {\n        if (entry === null) {\n            continue;\n        }\n        const memberEntries = se_ProvidedContext(entry, context);\n        Object.entries(memberEntries).forEach(([key, value]) => {\n            entries[`member.${counter}.${key}`] = value;\n        });\n        counter++;\n    }\n    return entries;\n};\nconst se_Tag = (input, context) => {\n    const entries = {};\n    if (input[_K] != null) {\n        entries[_K] = input[_K];\n    }\n    if (input[_Va] != null) {\n        entries[_Va] = input[_Va];\n    }\n    return entries;\n};\nconst se_tagKeyListType = (input, context) => {\n    const entries = {};\n    let counter = 1;\n    for (const entry of input) {\n        if (entry === null) {\n            continue;\n        }\n        entries[`member.${counter}`] = entry;\n        counter++;\n    }\n    return entries;\n};\nconst se_tagListType = (input, context) => {\n    const entries = {};\n    let counter = 1;\n    for (const entry of input) {\n        if (entry === null) {\n            continue;\n        }\n        const memberEntries = se_Tag(entry, context);\n        Object.entries(memberEntries).forEach(([key, value]) => {\n            entries[`member.${counter}.${key}`] = value;\n        });\n        counter++;\n    }\n    return entries;\n};\nconst de_AssumedRoleUser = (output, context) => {\n    const contents = {};\n    if (output[_ARI] != null) {\n        contents[_ARI] = __expectString(output[_ARI]);\n    }\n    if (output[_Ar] != null) {\n        contents[_Ar] = __expectString(output[_Ar]);\n    }\n    return contents;\n};\nconst de_AssumeRoleResponse = (output, context) => {\n    const contents = {};\n    if (output[_C] != null) {\n        contents[_C] = de_Credentials(output[_C], context);\n    }\n    if (output[_ARU] != null) {\n        contents[_ARU] = de_AssumedRoleUser(output[_ARU], context);\n    }\n    if (output[_PPS] != null) {\n        contents[_PPS] = __strictParseInt32(output[_PPS]);\n    }\n    if (output[_SI] != null) {\n        contents[_SI] = __expectString(output[_SI]);\n    }\n    return contents;\n};\nconst de_AssumeRoleWithWebIdentityResponse = (output, context) => {\n    const contents = {};\n    if (output[_C] != null) {\n        contents[_C] = de_Credentials(output[_C], context);\n    }\n    if (output[_SFWIT] != null) {\n        contents[_SFWIT] = __expectString(output[_SFWIT]);\n    }\n    if (output[_ARU] != null) {\n        contents[_ARU] = de_AssumedRoleUser(output[_ARU], context);\n    }\n    if (output[_PPS] != null) {\n        contents[_PPS] = __strictParseInt32(output[_PPS]);\n    }\n    if (output[_Pr] != null) {\n        contents[_Pr] = __expectString(output[_Pr]);\n    }\n    if (output[_Au] != null) {\n        contents[_Au] = __expectString(output[_Au]);\n    }\n    if (output[_SI] != null) {\n        contents[_SI] = __expectString(output[_SI]);\n    }\n    return contents;\n};\nconst de_Credentials = (output, context) => {\n    const contents = {};\n    if (output[_AKI] != null) {\n        contents[_AKI] = __expectString(output[_AKI]);\n    }\n    if (output[_SAK] != null) {\n        contents[_SAK] = __expectString(output[_SAK]);\n    }\n    if (output[_ST] != null) {\n        contents[_ST] = __expectString(output[_ST]);\n    }\n    if (output[_E] != null) {\n        contents[_E] = __expectNonNull(__parseRfc3339DateTimeWithOffset(output[_E]));\n    }\n    return contents;\n};\nconst de_ExpiredTokenException = (output, context) => {\n    const contents = {};\n    if (output[_m] != null) {\n        contents[_m] = __expectString(output[_m]);\n    }\n    return contents;\n};\nconst de_IDPCommunicationErrorException = (output, context) => {\n    const contents = {};\n    if (output[_m] != null) {\n        contents[_m] = __expectString(output[_m]);\n    }\n    return contents;\n};\nconst de_IDPRejectedClaimException = (output, context) => {\n    const contents = {};\n    if (output[_m] != null) {\n        contents[_m] = __expectString(output[_m]);\n    }\n    return contents;\n};\nconst de_InvalidIdentityTokenException = (output, context) => {\n    const contents = {};\n    if (output[_m] != null) {\n        contents[_m] = __expectString(output[_m]);\n    }\n    return contents;\n};\nconst de_MalformedPolicyDocumentException = (output, context) => {\n    const contents = {};\n    if (output[_m] != null) {\n        contents[_m] = __expectString(output[_m]);\n    }\n    return contents;\n};\nconst de_PackedPolicyTooLargeException = (output, context) => {\n    const contents = {};\n    if (output[_m] != null) {\n        contents[_m] = __expectString(output[_m]);\n    }\n    return contents;\n};\nconst de_RegionDisabledException = (output, context) => {\n    const contents = {};\n    if (output[_m] != null) {\n        contents[_m] = __expectString(output[_m]);\n    }\n    return contents;\n};\nconst deserializeMetadata = (output) => ({\n    httpStatusCode: output.statusCode,\n    requestId: output.headers[\"x-amzn-requestid\"] ?? output.headers[\"x-amzn-request-id\"] ?? output.headers[\"x-amz-request-id\"],\n    extendedRequestId: output.headers[\"x-amz-id-2\"],\n    cfId: output.headers[\"x-amz-cf-id\"],\n});\nconst collectBodyString = (streamBody, context) => collectBody(streamBody, context).then((body) => context.utf8Encoder(body));\nconst throwDefaultError = withBaseException(__BaseException);\nconst buildHttpRpcRequest = async (context, headers, path, resolvedHostname, body) => {\n    const { hostname, protocol = \"https\", port, path: basePath } = await context.endpoint();\n    const contents = {\n        protocol,\n        hostname,\n        port,\n        method: \"POST\",\n        path: basePath.endsWith(\"/\") ? basePath.slice(0, -1) + path : basePath + path,\n        headers,\n    };\n    if (resolvedHostname !== undefined) {\n        contents.hostname = resolvedHostname;\n    }\n    if (body !== undefined) {\n        contents.body = body;\n    }\n    return new __HttpRequest(contents);\n};\nconst SHARED_HEADERS = {\n    \"content-type\": \"application/x-www-form-urlencoded\",\n};\nconst _ = \"2011-06-15\";\nconst _A = \"Action\";\nconst _AKI = \"AccessKeyId\";\nconst _AR = \"AssumeRole\";\nconst _ARI = \"AssumedRoleId\";\nconst _ARU = \"AssumedRoleUser\";\nconst _ARWWI = \"AssumeRoleWithWebIdentity\";\nconst _Ar = \"Arn\";\nconst _Au = \"Audience\";\nconst _C = \"Credentials\";\nconst _CA = \"ContextAssertion\";\nconst _DS = \"DurationSeconds\";\nconst _E = \"Expiration\";\nconst _EI = \"ExternalId\";\nconst _K = \"Key\";\nconst _P = \"Policy\";\nconst _PA = \"PolicyArns\";\nconst _PAr = \"ProviderArn\";\nconst _PC = \"ProvidedContexts\";\nconst _PI = \"ProviderId\";\nconst _PPS = \"PackedPolicySize\";\nconst _Pr = \"Provider\";\nconst _RA = \"RoleArn\";\nconst _RSN = \"RoleSessionName\";\nconst _SAK = \"SecretAccessKey\";\nconst _SFWIT = \"SubjectFromWebIdentityToken\";\nconst _SI = \"SourceIdentity\";\nconst _SN = \"SerialNumber\";\nconst _ST = \"SessionToken\";\nconst _T = \"Tags\";\nconst _TC = \"TokenCode\";\nconst _TTK = \"TransitiveTagKeys\";\nconst _V = \"Version\";\nconst _Va = \"Value\";\nconst _WIT = \"WebIdentityToken\";\nconst _a = \"arn\";\nconst _m = \"message\";\nconst buildFormUrlencodedString = (formEntries) => Object.entries(formEntries)\n    .map(([key, value]) => __extendedEncodeURIComponent(key) + \"=\" + __extendedEncodeURIComponent(value))\n    .join(\"&\");\nconst loadQueryErrorCode = (output, data) => {\n    if (data.Error?.Code !== undefined) {\n        return data.Error.Code;\n    }\n    if (output.statusCode == 404) {\n        return \"NotFound\";\n    }\n};\n","import { getEndpointPlugin } from \"@smithy/middleware-endpoint\";\nimport { getSerdePlugin } from \"@smithy/middleware-serde\";\nimport { Command as $Command } from \"@smithy/smithy-client\";\nimport { commonParams } from \"../endpoint/EndpointParameters\";\nimport { AssumeRoleResponseFilterSensitiveLog } from \"../models/models_0\";\nimport { de_AssumeRoleCommand, se_AssumeRoleCommand } from \"../protocols/Aws_query\";\nexport { $Command };\nexport class AssumeRoleCommand extends $Command\n    .classBuilder()\n    .ep(commonParams)\n    .m(function (Command, cs, config, o) {\n    return [\n        getSerdePlugin(config, this.serialize, this.deserialize),\n        getEndpointPlugin(config, Command.getEndpointParameterInstructions()),\n    ];\n})\n    .s(\"AWSSecurityTokenServiceV20110615\", \"AssumeRole\", {})\n    .n(\"STSClient\", \"AssumeRoleCommand\")\n    .f(void 0, AssumeRoleResponseFilterSensitiveLog)\n    .ser(se_AssumeRoleCommand)\n    .de(de_AssumeRoleCommand)\n    .build() {\n}\n","import { getEndpointPlugin } from \"@smithy/middleware-endpoint\";\nimport { getSerdePlugin } from \"@smithy/middleware-serde\";\nimport { Command as $Command } from \"@smithy/smithy-client\";\nimport { commonParams } from \"../endpoint/EndpointParameters\";\nimport { AssumeRoleWithWebIdentityRequestFilterSensitiveLog, AssumeRoleWithWebIdentityResponseFilterSensitiveLog, } from \"../models/models_0\";\nimport { de_AssumeRoleWithWebIdentityCommand, se_AssumeRoleWithWebIdentityCommand } from \"../protocols/Aws_query\";\nexport { $Command };\nexport class AssumeRoleWithWebIdentityCommand extends $Command\n    .classBuilder()\n    .ep(commonParams)\n    .m(function (Command, cs, config, o) {\n    return [\n        getSerdePlugin(config, this.serialize, this.deserialize),\n        getEndpointPlugin(config, Command.getEndpointParameterInstructions()),\n    ];\n})\n    .s(\"AWSSecurityTokenServiceV20110615\", \"AssumeRoleWithWebIdentity\", {})\n    .n(\"STSClient\", \"AssumeRoleWithWebIdentityCommand\")\n    .f(AssumeRoleWithWebIdentityRequestFilterSensitiveLog, AssumeRoleWithWebIdentityResponseFilterSensitiveLog)\n    .ser(se_AssumeRoleWithWebIdentityCommand)\n    .de(de_AssumeRoleWithWebIdentityCommand)\n    .build() {\n}\n","import { createAggregatedClient } from \"@smithy/smithy-client\";\nimport { AssumeRoleCommand } from \"./commands/AssumeRoleCommand\";\nimport { AssumeRoleWithWebIdentityCommand, } from \"./commands/AssumeRoleWithWebIdentityCommand\";\nimport { STSClient } from \"./STSClient\";\nconst commands = {\n    AssumeRoleCommand,\n    AssumeRoleWithWebIdentityCommand,\n};\nexport class STS extends STSClient {\n}\ncreateAggregatedClient(commands, STS);\n","import { setCredentialFeature } from \"@aws-sdk/core/client\";\nimport { AssumeRoleCommand } from \"./commands/AssumeRoleCommand\";\nimport { AssumeRoleWithWebIdentityCommand, } from \"./commands/AssumeRoleWithWebIdentityCommand\";\nconst ASSUME_ROLE_DEFAULT_REGION = \"us-east-1\";\nconst getAccountIdFromAssumedRoleUser = (assumedRoleUser) => {\n    if (typeof assumedRoleUser?.Arn === \"string\") {\n        const arnComponents = assumedRoleUser.Arn.split(\":\");\n        if (arnComponents.length > 4 && arnComponents[4] !== \"\") {\n            return arnComponents[4];\n        }\n    }\n    return undefined;\n};\nconst resolveRegion = async (_region, _parentRegion, credentialProviderLogger) => {\n    const region = typeof _region === \"function\" ? await _region() : _region;\n    const parentRegion = typeof _parentRegion === \"function\" ? await _parentRegion() : _parentRegion;\n    credentialProviderLogger?.debug?.(\"@aws-sdk/client-sts::resolveRegion\", \"accepting first of:\", `${region} (provider)`, `${parentRegion} (parent client)`, `${ASSUME_ROLE_DEFAULT_REGION} (STS default)`);\n    return region ?? parentRegion ?? ASSUME_ROLE_DEFAULT_REGION;\n};\nexport const getDefaultRoleAssumer = (stsOptions, STSClient) => {\n    let stsClient;\n    let closureSourceCreds;\n    return async (sourceCreds, params) => {\n        closureSourceCreds = sourceCreds;\n        if (!stsClient) {\n            const { logger = stsOptions?.parentClientConfig?.logger, region, requestHandler = stsOptions?.parentClientConfig?.requestHandler, credentialProviderLogger, } = stsOptions;\n            const resolvedRegion = await resolveRegion(region, stsOptions?.parentClientConfig?.region, credentialProviderLogger);\n            const isCompatibleRequestHandler = !isH2(requestHandler);\n            stsClient = new STSClient({\n                profile: stsOptions?.parentClientConfig?.profile,\n                credentialDefaultProvider: () => async () => closureSourceCreds,\n                region: resolvedRegion,\n                requestHandler: isCompatibleRequestHandler ? requestHandler : undefined,\n                logger: logger,\n            });\n        }\n        const { Credentials, AssumedRoleUser } = await stsClient.send(new AssumeRoleCommand(params));\n        if (!Credentials || !Credentials.AccessKeyId || !Credentials.SecretAccessKey) {\n            throw new Error(`Invalid response from STS.assumeRole call with role ${params.RoleArn}`);\n        }\n        const accountId = getAccountIdFromAssumedRoleUser(AssumedRoleUser);\n        const credentials = {\n            accessKeyId: Credentials.AccessKeyId,\n            secretAccessKey: Credentials.SecretAccessKey,\n            sessionToken: Credentials.SessionToken,\n            expiration: Credentials.Expiration,\n            ...(Credentials.CredentialScope && { credentialScope: Credentials.CredentialScope }),\n            ...(accountId && { accountId }),\n        };\n        setCredentialFeature(credentials, \"CREDENTIALS_STS_ASSUME_ROLE\", \"i\");\n        return credentials;\n    };\n};\nexport const getDefaultRoleAssumerWithWebIdentity = (stsOptions, STSClient) => {\n    let stsClient;\n    return async (params) => {\n        if (!stsClient) {\n            const { logger = stsOptions?.parentClientConfig?.logger, region, requestHandler = stsOptions?.parentClientConfig?.requestHandler, credentialProviderLogger, } = stsOptions;\n            const resolvedRegion = await resolveRegion(region, stsOptions?.parentClientConfig?.region, credentialProviderLogger);\n            const isCompatibleRequestHandler = !isH2(requestHandler);\n            stsClient = new STSClient({\n                profile: stsOptions?.parentClientConfig?.profile,\n                region: resolvedRegion,\n                requestHandler: isCompatibleRequestHandler ? requestHandler : undefined,\n                logger: logger,\n            });\n        }\n        const { Credentials, AssumedRoleUser } = await stsClient.send(new AssumeRoleWithWebIdentityCommand(params));\n        if (!Credentials || !Credentials.AccessKeyId || !Credentials.SecretAccessKey) {\n            throw new Error(`Invalid response from STS.assumeRoleWithWebIdentity call with role ${params.RoleArn}`);\n        }\n        const accountId = getAccountIdFromAssumedRoleUser(AssumedRoleUser);\n        const credentials = {\n            accessKeyId: Credentials.AccessKeyId,\n            secretAccessKey: Credentials.SecretAccessKey,\n            sessionToken: Credentials.SessionToken,\n            expiration: Credentials.Expiration,\n            ...(Credentials.CredentialScope && { credentialScope: Credentials.CredentialScope }),\n            ...(accountId && { accountId }),\n        };\n        if (accountId) {\n            setCredentialFeature(credentials, \"RESOLVED_ACCOUNT_ID\", \"T\");\n        }\n        setCredentialFeature(credentials, \"CREDENTIALS_STS_ASSUME_ROLE_WEB_ID\", \"k\");\n        return credentials;\n    };\n};\nexport const decorateDefaultCredentialProvider = (provider) => (input) => provider({\n    roleAssumer: getDefaultRoleAssumer(input, input.stsClientCtor),\n    roleAssumerWithWebIdentity: getDefaultRoleAssumerWithWebIdentity(input, input.stsClientCtor),\n    ...input,\n});\nconst isH2 = (requestHandler) => {\n    return requestHandler?.metadata?.handlerProtocol === \"h2\";\n};\n","import { getDefaultRoleAssumer as StsGetDefaultRoleAssumer, getDefaultRoleAssumerWithWebIdentity as StsGetDefaultRoleAssumerWithWebIdentity, } from \"./defaultStsRoleAssumers\";\nimport { STSClient } from \"./STSClient\";\nconst getCustomizableStsClientCtor = (baseCtor, customizations) => {\n    if (!customizations)\n        return baseCtor;\n    else\n        return class CustomizableSTSClient extends baseCtor {\n            constructor(config) {\n                super(config);\n                for (const customization of customizations) {\n                    this.middlewareStack.use(customization);\n                }\n            }\n        };\n};\nexport const getDefaultRoleAssumer = (stsOptions = {}, stsPlugins) => StsGetDefaultRoleAssumer(stsOptions, getCustomizableStsClientCtor(STSClient, stsPlugins));\nexport const getDefaultRoleAssumerWithWebIdentity = (stsOptions = {}, stsPlugins) => StsGetDefaultRoleAssumerWithWebIdentity(stsOptions, getCustomizableStsClientCtor(STSClient, stsPlugins));\nexport const decorateDefaultCredentialProvider = (provider) => (input) => provider({\n    roleAssumer: getDefaultRoleAssumer(input),\n    roleAssumerWithWebIdentity: getDefaultRoleAssumerWithWebIdentity(input),\n    ...input,\n});\n"],"names":["defaultSTSHttpAuthSchemeParametersProvider","async","config","context","input","operation","getSmithyContext","region","normalizeProvider","Error","defaultSTSHttpAuthSchemeProvider","authParameters","options","push","schemeId","signingProperties","name","propertiesExtractor","createAwsAuthSigv4HttpAuthOption","resolveHttpAuthSchemeConfig","config_0","stsClientCtor","STSClient","resolveAwsSdkSigV4Config","commonParams","UseGlobalEndpoint","type","UseFIPS","Endpoint","Region","UseDualStack","F","G","H","I","J","a","b","c","d","e","g","h","i","j","k","l","m","n","default","o","p","q","r","assign","s","t","u","url","properties","authSchemes","signingName","signingRegion","headers","v","w","conditions","x","y","z","A","B","C","D","E","ruleSet","version","parameters","rules","endpoint","error","cache","EndpointCache","size","params","defaultEndpointResolver","endpointParams","get","resolveEndpoint","logger","customEndpointFunctions","aws","awsEndpointFunctions","getRuntimeConfig","emitWarningIfUnsupportedVersion","process","defaultsMode","resolveDefaultsModeConfig","defaultConfigProvider","then","loadConfigsForDefaultMode","clientSharedValues","apiVersion","base64Decoder","fromBase64","base64Encoder","toBase64","disableHostPrefix","endpointProvider","extensions","httpAuthSchemeProvider","httpAuthSchemes","identityProvider","ipc","getIdentityProvider","signer","AwsSdkSigV4Signer","NoAuthSigner","NoOpLogger","serviceId","urlParser","parseUrl","utf8Decoder","fromUtf8","utf8Encoder","toUtf8","getSharedRuntimeConfig","awsCheckVersion","profileConfig","profile","runtime","bodyLengthChecker","calculateBodyLength","defaultUserAgentProvider","createDefaultUserAgentProvider","clientVersion","packageInfo","idProps","credentialDefaultProvider","__config","maxAttempts","loadNodeConfig","NODE_MAX_ATTEMPT_CONFIG_OPTIONS","NODE_REGION_CONFIG_OPTIONS","NODE_REGION_CONFIG_FILE_OPTIONS","requestHandler","RequestHandler","create","retryMode","NODE_RETRY_MODE_CONFIG_OPTIONS","DEFAULT_RETRY_MODE","sha256","Hash","bind","streamCollector","useDualstackEndpoint","NODE_USE_DUALSTACK_ENDPOINT_CONFIG_OPTIONS","useFipsEndpoint","NODE_USE_FIPS_ENDPOINT_CONFIG_OPTIONS","userAgentAppId","NODE_APP_ID_CONFIG_OPTIONS","getHttpAuthExtensionConfiguration","runtimeConfig","_httpAuthSchemes","_httpAuthSchemeProvider","_credentials","credentials","setHttpAuthScheme","httpAuthScheme","index","findIndex","scheme","splice","setHttpAuthSchemeProvider","setCredentials","__Client","constructor","configuration","_config_0","__getRuntimeConfig","_config_1","useGlobalEndpoint","defaultSigningName","_config_2","resolveUserAgentConfig","_config_3","resolveRetryConfig","_config_4","resolveRegionConfig","_config_5","resolveHostHeaderConfig","_config_6","resolveEndpointConfig","_config_8","extensionConfiguration","getAwsRegionExtensionConfiguration","getDefaultExtensionConfiguration","getHttpHandlerExtensionConfiguration","forEach","extension","configure","resolveAwsRegionExtensionConfiguration","resolveDefaultRuntimeConfig","resolveHttpHandlerRuntimeConfig","resolveRuntimeExtensions","super","this","middlewareStack","use","getUserAgentPlugin","getRetryPlugin","getContentLengthPlugin","getHostHeaderPlugin","getLoggerPlugin","getRecursionDetectionPlugin","getHttpAuthSchemeEndpointRuleSetPlugin","httpAuthSchemeParametersProvider","identityProviderConfigProvider","DefaultIdentityProviderConfig","getHttpSigningPlugin","destroy","STSServiceException","__ServiceException","Object","setPrototypeOf","prototype","CredentialsFilterSensitiveLog","obj","SecretAccessKey","SENSITIVE_STRING","AssumeRoleResponseFilterSensitiveLog","Credentials","ExpiredTokenException","__BaseException","$fault","opts","MalformedPolicyDocumentException","PackedPolicyTooLargeException","RegionDisabledException","IDPRejectedClaimException","InvalidIdentityTokenException","AssumeRoleWithWebIdentityRequestFilterSensitiveLog","WebIdentityToken","AssumeRoleWithWebIdentityResponseFilterSensitiveLog","IDPCommunicationErrorException","se_AssumeRoleCommand","SHARED_HEADERS","body","buildFormUrlencodedString","se_AssumeRoleRequest","_A","_AR","_V","_","buildHttpRpcRequest","undefined","se_AssumeRoleWithWebIdentityCommand","se_AssumeRoleWithWebIdentityRequest","_ARWWI","de_AssumeRoleCommand","output","statusCode","de_CommandError","data","parseBody","contents","de_AssumeRoleResponse","AssumeRoleResult","$metadata","deserializeMetadata","de_AssumeRoleWithWebIdentityCommand","de_AssumeRoleWithWebIdentityResponse","AssumeRoleWithWebIdentityResult","parsedOutput","parseErrorBody","errorCode","loadQueryErrorCode","de_ExpiredTokenExceptionRes","de_MalformedPolicyDocumentExceptionRes","de_PackedPolicyTooLargeExceptionRes","de_RegionDisabledExceptionRes","de_IDPCommunicationErrorExceptionRes","de_IDPRejectedClaimExceptionRes","de_InvalidIdentityTokenExceptionRes","parsedBody","throwDefaultError","deserialized","de_ExpiredTokenException","exception","__decorateServiceException","de_IDPCommunicationErrorException","de_IDPRejectedClaimException","de_InvalidIdentityTokenException","de_MalformedPolicyDocumentException","de_PackedPolicyTooLargeException","de_RegionDisabledException","entries","_RA","_RSN","_PA","memberEntries","se_policyDescriptorListType","length","PolicyArns","key","value","_P","_DS","_T","se_tagListType","Tags","_TTK","se_tagKeyListType","TransitiveTagKeys","_EI","_SN","_TC","_SI","_PC","se_ProvidedContextsListType","ProvidedContexts","_WIT","_PI","counter","entry","se_PolicyDescriptorType","_a","se_ProvidedContext","_PAr","_CA","se_Tag","_K","_Va","de_AssumedRoleUser","_ARI","__expectString","_Ar","_C","de_Credentials","_ARU","_PPS","__strictParseInt32","_SFWIT","_Pr","_Au","_AKI","_SAK","_ST","_E","__expectNonNull","__parseRfc3339DateTimeWithOffset","_m","httpStatusCode","requestId","extendedRequestId","cfId","withBaseException","path","resolvedHostname","hostname","protocol","port","basePath","method","endsWith","slice","__HttpRequest","formEntries","map","__extendedEncodeURIComponent","join","Code","AssumeRoleCommand","$Command","classBuilder","ep","Command","cs","getSerdePlugin","serialize","deserialize","getEndpointPlugin","getEndpointParameterInstructions","f","ser","de","build","AssumeRoleWithWebIdentityCommand","commands","STS","createAggregatedClient","ASSUME_ROLE_DEFAULT_REGION","getAccountIdFromAssumedRoleUser","assumedRoleUser","Arn","arnComponents","split","resolveRegion","_region","_parentRegion","credentialProviderLogger","parentRegion","debug","isH2","metadata","handlerProtocol","getCustomizableStsClientCtor","baseCtor","customizations","customization","getDefaultRoleAssumer","stsOptions","stsPlugins","stsClient","closureSourceCreds","sourceCreds","parentClientConfig","resolvedRegion","isCompatibleRequestHandler","AssumedRoleUser","send","AccessKeyId","RoleArn","accountId","accessKeyId","secretAccessKey","sessionToken","SessionToken","expiration","Expiration","CredentialScope","credentialScope","setCredentialFeature","StsGetDefaultRoleAssumer","getDefaultRoleAssumerWithWebIdentity","StsGetDefaultRoleAssumerWithWebIdentity","decorateDefaultCredentialProvider","provider","roleAssumer","roleAssumerWithWebIdentity"],"mappings":"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"}