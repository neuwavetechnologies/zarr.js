{"version":3,"file":"index-71127057.js","sources":["../node_modules/@smithy/property-provider/dist-es/TokenProviderError.js","../node_modules/@smithy/shared-ini-file-loader/dist-es/getSSOTokenFilepath.js","../node_modules/@smithy/shared-ini-file-loader/dist-es/getSSOTokenFromFile.js","../node_modules/@smithy/shared-ini-file-loader/dist-es/getSsoSessionData.js","../node_modules/@smithy/shared-ini-file-loader/dist-es/loadSsoSessionData.js","../node_modules/@aws-sdk/credential-provider-sso/dist-es/isSsoProfile.js","../node_modules/@aws-sdk/token-providers/dist-es/constants.js","../node_modules/@aws-sdk/token-providers/dist-es/getSsoOidcClient.js","../node_modules/@aws-sdk/token-providers/dist-es/getNewSsoOidcToken.js","../node_modules/@aws-sdk/token-providers/dist-es/validateTokenExpiry.js","../node_modules/@aws-sdk/token-providers/dist-es/validateTokenKey.js","../node_modules/@aws-sdk/token-providers/dist-es/writeSSOTokenToFile.js","../node_modules/@aws-sdk/token-providers/dist-es/fromSso.js","../node_modules/@aws-sdk/credential-provider-sso/dist-es/resolveSSOCredentials.js","../node_modules/@aws-sdk/credential-provider-sso/dist-es/validateSsoProfile.js","../node_modules/@aws-sdk/credential-provider-sso/dist-es/fromSSO.js"],"sourcesContent":["import { ProviderError } from \"./ProviderError\";\nexport class TokenProviderError extends ProviderError {\n    constructor(message, options = true) {\n        super(message, options);\n        this.name = \"TokenProviderError\";\n        Object.setPrototypeOf(this, TokenProviderError.prototype);\n    }\n}\n","import { createHash } from \"crypto\";\nimport { join } from \"path\";\nimport { getHomeDir } from \"./getHomeDir\";\nexport const getSSOTokenFilepath = (id) => {\n    const hasher = createHash(\"sha1\");\n    const cacheName = hasher.update(id).digest(\"hex\");\n    return join(getHomeDir(), \".aws\", \"sso\", \"cache\", `${cacheName}.json`);\n};\n","import { promises as fsPromises } from \"fs\";\nimport { getSSOTokenFilepath } from \"./getSSOTokenFilepath\";\nconst { readFile } = fsPromises;\nexport const getSSOTokenFromFile = async (id) => {\n    const ssoTokenFilepath = getSSOTokenFilepath(id);\n    const ssoTokenText = await readFile(ssoTokenFilepath, \"utf8\");\n    return JSON.parse(ssoTokenText);\n};\n","import { IniSectionType } from \"@smithy/types\";\nimport { CONFIG_PREFIX_SEPARATOR } from \"./loadSharedConfigFiles\";\nexport const getSsoSessionData = (data) => Object.entries(data)\n    .filter(([key]) => key.startsWith(IniSectionType.SSO_SESSION + CONFIG_PREFIX_SEPARATOR))\n    .reduce((acc, [key, value]) => ({ ...acc, [key.substring(key.indexOf(CONFIG_PREFIX_SEPARATOR) + 1)]: value }), {});\n","import { getConfigFilepath } from \"./getConfigFilepath\";\nimport { getSsoSessionData } from \"./getSsoSessionData\";\nimport { parseIni } from \"./parseIni\";\nimport { slurpFile } from \"./slurpFile\";\nconst swallowError = () => ({});\nexport const loadSsoSessionData = async (init = {}) => slurpFile(init.configFilepath ?? getConfigFilepath())\n    .then(parseIni)\n    .then(getSsoSessionData)\n    .catch(swallowError);\n","export const isSsoProfile = (arg) => arg &&\n    (typeof arg.sso_start_url === \"string\" ||\n        typeof arg.sso_account_id === \"string\" ||\n        typeof arg.sso_session === \"string\" ||\n        typeof arg.sso_region === \"string\" ||\n        typeof arg.sso_role_name === \"string\");\n","export const EXPIRE_WINDOW_MS = 5 * 60 * 1000;\nexport const REFRESH_MESSAGE = `To refresh this SSO session run 'aws sso login' with the corresponding profile.`;\n","export const getSsoOidcClient = async (ssoRegion, init = {}) => {\n    const { SSOOIDCClient } = await import(\"@aws-sdk/nested-clients/sso-oidc\");\n    const ssoOidcClient = new SSOOIDCClient(Object.assign({}, init.clientConfig ?? {}, {\n        region: ssoRegion ?? init.clientConfig?.region,\n        logger: init.clientConfig?.logger ?? init.parentClientConfig?.logger,\n    }));\n    return ssoOidcClient;\n};\n","import { getSsoOidcClient } from \"./getSsoOidcClient\";\nexport const getNewSsoOidcToken = async (ssoToken, ssoRegion, init = {}) => {\n    const { CreateTokenCommand } = await import(\"@aws-sdk/nested-clients/sso-oidc\");\n    const ssoOidcClient = await getSsoOidcClient(ssoRegion, init);\n    return ssoOidcClient.send(new CreateTokenCommand({\n        clientId: ssoToken.clientId,\n        clientSecret: ssoToken.clientSecret,\n        refreshToken: ssoToken.refreshToken,\n        grantType: \"refresh_token\",\n    }));\n};\n","import { TokenProviderError } from \"@smithy/property-provider\";\nimport { REFRESH_MESSAGE } from \"./constants\";\nexport const validateTokenExpiry = (token) => {\n    if (token.expiration && token.expiration.getTime() < Date.now()) {\n        throw new TokenProviderError(`Token is expired. ${REFRESH_MESSAGE}`, false);\n    }\n};\n","import { TokenProviderError } from \"@smithy/property-provider\";\nimport { REFRESH_MESSAGE } from \"./constants\";\nexport const validateTokenKey = (key, value, forRefresh = false) => {\n    if (typeof value === \"undefined\") {\n        throw new TokenProviderError(`Value not present for '${key}' in SSO Token${forRefresh ? \". Cannot refresh\" : \"\"}. ${REFRESH_MESSAGE}`, false);\n    }\n};\n","import { getSSOTokenFilepath } from \"@smithy/shared-ini-file-loader\";\nimport { promises as fsPromises } from \"fs\";\nconst { writeFile } = fsPromises;\nexport const writeSSOTokenToFile = (id, ssoToken) => {\n    const tokenFilepath = getSSOTokenFilepath(id);\n    const tokenString = JSON.stringify(ssoToken, null, 2);\n    return writeFile(tokenFilepath, tokenString);\n};\n","import { TokenProviderError } from \"@smithy/property-provider\";\nimport { getProfileName, getSSOTokenFromFile, loadSsoSessionData, parseKnownFiles, } from \"@smithy/shared-ini-file-loader\";\nimport { EXPIRE_WINDOW_MS, REFRESH_MESSAGE } from \"./constants\";\nimport { getNewSsoOidcToken } from \"./getNewSsoOidcToken\";\nimport { validateTokenExpiry } from \"./validateTokenExpiry\";\nimport { validateTokenKey } from \"./validateTokenKey\";\nimport { writeSSOTokenToFile } from \"./writeSSOTokenToFile\";\nconst lastRefreshAttemptTime = new Date(0);\nexport const fromSso = (_init = {}) => async ({ callerClientConfig } = {}) => {\n    const init = {\n        ..._init,\n        parentClientConfig: {\n            ...callerClientConfig,\n            ..._init.parentClientConfig,\n        },\n    };\n    init.logger?.debug(\"@aws-sdk/token-providers - fromSso\");\n    const profiles = await parseKnownFiles(init);\n    const profileName = getProfileName({\n        profile: init.profile ?? callerClientConfig?.profile,\n    });\n    const profile = profiles[profileName];\n    if (!profile) {\n        throw new TokenProviderError(`Profile '${profileName}' could not be found in shared credentials file.`, false);\n    }\n    else if (!profile[\"sso_session\"]) {\n        throw new TokenProviderError(`Profile '${profileName}' is missing required property 'sso_session'.`);\n    }\n    const ssoSessionName = profile[\"sso_session\"];\n    const ssoSessions = await loadSsoSessionData(init);\n    const ssoSession = ssoSessions[ssoSessionName];\n    if (!ssoSession) {\n        throw new TokenProviderError(`Sso session '${ssoSessionName}' could not be found in shared credentials file.`, false);\n    }\n    for (const ssoSessionRequiredKey of [\"sso_start_url\", \"sso_region\"]) {\n        if (!ssoSession[ssoSessionRequiredKey]) {\n            throw new TokenProviderError(`Sso session '${ssoSessionName}' is missing required property '${ssoSessionRequiredKey}'.`, false);\n        }\n    }\n    const ssoStartUrl = ssoSession[\"sso_start_url\"];\n    const ssoRegion = ssoSession[\"sso_region\"];\n    let ssoToken;\n    try {\n        ssoToken = await getSSOTokenFromFile(ssoSessionName);\n    }\n    catch (e) {\n        throw new TokenProviderError(`The SSO session token associated with profile=${profileName} was not found or is invalid. ${REFRESH_MESSAGE}`, false);\n    }\n    validateTokenKey(\"accessToken\", ssoToken.accessToken);\n    validateTokenKey(\"expiresAt\", ssoToken.expiresAt);\n    const { accessToken, expiresAt } = ssoToken;\n    const existingToken = { token: accessToken, expiration: new Date(expiresAt) };\n    if (existingToken.expiration.getTime() - Date.now() > EXPIRE_WINDOW_MS) {\n        return existingToken;\n    }\n    if (Date.now() - lastRefreshAttemptTime.getTime() < 30 * 1000) {\n        validateTokenExpiry(existingToken);\n        return existingToken;\n    }\n    validateTokenKey(\"clientId\", ssoToken.clientId, true);\n    validateTokenKey(\"clientSecret\", ssoToken.clientSecret, true);\n    validateTokenKey(\"refreshToken\", ssoToken.refreshToken, true);\n    try {\n        lastRefreshAttemptTime.setTime(Date.now());\n        const newSsoOidcToken = await getNewSsoOidcToken(ssoToken, ssoRegion, init);\n        validateTokenKey(\"accessToken\", newSsoOidcToken.accessToken);\n        validateTokenKey(\"expiresIn\", newSsoOidcToken.expiresIn);\n        const newTokenExpiration = new Date(Date.now() + newSsoOidcToken.expiresIn * 1000);\n        try {\n            await writeSSOTokenToFile(ssoSessionName, {\n                ...ssoToken,\n                accessToken: newSsoOidcToken.accessToken,\n                expiresAt: newTokenExpiration.toISOString(),\n                refreshToken: newSsoOidcToken.refreshToken,\n            });\n        }\n        catch (error) {\n        }\n        return {\n            token: newSsoOidcToken.accessToken,\n            expiration: newTokenExpiration,\n        };\n    }\n    catch (error) {\n        validateTokenExpiry(existingToken);\n        return existingToken;\n    }\n};\n","import { setCredentialFeature } from \"@aws-sdk/core/client\";\nimport { fromSso as getSsoTokenProvider } from \"@aws-sdk/token-providers\";\nimport { CredentialsProviderError } from \"@smithy/property-provider\";\nimport { getSSOTokenFromFile } from \"@smithy/shared-ini-file-loader\";\nconst SHOULD_FAIL_CREDENTIAL_CHAIN = false;\nexport const resolveSSOCredentials = async ({ ssoStartUrl, ssoSession, ssoAccountId, ssoRegion, ssoRoleName, ssoClient, clientConfig, parentClientConfig, profile, logger, }) => {\n    let token;\n    const refreshMessage = `To refresh this SSO session run aws sso login with the corresponding profile.`;\n    if (ssoSession) {\n        try {\n            const _token = await getSsoTokenProvider({ profile })();\n            token = {\n                accessToken: _token.token,\n                expiresAt: new Date(_token.expiration).toISOString(),\n            };\n        }\n        catch (e) {\n            throw new CredentialsProviderError(e.message, {\n                tryNextLink: SHOULD_FAIL_CREDENTIAL_CHAIN,\n                logger,\n            });\n        }\n    }\n    else {\n        try {\n            token = await getSSOTokenFromFile(ssoStartUrl);\n        }\n        catch (e) {\n            throw new CredentialsProviderError(`The SSO session associated with this profile is invalid. ${refreshMessage}`, {\n                tryNextLink: SHOULD_FAIL_CREDENTIAL_CHAIN,\n                logger,\n            });\n        }\n    }\n    if (new Date(token.expiresAt).getTime() - Date.now() <= 0) {\n        throw new CredentialsProviderError(`The SSO session associated with this profile has expired. ${refreshMessage}`, {\n            tryNextLink: SHOULD_FAIL_CREDENTIAL_CHAIN,\n            logger,\n        });\n    }\n    const { accessToken } = token;\n    const { SSOClient, GetRoleCredentialsCommand } = await import(\"./loadSso\");\n    const sso = ssoClient ||\n        new SSOClient(Object.assign({}, clientConfig ?? {}, {\n            logger: clientConfig?.logger ?? parentClientConfig?.logger,\n            region: clientConfig?.region ?? ssoRegion,\n        }));\n    let ssoResp;\n    try {\n        ssoResp = await sso.send(new GetRoleCredentialsCommand({\n            accountId: ssoAccountId,\n            roleName: ssoRoleName,\n            accessToken,\n        }));\n    }\n    catch (e) {\n        throw new CredentialsProviderError(e, {\n            tryNextLink: SHOULD_FAIL_CREDENTIAL_CHAIN,\n            logger,\n        });\n    }\n    const { roleCredentials: { accessKeyId, secretAccessKey, sessionToken, expiration, credentialScope, accountId } = {}, } = ssoResp;\n    if (!accessKeyId || !secretAccessKey || !sessionToken || !expiration) {\n        throw new CredentialsProviderError(\"SSO returns an invalid temporary credential.\", {\n            tryNextLink: SHOULD_FAIL_CREDENTIAL_CHAIN,\n            logger,\n        });\n    }\n    const credentials = {\n        accessKeyId,\n        secretAccessKey,\n        sessionToken,\n        expiration: new Date(expiration),\n        ...(credentialScope && { credentialScope }),\n        ...(accountId && { accountId }),\n    };\n    if (ssoSession) {\n        setCredentialFeature(credentials, \"CREDENTIALS_SSO\", \"s\");\n    }\n    else {\n        setCredentialFeature(credentials, \"CREDENTIALS_SSO_LEGACY\", \"u\");\n    }\n    return credentials;\n};\n","import { CredentialsProviderError } from \"@smithy/property-provider\";\nexport const validateSsoProfile = (profile, logger) => {\n    const { sso_start_url, sso_account_id, sso_region, sso_role_name } = profile;\n    if (!sso_start_url || !sso_account_id || !sso_region || !sso_role_name) {\n        throw new CredentialsProviderError(`Profile is configured with invalid SSO credentials. Required parameters \"sso_account_id\", ` +\n            `\"sso_region\", \"sso_role_name\", \"sso_start_url\". Got ${Object.keys(profile).join(\", \")}\\nReference: https://docs.aws.amazon.com/cli/latest/userguide/cli-configure-sso.html`, { tryNextLink: false, logger });\n    }\n    return profile;\n};\n","import { CredentialsProviderError } from \"@smithy/property-provider\";\nimport { getProfileName, loadSsoSessionData, parseKnownFiles } from \"@smithy/shared-ini-file-loader\";\nimport { isSsoProfile } from \"./isSsoProfile\";\nimport { resolveSSOCredentials } from \"./resolveSSOCredentials\";\nimport { validateSsoProfile } from \"./validateSsoProfile\";\nexport const fromSSO = (init = {}) => async ({ callerClientConfig } = {}) => {\n    init.logger?.debug(\"@aws-sdk/credential-provider-sso - fromSSO\");\n    const { ssoStartUrl, ssoAccountId, ssoRegion, ssoRoleName, ssoSession } = init;\n    const { ssoClient } = init;\n    const profileName = getProfileName({\n        profile: init.profile ?? callerClientConfig?.profile,\n    });\n    if (!ssoStartUrl && !ssoAccountId && !ssoRegion && !ssoRoleName && !ssoSession) {\n        const profiles = await parseKnownFiles(init);\n        const profile = profiles[profileName];\n        if (!profile) {\n            throw new CredentialsProviderError(`Profile ${profileName} was not found.`, { logger: init.logger });\n        }\n        if (!isSsoProfile(profile)) {\n            throw new CredentialsProviderError(`Profile ${profileName} is not configured with SSO credentials.`, {\n                logger: init.logger,\n            });\n        }\n        if (profile?.sso_session) {\n            const ssoSessions = await loadSsoSessionData(init);\n            const session = ssoSessions[profile.sso_session];\n            const conflictMsg = ` configurations in profile ${profileName} and sso-session ${profile.sso_session}`;\n            if (ssoRegion && ssoRegion !== session.sso_region) {\n                throw new CredentialsProviderError(`Conflicting SSO region` + conflictMsg, {\n                    tryNextLink: false,\n                    logger: init.logger,\n                });\n            }\n            if (ssoStartUrl && ssoStartUrl !== session.sso_start_url) {\n                throw new CredentialsProviderError(`Conflicting SSO start_url` + conflictMsg, {\n                    tryNextLink: false,\n                    logger: init.logger,\n                });\n            }\n            profile.sso_region = session.sso_region;\n            profile.sso_start_url = session.sso_start_url;\n        }\n        const { sso_start_url, sso_account_id, sso_region, sso_role_name, sso_session } = validateSsoProfile(profile, init.logger);\n        return resolveSSOCredentials({\n            ssoStartUrl: sso_start_url,\n            ssoSession: sso_session,\n            ssoAccountId: sso_account_id,\n            ssoRegion: sso_region,\n            ssoRoleName: sso_role_name,\n            ssoClient: ssoClient,\n            clientConfig: init.clientConfig,\n            parentClientConfig: init.parentClientConfig,\n            profile: profileName,\n        });\n    }\n    else if (!ssoStartUrl || !ssoAccountId || !ssoRegion || !ssoRoleName) {\n        throw new CredentialsProviderError(\"Incomplete configuration. The fromSSO() argument hash must include \" +\n            '\"ssoStartUrl\", \"ssoAccountId\", \"ssoRegion\", \"ssoRoleName\"', { tryNextLink: false, logger: init.logger });\n    }\n    else {\n        return resolveSSOCredentials({\n            ssoStartUrl,\n            ssoSession,\n            ssoAccountId,\n            ssoRegion,\n            ssoRoleName,\n            ssoClient,\n            clientConfig: init.clientConfig,\n            parentClientConfig: init.parentClientConfig,\n            profile: profileName,\n        });\n    }\n};\n"],"names":["ProviderError","createHash","join","getHomeDir","fsPromises","IniSectionType","CONFIG_PREFIX_SEPARATOR","slurpFile","getConfigFilepath","parseIni","parseKnownFiles","getProfileName","getSsoTokenProvider","CredentialsProviderError","setCredentialFeature"],"mappings":"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"}