{"version":3,"file":"core.min.mjs","sources":["../src/compression/registry.ts","../src/mutableMapping.ts","../src/errors.ts","../src/core/slice.ts","../src/core/indexing.ts","../src/util.ts","../src/names.ts","../src/storage/index.ts","../src/metadata.ts","../src/attributes.ts","../src/nestedArray/types.ts","../src/nestedArray/ops.ts","../src/nestedArray/index.ts","../src/rawArray/ops.ts","../src/rawArray/index.ts","../node_modules/eventemitter3/index.js","../node_modules/p-timeout/index.js","../node_modules/p-queue/dist/priority-queue.js","../node_modules/p-queue/dist/lower-bound.js","../node_modules/p-queue/dist/index.js","../src/storage/httpStore.ts","../src/core/index.ts","../src/storage/memoryStore.ts","../src/creation.ts","../src/hierarchy.ts","../src/storage/objectStore.ts","../node_modules/@smithy/protocol-http/dist-es/extensions/httpExtensionConfiguration.js","../node_modules/@smithy/types/dist-es/auth/auth.js","../node_modules/@smithy/types/dist-es/auth/HttpApiKeyAuth.js","../node_modules/@smithy/types/dist-es/endpoint.js","../node_modules/@smithy/types/dist-es/extensions/checksum.js","../node_modules/@smithy/types/dist-es/http.js","../node_modules/@smithy/types/dist-es/middleware.js","../node_modules/@smithy/types/dist-es/profile.js","../node_modules/@smithy/types/dist-es/transfer.js","../node_modules/@smithy/protocol-http/dist-es/httpRequest.js","../node_modules/@smithy/protocol-http/dist-es/httpResponse.js","../node_modules/@aws-sdk/middleware-expect-continue/dist-es/index.js","../node_modules/@aws-sdk/middleware-flexible-checksums/dist-es/constants.js","../node_modules/@aws-sdk/middleware-flexible-checksums/dist-es/stringUnionSelector.js","../node_modules/@aws-sdk/middleware-flexible-checksums/dist-es/NODE_REQUEST_CHECKSUM_CALCULATION_CONFIG_OPTIONS.js","../node_modules/@aws-sdk/middleware-flexible-checksums/dist-es/NODE_RESPONSE_CHECKSUM_VALIDATION_CONFIG_OPTIONS.js","../node_modules/@aws-sdk/core/dist-es/submodules/client/emitWarningIfUnsupportedVersion.js","../node_modules/@aws-sdk/core/dist-es/submodules/client/setCredentialFeature.js","../node_modules/@aws-sdk/core/dist-es/submodules/client/setFeature.js","../node_modules/@aws-sdk/core/dist-es/submodules/httpAuthSchemes/utils/getDateHeader.js","../node_modules/@aws-sdk/core/dist-es/submodules/httpAuthSchemes/utils/getSkewCorrectedDate.js","../node_modules/@aws-sdk/core/dist-es/submodules/httpAuthSchemes/utils/getUpdatedSystemClockOffset.js","../node_modules/@aws-sdk/core/dist-es/submodules/httpAuthSchemes/utils/isClockSkewed.js","../node_modules/@aws-sdk/core/dist-es/submodules/httpAuthSchemes/aws_sdk/AwsSdkSigV4Signer.js","../node_modules/@aws-sdk/core/dist-es/submodules/httpAuthSchemes/aws_sdk/AwsSdkSigV4ASigner.js","../node_modules/@smithy/util-middleware/dist-es/getSmithyContext.js","../node_modules/@smithy/util-middleware/dist-es/normalizeProvider.js","../node_modules/@smithy/core/dist-es/middleware-http-auth-scheme/httpAuthSchemeMiddleware.js","../node_modules/@smithy/core/dist-es/middleware-http-auth-scheme/getHttpAuthSchemeEndpointRuleSetPlugin.js","../node_modules/@smithy/middleware-serde/dist-es/serdePlugin.js","../node_modules/@smithy/middleware-serde/dist-es/deserializerMiddleware.js","../node_modules/@smithy/middleware-serde/dist-es/serializerMiddleware.js","../node_modules/@smithy/core/dist-es/middleware-http-signing/httpSigningMiddleware.js","../node_modules/@smithy/core/dist-es/middleware-http-signing/getHttpSigningMiddleware.js","../node_modules/@smithy/core/dist-es/normalizeProvider.js","../node_modules/@smithy/is-array-buffer/dist-es/index.js","../node_modules/@smithy/util-buffer-from/dist-es/index.js","../node_modules/@smithy/util-base64/dist-es/fromBase64.js","../node_modules/@smithy/util-utf8/dist-es/fromUtf8.js","../node_modules/@smithy/util-utf8/dist-es/toUint8Array.js","../node_modules/@smithy/util-utf8/dist-es/toUtf8.js","../node_modules/@smithy/util-base64/dist-es/toBase64.js","../node_modules/@smithy/util-stream/dist-es/blob/Uint8ArrayBlobAdapter.js","../node_modules/@smithy/util-stream/dist-es/blob/transforms.js","../node_modules/@smithy/util-stream/dist-es/getAwsChunkedEncodingStream.js","../node_modules/@smithy/util-uri-escape/dist-es/escape-uri.js","../node_modules/@smithy/node-http-handler/dist-es/constants.js","../node_modules/@smithy/node-http-handler/dist-es/get-transformed-headers.js","../node_modules/@smithy/node-http-handler/dist-es/timing.js","../node_modules/@smithy/node-http-handler/dist-es/write-request-body.js","../node_modules/@smithy/node-http-handler/dist-es/node-http-handler.js","../node_modules/@smithy/querystring-builder/dist-es/index.js","../node_modules/@smithy/node-http-handler/dist-es/set-connection-timeout.js","../node_modules/@smithy/node-http-handler/dist-es/set-socket-timeout.js","../node_modules/@smithy/node-http-handler/dist-es/set-socket-keep-alive.js","../node_modules/@smithy/node-http-handler/dist-es/stream-collector/collector.js","../node_modules/@smithy/node-http-handler/dist-es/stream-collector/index.js","../node_modules/@smithy/fetch-http-handler/dist-es/stream-collector.js","../node_modules/@smithy/util-hex-encoding/dist-es/index.js","../node_modules/@smithy/util-stream/dist-es/stream-type-check.js","../node_modules/@smithy/util-stream/dist-es/sdk-stream-mixin.browser.js","../node_modules/@smithy/util-stream/dist-es/sdk-stream-mixin.js","../node_modules/@smithy/util-stream/dist-es/splitStream.js","../node_modules/@smithy/util-stream/dist-es/splitStream.browser.js","../node_modules/@smithy/util-stream/dist-es/headStream.js","../node_modules/@smithy/util-stream/dist-es/headStream.browser.js","../node_modules/@smithy/util-stream/dist-es/checksum/ChecksumStream.js","../node_modules/@smithy/util-stream/dist-es/checksum/ChecksumStream.browser.js","../node_modules/@smithy/util-stream/dist-es/checksum/createChecksumStream.js","../node_modules/@smithy/util-stream/dist-es/checksum/createChecksumStream.browser.js","../node_modules/@smithy/core/dist-es/submodules/protocols/collect-stream-body.js","../node_modules/@smithy/core/dist-es/submodules/protocols/extended-encode-uri-component.js","../node_modules/@smithy/core/dist-es/submodules/protocols/requestBuilder.js","../node_modules/@smithy/core/dist-es/submodules/protocols/resolve-path.js","../node_modules/@smithy/core/dist-es/util-identity-and-auth/DefaultIdentityProviderConfig.js","../node_modules/@smithy/core/dist-es/util-identity-and-auth/httpAuthSchemes/noAuth.js","../node_modules/@smithy/core/dist-es/util-identity-and-auth/memoizeIdentityProvider.js","../node_modules/@smithy/property-provider/dist-es/ProviderError.js","../node_modules/@smithy/property-provider/dist-es/CredentialsProviderError.js","../node_modules/@smithy/property-provider/dist-es/TokenProviderError.js","../node_modules/@smithy/property-provider/dist-es/chain.js","../node_modules/@smithy/property-provider/dist-es/memoize.js","../node_modules/@aws-sdk/core/dist-es/submodules/httpAuthSchemes/aws_sdk/resolveAwsSdkSigV4AConfig.js","../node_modules/@smithy/signature-v4/dist-es/constants.js","../node_modules/@smithy/signature-v4/dist-es/credentialDerivation.js","../node_modules/@smithy/signature-v4/dist-es/getCanonicalHeaders.js","../node_modules/@smithy/signature-v4/dist-es/getPayloadHash.js","../node_modules/@smithy/signature-v4/dist-es/HeaderFormatter.js","../node_modules/@smithy/signature-v4/dist-es/headerUtil.js","../node_modules/@smithy/signature-v4/dist-es/prepareRequest.js","../node_modules/@smithy/signature-v4/dist-es/utilDate.js","../node_modules/@smithy/signature-v4/dist-es/SignatureV4.js","../node_modules/@smithy/signature-v4/dist-es/moveHeadersToQuery.js","../node_modules/@smithy/signature-v4/dist-es/getCanonicalQuery.js","../node_modules/@aws-sdk/core/dist-es/submodules/httpAuthSchemes/aws_sdk/resolveAwsSdkSigV4Config.js","../node_modules/@smithy/middleware-stack/dist-es/MiddlewareStack.js","../node_modules/@smithy/smithy-client/dist-es/client.js","../node_modules/@smithy/smithy-client/dist-es/command.js","../node_modules/@smithy/smithy-client/dist-es/constants.js","../node_modules/@smithy/smithy-client/dist-es/create-aggregated-client.js","../node_modules/@smithy/smithy-client/dist-es/parse-utils.js","../node_modules/@smithy/smithy-client/dist-es/date-utils.js","../node_modules/@smithy/smithy-client/dist-es/exceptions.js","../node_modules/@smithy/smithy-client/dist-es/default-error-handler.js","../node_modules/@smithy/smithy-client/dist-es/defaults-mode.js","../node_modules/@smithy/smithy-client/dist-es/emitWarningIfUnsupportedVersion.js","../node_modules/@smithy/smithy-client/dist-es/extensions/checksum.js","../node_modules/@smithy/smithy-client/dist-es/extensions/retry.js","../node_modules/@smithy/smithy-client/dist-es/extensions/defaultExtensionConfiguration.js","../node_modules/@smithy/smithy-client/dist-es/get-value-from-text-node.js","../node_modules/@smithy/smithy-client/dist-es/is-serializable-header-value.js","../node_modules/@smithy/smithy-client/dist-es/NoOpLogger.js","../node_modules/@smithy/smithy-client/dist-es/object-mapping.js","../node_modules/@smithy/smithy-client/dist-es/serde-json.js","../node_modules/@aws-sdk/core/dist-es/submodules/protocols/common.js","../node_modules/@aws-sdk/core/dist-es/submodules/protocols/json/parseJsonBody.js","../node_modules/fast-xml-parser/src/util.js","../node_modules/fast-xml-parser/src/validator.js","../node_modules/fast-xml-parser/src/xmlparser/OptionsBuilder.js","../node_modules/fast-xml-parser/src/xmlparser/xmlNode.js","../node_modules/fast-xml-parser/src/xmlparser/DocTypeReader.js","../node_modules/strnum/strnum.js","../node_modules/fast-xml-parser/src/xmlparser/OrderedObjParser.js","../node_modules/fast-xml-parser/src/xmlparser/node2json.js","../node_modules/fast-xml-parser/src/xmlparser/XMLParser.js","../node_modules/fast-xml-parser/src/xmlbuilder/orderedJs2Xml.js","../node_modules/fast-xml-parser/src/xmlbuilder/json2xml.js","../node_modules/fast-xml-parser/src/fxp.js","../node_modules/@aws-sdk/core/dist-es/submodules/protocols/xml/parseXmlBody.js","../node_modules/@aws-sdk/middleware-flexible-checksums/dist-es/types.js","../node_modules/@aws-sdk/middleware-flexible-checksums/dist-es/getChecksumLocationName.js","../node_modules/@aws-sdk/middleware-flexible-checksums/dist-es/isStreaming.js","../node_modules/@aws-crypto/util/build/module/convertToBuffer.js","../node_modules/@aws-crypto/util/node_modules/@smithy/util-utf8/dist-es/fromUtf8.js","../node_modules/@aws-crypto/util/node_modules/@smithy/util-buffer-from/dist-es/index.js","../node_modules/@aws-crypto/util/build/module/isEmptyData.js","../node_modules/@aws-crypto/util/build/module/numToUint8.js","../node_modules/@aws-crypto/util/build/module/uint32ArrayFrom.js","../node_modules/@aws-crypto/crc32c/build/module/aws_crc32c.js","../node_modules/@aws-crypto/crc32c/build/module/index.js","../node_modules/@aws-crypto/crc32/build/module/aws_crc32.js","../node_modules/@aws-crypto/crc32/build/module/index.js","../node_modules/@aws-sdk/middleware-flexible-checksums/dist-es/getCrc32ChecksumAlgorithmFunction.js","../node_modules/@aws-sdk/middleware-flexible-checksums/dist-es/selectChecksumAlgorithmFunction.js","../node_modules/@aws-sdk/middleware-flexible-checksums/dist-es/stringHasher.js","../node_modules/@aws-sdk/middleware-flexible-checksums/dist-es/flexibleChecksumsMiddleware.js","../node_modules/@aws-sdk/middleware-flexible-checksums/dist-es/hasHeaderWithPrefix.js","../node_modules/@aws-sdk/middleware-flexible-checksums/dist-es/getChecksumAlgorithmForRequest.js","../node_modules/@aws-sdk/middleware-flexible-checksums/dist-es/hasHeader.js","../node_modules/@aws-sdk/middleware-flexible-checksums/dist-es/flexibleChecksumsInputMiddleware.js","../node_modules/@aws-sdk/middleware-flexible-checksums/dist-es/getChecksumAlgorithmListForResponse.js","../node_modules/@aws-sdk/middleware-flexible-checksums/dist-es/getChecksum.js","../node_modules/@aws-sdk/middleware-flexible-checksums/dist-es/flexibleChecksumsResponseMiddleware.js","../node_modules/@aws-sdk/middleware-flexible-checksums/dist-es/isChecksumWithPartNumber.js","../node_modules/@aws-sdk/middleware-flexible-checksums/dist-es/validateChecksumFromResponse.js","../node_modules/@aws-sdk/middleware-flexible-checksums/dist-es/getFlexibleChecksumsPlugin.js","../node_modules/@aws-sdk/middleware-host-header/dist-es/index.js","../node_modules/@aws-sdk/middleware-logger/dist-es/loggerMiddleware.js","../node_modules/@aws-sdk/middleware-recursion-detection/dist-es/index.js","../node_modules/@aws-sdk/middleware-sdk-s3/dist-es/region-redirect-endpoint-middleware.js","../node_modules/@aws-sdk/middleware-sdk-s3/dist-es/region-redirect-middleware.js","../node_modules/@aws-sdk/middleware-sdk-s3/dist-es/s3-expires-middleware.js","../node_modules/@aws-sdk/middleware-sdk-s3/dist-es/s3-express/classes/S3ExpressIdentityCache.js","../node_modules/@aws-sdk/middleware-sdk-s3/dist-es/s3-express/classes/S3ExpressIdentityCacheEntry.js","../node_modules/@aws-sdk/middleware-sdk-s3/dist-es/s3-express/classes/S3ExpressIdentityProviderImpl.js","../node_modules/@smithy/util-config-provider/dist-es/booleanSelector.js","../node_modules/@smithy/util-config-provider/dist-es/types.js","../node_modules/@aws-sdk/middleware-sdk-s3/dist-es/s3-express/constants.js","../node_modules/@aws-sdk/middleware-sdk-s3/dist-es/s3-express/classes/SignatureV4S3Express.js","../node_modules/@aws-sdk/middleware-sdk-s3/dist-es/s3-express/functions/s3ExpressMiddleware.js","../node_modules/@aws-sdk/middleware-sdk-s3/dist-es/s3-express/functions/s3ExpressHttpSigningMiddleware.js","../node_modules/@aws-sdk/middleware-sdk-s3/dist-es/s3-express/functions/signS3Express.js","../node_modules/@aws-sdk/middleware-sdk-s3/dist-es/throw-200-exceptions.js","../node_modules/@aws-sdk/middleware-sdk-s3/dist-es/bucket-endpoint-middleware.js","../node_modules/@aws-sdk/middleware-sdk-s3/dist-es/validate-bucket-name.js","../node_modules/@aws-sdk/util-arn-parser/dist-es/index.js","../node_modules/@aws-sdk/middleware-user-agent/dist-es/configurations.js","../node_modules/@smithy/util-endpoints/dist-es/cache/EndpointCache.js","../node_modules/@smithy/util-endpoints/dist-es/lib/isIpAddress.js","../node_modules/@smithy/util-endpoints/dist-es/lib/isValidHostLabel.js","../node_modules/@smithy/util-endpoints/dist-es/utils/customEndpointFunctions.js","../node_modules/@smithy/util-endpoints/dist-es/debug/debugId.js","../node_modules/@smithy/util-endpoints/dist-es/debug/toDebugString.js","../node_modules/@smithy/util-endpoints/dist-es/types/EndpointError.js","../node_modules/@smithy/util-endpoints/dist-es/lib/booleanEquals.js","../node_modules/@smithy/util-endpoints/dist-es/lib/getAttr.js","../node_modules/@smithy/util-endpoints/dist-es/lib/getAttrPathList.js","../node_modules/@smithy/util-endpoints/dist-es/lib/parseURL.js","../node_modules/@smithy/util-endpoints/dist-es/utils/endpointFunctions.js","../node_modules/@smithy/util-endpoints/dist-es/lib/isSet.js","../node_modules/@smithy/util-endpoints/dist-es/lib/not.js","../node_modules/@smithy/util-endpoints/dist-es/lib/stringEquals.js","../node_modules/@smithy/util-endpoints/dist-es/lib/substring.js","../node_modules/@smithy/util-endpoints/dist-es/lib/uriEncode.js","../node_modules/@smithy/util-endpoints/dist-es/utils/evaluateTemplate.js","../node_modules/@smithy/util-endpoints/dist-es/utils/evaluateExpression.js","../node_modules/@smithy/util-endpoints/dist-es/utils/getReferenceValue.js","../node_modules/@smithy/util-endpoints/dist-es/utils/callFunction.js","../node_modules/@smithy/util-endpoints/dist-es/utils/evaluateCondition.js","../node_modules/@smithy/util-endpoints/dist-es/utils/evaluateConditions.js","../node_modules/@smithy/util-endpoints/dist-es/utils/getEndpointHeaders.js","../node_modules/@smithy/util-endpoints/dist-es/utils/getEndpointProperty.js","../node_modules/@smithy/util-endpoints/dist-es/utils/getEndpointProperties.js","../node_modules/@smithy/util-endpoints/dist-es/utils/getEndpointUrl.js","../node_modules/@smithy/util-endpoints/dist-es/utils/evaluateEndpointRule.js","../node_modules/@smithy/util-endpoints/dist-es/utils/evaluateErrorRule.js","../node_modules/@smithy/util-endpoints/dist-es/utils/evaluateTreeRule.js","../node_modules/@smithy/util-endpoints/dist-es/utils/evaluateRules.js","../node_modules/@smithy/util-endpoints/dist-es/resolveEndpoint.js","../node_modules/@aws-sdk/util-endpoints/dist-es/lib/aws/isVirtualHostableS3Bucket.js","../node_modules/@aws-sdk/util-endpoints/dist-es/lib/aws/partition.js","../node_modules/@aws-sdk/util-endpoints/dist-es/aws.js","../node_modules/@aws-sdk/util-endpoints/dist-es/lib/aws/parseArn.js","../node_modules/@aws-sdk/middleware-user-agent/dist-es/check-features.js","../node_modules/@aws-sdk/middleware-user-agent/dist-es/constants.js","../node_modules/@aws-sdk/middleware-user-agent/dist-es/user-agent-middleware.js","../node_modules/@aws-sdk/middleware-user-agent/dist-es/encode-features.js","../node_modules/@smithy/config-resolver/dist-es/endpointsConfig/NodeUseDualstackEndpointConfigOptions.js","../node_modules/@smithy/config-resolver/dist-es/endpointsConfig/NodeUseFipsEndpointConfigOptions.js","../node_modules/@smithy/config-resolver/dist-es/regionConfig/config.js","../node_modules/@smithy/config-resolver/dist-es/regionConfig/isFipsRegion.js","../node_modules/@smithy/config-resolver/dist-es/regionConfig/getRealRegion.js","../node_modules/@smithy/config-resolver/dist-es/regionConfig/resolveRegionConfig.js","../node_modules/@smithy/middleware-content-length/dist-es/index.js","../node_modules/@smithy/middleware-endpoint/dist-es/service-customizations/s3.js","../node_modules/@smithy/middleware-endpoint/dist-es/adaptors/createConfigValueProvider.js","../node_modules/@smithy/node-config-provider/dist-es/getSelectorName.js","../node_modules/@smithy/node-config-provider/dist-es/fromEnv.js","../node_modules/@smithy/shared-ini-file-loader/dist-es/getHomeDir.js","../node_modules/@smithy/shared-ini-file-loader/dist-es/getProfileName.js","../node_modules/@smithy/shared-ini-file-loader/dist-es/getSSOTokenFilepath.js","../node_modules/@smithy/shared-ini-file-loader/dist-es/getSSOTokenFromFile.js","../node_modules/@smithy/shared-ini-file-loader/dist-es/getConfigData.js","../node_modules/@smithy/shared-ini-file-loader/dist-es/getConfigFilepath.js","../node_modules/@smithy/shared-ini-file-loader/dist-es/getCredentialsFilepath.js","../node_modules/@smithy/shared-ini-file-loader/dist-es/parseIni.js","../node_modules/@smithy/shared-ini-file-loader/dist-es/slurpFile.js","../node_modules/@smithy/shared-ini-file-loader/dist-es/loadSharedConfigFiles.js","../node_modules/@smithy/shared-ini-file-loader/dist-es/getSsoSessionData.js","../node_modules/@smithy/shared-ini-file-loader/dist-es/loadSsoSessionData.js","../node_modules/@smithy/shared-ini-file-loader/dist-es/parseKnownFiles.js","../node_modules/@smithy/shared-ini-file-loader/dist-es/mergeConfigFiles.js","../node_modules/@smithy/node-config-provider/dist-es/fromStatic.js","../node_modules/@smithy/property-provider/dist-es/fromStatic.js","../node_modules/@smithy/node-config-provider/dist-es/configLoader.js","../node_modules/@smithy/node-config-provider/dist-es/fromSharedConfigFiles.js","../node_modules/@smithy/middleware-endpoint/dist-es/adaptors/getEndpointUrlConfig.js","../node_modules/@smithy/middleware-endpoint/dist-es/adaptors/getEndpointFromConfig.js","../node_modules/@smithy/url-parser/dist-es/index.js","../node_modules/@smithy/querystring-parser/dist-es/index.js","../node_modules/@smithy/middleware-endpoint/dist-es/adaptors/toEndpointV1.js","../node_modules/@smithy/middleware-endpoint/dist-es/adaptors/getEndpointFromInstructions.js","../node_modules/@smithy/middleware-endpoint/dist-es/endpointMiddleware.js","../node_modules/@smithy/core/dist-es/setFeature.js","../node_modules/@smithy/middleware-endpoint/dist-es/getEndpointPlugin.js","../node_modules/@smithy/middleware-endpoint/dist-es/resolveEndpointConfig.js","../node_modules/@smithy/util-retry/dist-es/config.js","../node_modules/@smithy/service-error-classification/dist-es/constants.js","../node_modules/@smithy/service-error-classification/dist-es/index.js","../node_modules/@smithy/util-retry/dist-es/DefaultRateLimiter.js","../node_modules/@smithy/util-retry/dist-es/constants.js","../node_modules/@smithy/util-retry/dist-es/defaultRetryToken.js","../node_modules/@smithy/util-retry/dist-es/StandardRetryStrategy.js","../node_modules/@smithy/util-retry/dist-es/defaultRetryBackoffStrategy.js","../node_modules/@smithy/util-retry/dist-es/AdaptiveRetryStrategy.js","../node_modules/@smithy/middleware-retry/node_modules/uuid/dist/esm-browser/rng.js","../node_modules/@smithy/middleware-retry/node_modules/uuid/dist/esm-browser/stringify.js","../node_modules/@smithy/middleware-retry/node_modules/uuid/dist/esm-browser/native.js","../node_modules/@smithy/middleware-retry/node_modules/uuid/dist/esm-browser/v4.js","../node_modules/@smithy/middleware-retry/dist-es/util.js","../node_modules/@smithy/middleware-retry/dist-es/configurations.js","../node_modules/@smithy/middleware-retry/dist-es/isStreamingPayload/isStreamingPayload.js","../node_modules/@smithy/middleware-retry/dist-es/retryMiddleware.js","../node_modules/@aws-sdk/signature-v4-multi-region/dist-es/signature-v4-crt-container.js","../node_modules/@aws-sdk/signature-v4-multi-region/dist-es/SignatureV4MultiRegion.js","../node_modules/@aws-sdk/client-s3/dist-es/endpoint/ruleset.js","../node_modules/@aws-sdk/client-s3/dist-es/endpoint/endpointResolver.js","../node_modules/@aws-sdk/client-s3/dist-es/auth/httpAuthSchemeProvider.js","../node_modules/@aws-sdk/client-s3/dist-es/endpoint/EndpointParameters.js","../node_modules/@aws-sdk/client-s3/dist-es/models/S3ServiceException.js","../node_modules/@aws-sdk/client-s3/dist-es/models/models_0.js","../node_modules/@aws-sdk/client-s3/dist-es/models/models_1.js","../node_modules/@aws-sdk/client-s3/dist-es/protocols/Aws_restXml.js","../node_modules/@aws-sdk/client-s3/dist-es/commands/CreateSessionCommand.js","../node_modules/@aws-sdk/credential-provider-env/dist-es/fromEnv.js","../node_modules/@aws-sdk/credential-provider-node/dist-es/remoteProvider.js","../node_modules/@aws-sdk/credential-provider-node/dist-es/defaultProvider.js","../node_modules/@aws-sdk/middleware-bucket-endpoint/dist-es/NodeUseArnRegionConfigOptions.js","../node_modules/@aws-sdk/util-user-agent-node/dist-es/defaultUserAgent.js","../node_modules/@aws-sdk/util-user-agent-node/dist-es/nodeAppIdConfigOptions.js","../node_modules/@smithy/eventstream-codec/dist-es/Int64.js","../node_modules/@smithy/eventstream-codec/dist-es/HeaderMarshaller.js","../node_modules/@smithy/eventstream-codec/dist-es/EventStreamCodec.js","../node_modules/@smithy/eventstream-codec/dist-es/splitMessage.js","../node_modules/@smithy/eventstream-codec/dist-es/MessageDecoderStream.js","../node_modules/@smithy/eventstream-codec/dist-es/MessageEncoderStream.js","../node_modules/@smithy/eventstream-codec/dist-es/SmithyMessageDecoderStream.js","../node_modules/@smithy/eventstream-codec/dist-es/SmithyMessageEncoderStream.js","../node_modules/@smithy/eventstream-serde-universal/dist-es/getUnmarshalledStream.js","../node_modules/@smithy/eventstream-serde-universal/dist-es/EventStreamMarshaller.js","../node_modules/@smithy/eventstream-serde-universal/dist-es/getChunkedStream.js","../node_modules/@smithy/eventstream-serde-node/dist-es/EventStreamMarshaller.js","../node_modules/@smithy/eventstream-serde-node/dist-es/utils.js","../node_modules/@smithy/eventstream-serde-node/dist-es/provider.js","../node_modules/@smithy/hash-node/dist-es/index.js","../node_modules/@smithy/hash-stream-node/dist-es/HashCalculator.js","../node_modules/@smithy/hash-stream-node/dist-es/readableStreamHasher.js","../node_modules/@smithy/util-body-length-node/dist-es/calculateBodyLength.js","../node_modules/@smithy/util-defaults-mode-node/dist-es/constants.js","../node_modules/@smithy/util-defaults-mode-node/dist-es/defaultsModeConfig.js","../node_modules/@smithy/util-defaults-mode-node/dist-es/resolveDefaultsModeConfig.js","../node_modules/@aws-sdk/client-s3/dist-es/runtimeConfig.js","../node_modules/@aws-sdk/client-s3/dist-es/runtimeConfig.shared.js","../node_modules/@aws-sdk/region-config-resolver/dist-es/extensions/index.js","../node_modules/@aws-sdk/client-s3/dist-es/auth/httpAuthExtensionConfiguration.js","../node_modules/@aws-sdk/client-s3/dist-es/S3Client.js","../node_modules/@aws-sdk/middleware-flexible-checksums/dist-es/resolveFlexibleChecksumsConfig.js","../node_modules/@smithy/eventstream-serde-config-resolver/dist-es/EventStreamSerdeConfig.js","../node_modules/@aws-sdk/middleware-sdk-s3/dist-es/s3Configuration.js","../node_modules/@aws-sdk/client-s3/dist-es/runtimeExtensions.js","../node_modules/@aws-sdk/middleware-ssec/dist-es/index.js","../node_modules/@aws-sdk/client-s3/dist-es/commands/GetObjectCommand.js","../node_modules/@aws-sdk/client-s3/dist-es/commands/HeadObjectCommand.js","../src/storage/s3Store.ts"],"sourcesContent":["import type { Codec, CodecConstructor } from 'numcodecs';\n\ntype Config = Record<string, unknown>;\ntype CodecImporter = () => CodecConstructor<Config> | Promise<CodecConstructor<Config>>;\n\nconst registry: Map<string, CodecImporter> = new Map();\n\nexport function addCodec(id: string, importFn: CodecImporter) {\n  registry.set(id, importFn);\n}\n\nexport async function getCodec(config: Config & { id: string }): Promise<Codec> {\n  if (!registry.has(config.id)) {\n    throw new Error(`Compression codec ${config.id} is not supported by Zarr.js yet.`);\n  }\n  /* eslint-disable @typescript-eslint/no-non-null-assertion */\n  const codec = await registry.get(config.id)!();\n  return codec.fromConfig(config);\n}\n","/**\n * Closely resembles the functions on the MutableMapping type in Python.\n */\nexport interface MutableMapping<T, O=any> {\n    getItem(item: string, opts?: O): T;\n    setItem(item: string, value: T): boolean;\n    deleteItem(item: string): boolean;\n    containsItem(item: string): boolean;\n\n    proxy(): MutableMappingProxy<T>;\n\n    // length(): number;\n}\n\n/**\n * Closely resembles the functions on the MutableMapping type in Python.\n */\nexport interface AsyncMutableMapping<T, O=any> {\n    getItem(item: string, opts?: O): Promise<T>;\n    setItem(item: string, value: T): Promise<boolean>;\n    deleteItem(item: string): Promise<boolean>;\n    containsItem(item: string): Promise<boolean>;\n    // length(): number;\n}\n\nexport interface MutableMappingProxy<T> {\n    [key: string]: T;\n}\n\nexport interface AsyncMutableMappingProxy<T> {\n    [key: string]: T | Promise<T>;\n}\n\n\n/**\n * A proxy allows for accessing, setting and deleting the keys in the mutable mapping using\n * m[\"a\"] or even m.a notation.\n */\nexport function createProxy<S, T>(mapping: S & MutableMapping<T>): (S & MutableMappingProxy<T>);\nexport function createProxy<S, T>(mapping: S & AsyncMutableMapping<T>): (S & AsyncMutableMappingProxy<T>);\nexport function createProxy<S, T>(mapping: (S & MutableMapping<T>) | (S & AsyncMutableMapping<T>)): (S & MutableMappingProxy<T>) | (S & AsyncMutableMappingProxy<T>) {\n    return new Proxy(mapping as any, {\n        set(target, key, value, _receiver) {\n            return target.setItem(key as string, value);\n        },\n        get(target, key, _receiver) {\n            return target.getItem(key as string);\n        },\n        deleteProperty(target, key) {\n            return target.deleteItem(key as string);\n        },\n        has(target, key) {\n            return target.containsItem(key as string);\n        }\n    });\n}","export interface ZarrError {\n    __zarr__: string;\n}\n\nfunction isZarrError(err: unknown): err is ZarrError {\n    return typeof err === 'object' && err !== null && '__zarr__' in err;\n}\n\nexport function isKeyError(o: unknown) {\n    return isZarrError(o) && o.__zarr__ === 'KeyError';\n}\n\n// Custom error messages, note we have to patch the prototype of the\n// errors to fix `instanceof` calls, see:\n// https://github.com/Microsoft/TypeScript/wiki/Breaking-Changes#extending-built-ins-like-error-array-and-map-may-no-longer-work\nexport class ContainsArrayError extends Error implements ZarrError {\n    __zarr__ = 'ContainsArrayError';\n    constructor(path: string) {\n        super(`path ${path} contains an array`);\n        Object.setPrototypeOf(this, ContainsArrayError.prototype);\n    }\n}\n\nexport class ContainsGroupError extends Error implements ZarrError {\n    __zarr__ = 'ContainsGroupError';\n    constructor(path: string) {\n        super(`path ${path} contains a group`);\n        Object.setPrototypeOf(this, ContainsGroupError.prototype);\n    }\n}\n\nexport class ArrayNotFoundError extends Error implements ZarrError {\n    __zarr__ = 'ArrayNotFoundError';\n    constructor(path: string) {\n        super(`array not found at path ${path}`);\n        Object.setPrototypeOf(this, ArrayNotFoundError.prototype);\n    }\n}\n\nexport class GroupNotFoundError extends Error implements ZarrError {\n    __zarr__ = 'GroupNotFoundError';\n    constructor(path: string) {\n        super(`group not found at path ${path}`);\n        Object.setPrototypeOf(this, GroupNotFoundError.prototype);\n    }\n}\n\nexport class PathNotFoundError extends Error implements ZarrError {\n    __zarr__ = 'PathNotFoundError';\n    constructor(path: string) {\n        super(`nothing found at path ${path}`);\n        Object.setPrototypeOf(this, PathNotFoundError.prototype);\n    }\n}\n\nexport class PermissionError extends Error implements ZarrError {\n    __zarr__ = 'PermissionError';\n    constructor(message: string) {\n        super(message);\n        Object.setPrototypeOf(this, PermissionError.prototype);\n    }\n}\n\nexport class KeyError extends Error implements ZarrError {\n    __zarr__ = 'KeyError';\n    constructor(key: string) {\n        super(`key ${key} not present`);\n        Object.setPrototypeOf(this, KeyError.prototype);\n    }\n}\n\nexport class TooManyIndicesError extends RangeError implements ZarrError {\n    __zarr__ = 'TooManyIndicesError';\n    constructor(selection: any[], shape: number[]) {\n        super(`too many indices for array; expected ${shape.length}, got ${selection.length}`);\n        Object.setPrototypeOf(this, TooManyIndicesError.prototype);\n    }\n}\n\nexport class BoundsCheckError extends RangeError implements ZarrError {\n    __zarr__ = 'BoundsCheckError';\n    constructor(message: string) {\n        super(message);\n        Object.setPrototypeOf(this, BoundsCheckError.prototype);\n    }\n}\n\nexport class InvalidSliceError extends RangeError implements ZarrError {\n    __zarr__ = 'InvalidSliceError';\n    constructor(from: any, to: any, stepSize: any, reason: any) {\n        super(`slice arguments slice(${from}, ${to}, ${stepSize}) invalid: ${reason}`);\n        Object.setPrototypeOf(this, InvalidSliceError.prototype);\n    }\n}\n\nexport class NegativeStepError extends Error implements ZarrError {\n    __zarr__ = 'NegativeStepError';\n    constructor() {\n        super(`Negative step size is not supported when indexing.`);\n        Object.setPrototypeOf(this, NegativeStepError.prototype);\n    }\n}\n\nexport class ValueError extends Error implements ZarrError {\n    __zarr__ = 'ValueError';\n    constructor(message: string) {\n        super(message);\n        Object.setPrototypeOf(this, ValueError.prototype);\n    }\n}\n\nexport class HTTPError extends Error implements ZarrError {\n    __zarr__ = 'HTTPError';\n    constructor(code: string) {\n        super(code);\n        Object.setPrototypeOf(this, HTTPError.prototype);\n    }\n}\n","\nimport { InvalidSliceError } from '../errors';\nimport { Slice, SliceArgument, SliceIndices } from \"./types\";\n\nexport function slice(start: SliceArgument, stop: SliceArgument | undefined = undefined, step: number | null = null): Slice {\n    // tslint:disable-next-line: strict-type-predicates\n    if (start === undefined) { // Not possible in typescript\n        throw new InvalidSliceError(start, stop, step, \"The first argument must not be undefined\");\n    }\n\n    if ((typeof start === \"string\" && start !== \":\") || (typeof stop === \"string\" && stop !== \":\")) { // Note in typescript this will never happen with type checking.\n        throw new InvalidSliceError(start, stop, step, \"Arguments can only be integers, \\\":\\\" or null\");\n    }\n\n    // slice(5) === slice(null, 5)\n    if (stop === undefined) {\n        stop = start;\n        start = null;\n    }\n\n    // if (start !== null && stop !== null && start > stop) {\n    //     throw new InvalidSliceError(start, stop, step, \"to is higher than from\");\n    // }\n\n    return {\n        start: start === \":\" ? null : start,\n        stop: stop === \":\" ? null : stop,\n        step,\n        _slice: true,\n    };\n}\n\n\n/**\n * Port of adjustIndices\n * https://github.com/python/cpython/blob/master/Objects/sliceobject.c#L243\n */\nfunction adjustIndices(start: number, stop: number, step: number, length: number) {\n    if (start < 0) {\n        start += length;\n        if (start < 0) {\n            start = (step < 0) ? -1 : 0;\n        }\n    } else if (start >= length) {\n        start = (step < 0) ? length - 1 : length;\n    }\n\n    if (stop < 0) {\n        stop += length;\n        if (stop < 0) {\n            stop = (step < 0) ? -1 : 0;\n        }\n    } else if (stop >= length) {\n        stop = (step < 0) ? length - 1 : length;\n    }\n\n    if (step < 0) {\n        if (stop < start) {\n            const length = Math.floor((start - stop - 1) / (-step) + 1);\n            return [start, stop, step, length];\n        }\n    } else {\n        if (start < stop) {\n            const length = Math.floor((stop - start - 1) / step + 1);\n            return [start, stop, step, length];\n        }\n    }\n    return [start, stop, step, 0];\n}\n\n/**\n * Port of slice.indices(n) and PySlice_Unpack\n * https://github.com/python/cpython/blob/master/Objects/sliceobject.c#L166\n *  https://github.com/python/cpython/blob/master/Objects/sliceobject.c#L198 \n * \n * Behaviour might be slightly different as it's a weird hybrid implementation.\n */\nexport function sliceIndices(slice: Slice, length: number): SliceIndices {\n    let start: number;\n    let stop: number;\n    let step: number;\n\n    if (slice.step === null) {\n        step = 1;\n    } else {\n        step = slice.step;\n    }\n\n    if (slice.start === null) {\n        start = step < 0 ? Number.MAX_SAFE_INTEGER : 0;\n    } else {\n        start = slice.start;\n        if (start < 0) {\n            start += length;\n        }\n    }\n\n    if (slice.stop === null) {\n        stop = step < 0 ? -Number.MAX_SAFE_INTEGER : Number.MAX_SAFE_INTEGER;\n    } else {\n        stop = slice.stop;\n        if (stop < 0) {\n            stop += length;\n        }\n    }\n\n    // This clips out of bounds slices\n    const s = adjustIndices(start, stop, step, length);\n    start = s[0];\n    stop = s[1];\n    step = s[2];\n    // The output length\n    length = s[3];\n\n\n    // With out of bounds slicing these two assertions are not useful.\n    // if (stop > length) throw new Error(\"Stop greater than length\");\n    // if (start >= length) throw new Error(\"Start greater than or equal to length\");\n\n    if (step === 0) throw new Error(\"Step size 0 is invalid\");\n\n    return [start, stop, step, length];\n}","import { TooManyIndicesError, BoundsCheckError, NegativeStepError } from '../errors';\nimport { ZarrArray } from './index';\nimport { Slice, ArraySelection, ChunkDimProjection, Indexer, DimIndexer, ChunkProjection, NormalizedArraySelection, SliceIndices, DimensionArraySelection } from './types';\nimport { sliceIndices, slice } from \"./slice\";\n\nfunction ensureArray(selection: ArraySelection): DimensionArraySelection[] {\n    if (!Array.isArray(selection)) {\n        return [selection];\n    }\n    return selection;\n}\n\nfunction checkSelectionLength(selection: DimensionArraySelection[], shape: number[]) {\n    if (selection.length > shape.length) {\n        throw new TooManyIndicesError(selection, shape);\n    }\n}\n\n/**\n * Returns both the sliceIndices per dimension and the output shape after slicing.\n */\nexport function selectionToSliceIndices(selection: NormalizedArraySelection, shape: number[]): [(number | SliceIndices)[], number[]] {\n    const sliceIndicesResult = [];\n    const outShape = [];\n\n    for (let i = 0; i < selection.length; i++) {\n        const s = selection[i];\n        if (typeof s === \"number\") {\n            sliceIndicesResult.push(s);\n        } else {\n            const x = sliceIndices(s, shape[i]);\n            const dimLength = x[3];\n\n            outShape.push(dimLength);\n            sliceIndicesResult.push(x);\n        }\n    }\n\n    return [sliceIndicesResult, outShape];\n}\n\n/**\n * This translates \"...\", \":\", null into a list of slices or non-negative integer selections of length shape\n */\nexport function normalizeArraySelection(selection: ArraySelection | number, shape: number[], convertIntegerSelectionToSlices = false): NormalizedArraySelection {\n    selection = replaceEllipsis(selection, shape);\n\n    for (let i = 0; i < selection.length; i++) {\n        const dimSelection = selection[i];\n\n        if (typeof dimSelection === \"number\") {\n            if (convertIntegerSelectionToSlices) {\n                selection[i] = slice(dimSelection, dimSelection + 1, 1);\n            } else {\n                selection[i] = normalizeIntegerSelection(dimSelection, shape[i]);\n            }\n        } else if (isIntegerArray(dimSelection)) {\n            throw new TypeError(\"Integer array selections are not supported (yet)\");\n        } else if (dimSelection === \":\" || dimSelection === null) {\n            selection[i] = slice(null, null, 1);\n        }\n    }\n\n    return selection as NormalizedArraySelection;\n}\n\nexport function replaceEllipsis(selection: ArraySelection | number, shape: number[]) {\n    selection = ensureArray(selection);\n\n    let ellipsisIndex = -1;\n    let numEllipsis = 0;\n    for (let i = 0; i < selection.length; i++) {\n        if (selection[i] === \"...\") {\n            ellipsisIndex = i;\n            numEllipsis += 1;\n        }\n    }\n\n    if (numEllipsis > 1) {\n        throw new RangeError(\"an index can only have a single ellipsis ('...')\");\n    }\n    if (numEllipsis === 1) {\n        // count how many items to left and right of ellipsis\n        const numItemsLeft = ellipsisIndex;\n        const numItemsRight = selection.length - (numItemsLeft + 1);\n        const numItems = selection.length - 1; // All non-ellipsis items\n        if (numItems >= shape.length) {\n            // Ellipsis does nothing, just remove it\n            selection = selection.filter((x) => x !== \"...\");\n        } else {\n            // Replace ellipsis with as many slices are needed for number of dims\n            const numNewItems = shape.length - numItems;\n            let newItem = selection.slice(0, numItemsLeft).concat(new Array(numNewItems).fill(null));\n            if (numItemsRight > 0) {\n                newItem = newItem.concat(selection.slice(selection.length - numItemsRight));\n            }\n            selection = newItem;\n        }\n    }\n    // Fill out selection if not completely specified\n    if (selection.length < shape.length) {\n        const numMissing = shape.length - selection.length;\n        selection = selection.concat(new Array(numMissing).fill(null));\n    }\n\n    checkSelectionLength(selection, shape);\n    return selection;\n}\n\nexport function normalizeIntegerSelection(dimSelection: number, dimLength: number): number {\n    // Note: Maybe we should convert to integer or warn if dimSelection is not an integer\n\n    // handle wraparound\n    if (dimSelection < 0) {\n        dimSelection = dimLength + dimSelection;\n    }\n\n    // handle out of bounds\n    if (dimSelection >= dimLength || dimSelection < 0) {\n        throw new BoundsCheckError(`index out of bounds for dimension with length ${dimLength}`);\n    }\n\n    return dimSelection;\n}\n\nfunction isInteger(s: any) {\n    return typeof s === \"number\";\n}\n\nexport function isIntegerArray(s: any) {\n    if (!Array.isArray(s)) {\n        return false;\n    }\n    for (const e of s) {\n        if (typeof e !== \"number\") {\n            return false;\n        }\n    }\n    return true;\n}\n\nexport function isSlice(s: (Slice | number | number[] | \"...\" | \":\" | null)): boolean {\n    if (s !== null && (s as any)[\"_slice\"] === true) {\n        return true;\n    }\n    return false;\n}\n\nfunction isContiguousSlice(s: (Slice | number | number[] | \"...\" | \":\" | null)): boolean {\n    return isSlice(s) && ((s as Slice).step === null || (s as Slice).step === 1);\n}\n\nfunction isPositiveSlice(s: (Slice | number | number[] | \"...\" | \":\" | null)): boolean {\n    return isSlice(s) && ((s as Slice).step === null || ((s as Slice).step as number) >= 1);\n}\n\nexport function isContiguousSelection(selection: ArraySelection) {\n    selection = ensureArray(selection);\n\n    for (let i = 0; i < selection.length; i++) {\n        const s = selection[i];\n        if (!(isIntegerArray(s) || isContiguousSlice(s) || s === \"...\")) {\n            return false;\n        }\n    }\n    return true;\n}\n\n// eslint-disable-next-line @typescript-eslint/no-unused-vars\nfunction isBasicSelection(selection: ArraySelection): boolean {\n    selection = ensureArray(selection);\n\n    for (let i = 0; i < selection.length; i++) {\n        const s = selection[i];\n        if (!(isInteger(s) || isPositiveSlice(s))) {\n            return false;\n        }\n    }\n    return true;\n}\nfunction* product<T>(...iterables: (() => IterableIterator<T>)[]): IterableIterator<T[]> {\n    if (iterables.length === 0) { return; }\n    // make a list of iterators from the iterables\n    const iterators = iterables.map(it => it());\n    const results = iterators.map(it => it.next());\n\n    // Disabled to allow empty inputs\n    // if (results.some(r => r.done)) {\n    //     throw new Error(\"Input contains an empty iterator.\");\n    // }\n\n    for (let i = 0; ;) {\n        if (results[i].done) {\n            // reset the current iterator\n            iterators[i] = iterables[i]();\n            results[i] = iterators[i].next();\n            // advance, and exit if we've reached the end\n            if (++i >= iterators.length) { return; }\n        } else {\n            yield results.map(({ value }) => value);\n            i = 0;\n        }\n        results[i] = iterators[i].next();\n    }\n}\n\nexport class BasicIndexer implements Indexer {\n    dimIndexers: DimIndexer[];\n    shape: number[];\n    dropAxes: null;\n\n    constructor(selection: ArraySelection, array: ZarrArray) {\n        selection = normalizeArraySelection(selection, array.shape);\n\n        // Setup per-dimension indexers\n        this.dimIndexers = [];\n        const arrayShape = array.shape;\n        for (let i = 0; i < arrayShape.length; i++) {\n            let dimSelection = selection[i];\n            const dimLength = arrayShape[i];\n            const dimChunkLength = array.chunks[i];\n\n            if (dimSelection === null) {\n                dimSelection = slice(null);\n            }\n\n\n            if (isInteger(dimSelection)) {\n                this.dimIndexers.push(new IntDimIndexer(dimSelection as number, dimLength, dimChunkLength));\n            } else if (isSlice(dimSelection)) {\n                this.dimIndexers.push(new SliceDimIndexer(dimSelection as Slice, dimLength, dimChunkLength));\n            } else {\n                throw new RangeError(`Unspported selection item for basic indexing; expected integer or slice, got ${dimSelection}`);\n            }\n        }\n\n        this.shape = [];\n        for (const d of this.dimIndexers) {\n            if (d instanceof SliceDimIndexer) {\n                this.shape.push(d.numItems);\n            }\n        }\n        this.dropAxes = null;\n    }\n\n    * iter() {\n        const dimIndexerIterables = this.dimIndexers.map(x => (() => x.iter()));\n        const dimIndexerProduct = product(...dimIndexerIterables);\n\n        for (const dimProjections of dimIndexerProduct) {\n            // TODO fix this, I think the product outputs too many combinations\n            const chunkCoords = [];\n            const chunkSelection = [];\n            const outSelection = [];\n\n            for (const p of dimProjections) {\n                chunkCoords.push((p).dimChunkIndex);\n                chunkSelection.push((p).dimChunkSelection);\n                if ((p).dimOutSelection !== null) {\n                    outSelection.push((p).dimOutSelection);\n                }\n            }\n\n            yield ({\n                chunkCoords,\n                chunkSelection,\n                outSelection,\n            } as ChunkProjection);\n        }\n\n    }\n}\n\nclass IntDimIndexer implements DimIndexer {\n    dimSelection: number;\n    dimLength: number;\n    dimChunkLength: number;\n    numItems: number;\n\n    constructor(dimSelection: number, dimLength: number, dimChunkLength: number) {\n        dimSelection = normalizeIntegerSelection(dimSelection, dimLength);\n        this.dimSelection = dimSelection;\n        this.dimLength = dimLength;\n        this.dimChunkLength = dimChunkLength;\n        this.numItems = 1;\n    }\n\n    * iter() {\n        const dimChunkIndex = Math.floor(this.dimSelection / this.dimChunkLength);\n        const dimOffset = dimChunkIndex * this.dimChunkLength;\n        const dimChunkSelection = this.dimSelection - dimOffset;\n        const dimOutSelection = null;\n        yield {\n            dimChunkIndex,\n            dimChunkSelection,\n            dimOutSelection,\n        } as ChunkDimProjection;\n    }\n}\n\nclass SliceDimIndexer implements DimIndexer {\n    dimLength: number;\n    dimChunkLength: number;\n    numItems: number;\n    numChunks: number;\n\n    start: number;\n    stop: number;\n    step: number;\n\n    constructor(dimSelection: Slice, dimLength: number, dimChunkLength: number) {\n        // Normalize\n        const [start, stop, step] = sliceIndices(dimSelection, dimLength);\n        this.start = start;\n        this.stop = stop;\n        this.step = step;\n        if (this.step < 1) {\n            throw new NegativeStepError();\n        }\n\n        this.dimLength = dimLength;\n        this.dimChunkLength = dimChunkLength;\n        this.numItems = Math.max(0, Math.ceil((this.stop - this.start) / this.step));\n        this.numChunks = Math.ceil(this.dimLength / this.dimChunkLength);\n    }\n\n    *iter() {\n        const dimChunkIndexFrom = Math.floor(this.start / this.dimChunkLength);\n        const dimChunkIndexTo = Math.ceil(this.stop / this.dimChunkLength);\n\n        // Iterate over chunks in range\n        for (let dimChunkIndex = dimChunkIndexFrom; dimChunkIndex < dimChunkIndexTo; dimChunkIndex++) {\n\n            // Compute offsets for chunk within overall array\n            const dimOffset = dimChunkIndex * this.dimChunkLength;\n            const dimLimit = Math.min(this.dimLength, (dimChunkIndex + 1) * this.dimChunkLength);\n\n            // Determine chunk length, accounting for trailing chunk\n            const dimChunkLength = dimLimit - dimOffset;\n\n            let dimChunkSelStart: number;\n            let dimChunkSelStop: number;\n            let dimOutOffset: number;\n\n            if (this.start < dimOffset) {\n                // Selection starts before current chunk\n\n                dimChunkSelStart = 0;\n                const remainder = (dimOffset - this.start) % this.step;\n                if (remainder > 0) {\n                    dimChunkSelStart += this.step - remainder;\n                }\n                // Compute number of previous items, provides offset into output array\n                dimOutOffset = Math.ceil((dimOffset - this.start) / this.step);\n            } else {\n                // Selection starts within current chunk\n                dimChunkSelStart = this.start - dimOffset;\n                dimOutOffset = 0;\n            }\n\n            if (this.stop > dimLimit) {\n                // Selection ends after current chunk\n                dimChunkSelStop = dimChunkLength;\n            } else {\n                // Selection ends within current chunk\n                dimChunkSelStop = this.stop - dimOffset;\n            }\n\n            const dimChunkSelection = slice(dimChunkSelStart, dimChunkSelStop, this.step);\n            const dimChunkNumItems = Math.ceil((dimChunkSelStop - dimChunkSelStart) / this.step);\n            const dimOutSelection = slice(dimOutOffset, dimOutOffset + dimChunkNumItems);\n            yield {\n                dimChunkIndex,\n                dimChunkSelection,\n                dimOutSelection,\n            } as ChunkDimProjection;\n        }\n\n    }\n\n}\n","import { Order, FillType, ChunksArgument, DtypeString } from \"./types\";\n\nimport { DimensionSelection, Slice } from \"./core/types\";\nimport { isSlice } from \"./core/indexing\";\nimport { TypedArray } from \"./nestedArray/types\";\n\n/**\n * This should be true only if this javascript is getting executed in Node.\n */\nexport const IS_NODE = typeof process !== \"undefined\" && process.versions && process.versions.node;\n\n// eslint-disable-next-line @typescript-eslint/no-empty-function\nexport function noop(): void {}\n\nexport function humanReadableSize(size: number) {\n    if (size < 2 ** 10) {\n        return `${size}`;\n    }\n    else if (size < 2 ** 20) {\n        return `${(size / (2 ** 10)).toFixed(1)}K`;\n    }\n    else if (size < 2 ** 30) {\n        return `${(size / (2 ** 20)).toFixed(1)}M`;\n    }\n    else if (size < 2 ** 40) {\n        return `${(size / (2 ** 30)).toFixed(1)}G`;\n    }\n    else if (size < 2 ** 50) {\n        return `${(size / (2 ** 40)).toFixed(1)}T`;\n    }\n    return `${(size / (2 ** 50)).toFixed(1)}P`;\n}\n\n// eslint-disable-next-line @typescript-eslint/ban-types\nexport function normalizeStoragePath(path: string | String | null): string {\n    if (path === null) {\n        return \"\";\n    }\n\n    if (path instanceof String) {\n        path = path.valueOf();\n    }\n\n    // convert backslash to forward slash\n    path = path.replace(/\\\\/g, \"/\");\n\n    // ensure no leading slash\n    while (path.length > 0 && path[0] === '/') {\n        path = path.slice(1);\n    }\n\n    // ensure no trailing slash\n    while (path.length > 0 && path[path.length - 1] === '/') {\n        path = path.slice(0, path.length - 1);\n    }\n\n\n    // collapse any repeated slashes\n    path = path.replace(/\\/\\/+/g, \"/\");\n\n    // don't allow path segments with just '.' or '..'\n    const segments = path.split('/');\n\n    for (const s of segments) {\n        if (s === \".\" || s === \"..\") {\n            throw Error(\"path containing '.' or '..' segment not allowed\");\n        }\n    }\n    return path as string;\n}\n\nexport function normalizeShape(shape: number | number[]): number[] {\n    if (typeof shape === \"number\") {\n        shape = [shape];\n    }\n    return shape.map(x => Math.floor(x));\n}\n\nexport function normalizeChunks(chunks: ChunksArgument, shape: number[]): number[] {\n    // Assume shape is already normalized\n\n    if (chunks === null || chunks === true) {\n        throw new Error(\"Chunk guessing is not supported yet\");\n    }\n\n    if (chunks === false) {\n        return shape;\n    }\n\n    if (typeof chunks === \"number\") {\n        chunks = [chunks];\n    }\n\n    // handle underspecified chunks\n    if (chunks.length < shape.length) {\n        // assume chunks across remaining dimensions\n        chunks = chunks.concat(shape.slice(chunks.length));\n    }\n\n    return chunks.map((x, idx) => {\n        // handle null or -1 in chunks\n        if (x === -1 || x === null) {\n            return shape[idx];\n        } else {\n            return Math.floor(x);\n        }\n    });\n}\n\nexport function normalizeOrder(order: string): Order {\n    order = order.toUpperCase();\n    return order as Order;\n}\n\nexport function normalizeDtype(dtype: DtypeString): DtypeString {\n    return dtype;\n}\n\nexport function normalizeFillValue(fillValue: FillType): FillType {\n    return fillValue;\n}\n\n/**\n * Determine whether `item` specifies a complete slice of array with the\n *  given `shape`. Used to optimize __setitem__ operations on chunks\n * @param item\n * @param shape\n */\nexport function isTotalSlice(item: DimensionSelection | DimensionSelection[], shape: number[]): boolean {\n    if (item === null) {\n        return true;\n    }\n    if (!Array.isArray(item)) {\n        item = [item];\n    }\n\n    for (let i = 0; i < Math.min(item.length, shape.length); i++) {\n        const it = item[i];\n        if (it === null) continue;\n\n        if (isSlice(it)) {\n            const s = it as Slice;\n            const isStepOne = s.step === 1 || s.step === null;\n\n            if (s.start === null && s.stop === null && isStepOne) {\n                continue;\n            }\n            if (((s.stop as number) - (s.start as number)) === shape[i] && isStepOne) {\n                continue;\n            }\n            return false;\n        }\n        return false;\n\n\n        // } else {\n        //     console.error(`isTotalSlice unexpected non-slice, got ${it}`);\n        //     return false;\n        // }\n    }\n    return true;\n}\n\n/**\n * Checks for === equality of all elements.\n */\nexport function arrayEquals1D(a: ArrayLike<any>, b: ArrayLike<any>) {\n    if (a.length !== b.length) {\n        return false;\n    }\n\n    for (let i = 0; i < a.length; i++) {\n        if (a[i] !== b[i]) {\n            return false;\n        }\n    }\n    return true;\n}\n\n/*\n * Determines \"C\" order strides for a given shape array.\n * Strides provide integer steps in each dimention to traverse an ndarray.\n *\n * NOTE: - These strides here are distinct from numpy.ndarray.strides, which describe actual byte steps.\n *       - Strides are assumed to be contiguous, so initial step is 1. Thus, output will always be [XX, XX, 1].\n */\nexport function getStrides(shape: number[]): number[] {\n    // adapted from https://github.com/scijs/ndarray/blob/master/ndarray.js#L326-L330\n    const ndim = shape.length;\n    const strides = Array(ndim);\n    let step = 1; // init step\n    for (let i = ndim - 1; i >= 0; i--) {\n        strides[i] = step;\n        step *= shape[i];\n    }\n    return strides;\n}\n\nexport function resolveUrl(root: string | URL, path: string): string {\n    const base = typeof root === 'string' ? new URL(root) : root;\n    if (!base.pathname.endsWith('/')) {\n        // ensure trailing slash so that base is resolved as _directory_\n        base.pathname += '/';\n    }\n    const resolved = new URL(path, base);\n    // copy search params to new URL\n    resolved.search = base.search;\n    return resolved.href;\n}\n\n/**\n * Swaps byte order in-place for a given TypedArray.\n * Used to flip endian-ness when getting/setting chunks from/to zarr store.\n * @param src TypedArray\n */\nexport function byteSwapInplace(src: TypedArray): void {\n  const b = src.BYTES_PER_ELEMENT;\n  if (b === 1) return; // no swapping needed\n  if (IS_NODE) {\n    // Use builtin methods for swapping if in Node environment\n    const bytes = Buffer.from(src.buffer, src.byteOffset, src.length * b);\n    if (b === 2) bytes.swap16();\n    if (b === 4) bytes.swap32();\n    if (b === 8) bytes.swap64();\n    return;\n  }\n  // In browser, need to flip manually\n  // Adapted from https://github.com/zbjornson/node-bswap/blob/master/bswap.js\n  const flipper = new Uint8Array(src.buffer, src.byteOffset, src.length * b);\n  const numFlips = b / 2;\n  const endByteIndex = b - 1;\n  let t: number;\n  for (let i = 0; i < flipper.length; i += b) {\n    for (let j = 0; j < numFlips; j++) {\n      t = flipper[i + j];\n      flipper[i + j] = flipper[i + endByteIndex - j];\n      flipper[i + endByteIndex - j] = t;\n    }\n  }\n}\n\n/**\n * Creates a copy of a TypedArray and swaps bytes.\n * Used to flip endian-ness when getting/setting chunks from/to zarr store.\n * @param src TypedArray\n */\nexport function byteSwap(src: TypedArray): TypedArray {\n    const copy = src.slice();\n    byteSwapInplace(copy);\n    return copy;\n}\n\nfunction convertColMajorToRowMajor2D(src: TypedArray, out: TypedArray, shape: number[]): void {\n  let idx = 0;\n  const shape0 = shape[0];\n  const shape1 = shape[1];\n  const stride0 = shape1;\n  for (let i1 = 0; i1 < shape1; i1++) {\n    for (let i0 = 0; i0 < shape0; i0++) {\n      out[i0 * stride0 + i1] = src[idx++];\n    }\n  }\n}\n\nfunction convertColMajorToRowMajor3D(src: TypedArray, out: TypedArray, shape: number[]): void {\n  let idx = 0;\n  const shape0 = shape[0];\n  const shape1 = shape[1];\n  const shape2 = shape[2];\n  const stride0 = shape2 * shape1;\n  const stride1 = shape2;\n  for (let i2 = 0; i2 < shape2; i2++) {\n    for (let i1 = 0; i1 < shape1; i1++) {\n      for (let i0 = 0; i0 < shape0; i0++) {\n        out[i0 * stride0 + i1 * stride1 + i2] = src[idx++];\n      }\n    }\n  }\n}\n\nfunction convertColMajorToRowMajor4D(src: TypedArray, out: TypedArray, shape: number[]): void {\n  let idx = 0;\n  const shape0 = shape[0];\n  const shape1 = shape[1];\n  const shape2 = shape[2];\n  const shape3 = shape[3];\n  const stride0 = shape3 * shape2 * shape1;\n  const stride1 = shape3 * shape2;\n  const stride2 = shape3;\n  for (let i3 = 0; i3 < shape3; i3++) {\n    for (let i2 = 0; i2 < shape2; i2++) {\n      for (let i1 = 0; i1 < shape1; i1++) {\n        for (let i0 = 0; i0 < shape0; i0++) {\n          out[i0 * stride0 + i1 * stride1 + i2 * stride2 + i3] = src[idx++];\n        }\n      }\n    }\n  }\n}\n\nfunction convertColMajorToRowMajorGeneric(src: TypedArray, out: TypedArray, shape: number[]): void {\n  const nDims = shape.length;\n  const size = shape.reduce((r, a) => r * a);\n\n  const rowMajorStrides = shape.map((_, i) =>\n    i + 1 === nDims ? 1 : shape.slice(i + 1).reduce((r, a) => r * a, 1)\n  );\n\n  const index = Array(nDims).fill(0);\n\n  for (let colMajorIdx = 0; colMajorIdx < size; colMajorIdx++) {\n    let rowMajorIdx = 0;\n    for (let dim = 0; dim < nDims; dim++) {\n      rowMajorIdx += index[dim] * rowMajorStrides[dim];\n    }\n    out[rowMajorIdx] = src[colMajorIdx];\n\n    index[0] += 1;\n    // Handle carry-over\n    for (let dim = 0; dim < nDims; dim++) {\n      if (index[dim] === shape[dim]) {\n        if (dim + 1 === nDims) {\n          return;\n        }\n        index[dim] = 0;\n        index[dim + 1] += 1;\n      }\n    }\n  }\n}\n\nconst colMajorToRowMajorConverters: {\n  [dim: number]: (src: TypedArray, out: TypedArray, shape: number[]) => void;\n} = {\n  [0]: noop,\n  [1]: noop,\n  [2]: convertColMajorToRowMajor2D,\n  [3]: convertColMajorToRowMajor3D,\n  [4]: convertColMajorToRowMajor4D,\n};\n\n/**\n * Rewrites a copy of a TypedArray while converting it from column-major (F-order) to row-major (C-order).\n * @param src TypedArray\n * @param out TypedArray\n * @param shape number[]\n */\nexport function convertColMajorToRowMajor(src: TypedArray, out: TypedArray, shape: number[]): void {\n  return (colMajorToRowMajorConverters[shape.length] || convertColMajorToRowMajorGeneric)(\n    src,\n    out,\n    shape\n  );\n}\n\nexport function isArrayBufferLike(obj: unknown | null): obj is ArrayBufferLike {\n    if (obj === null) {\n        return false;\n    }\n    if (obj instanceof ArrayBuffer) {\n        return true;\n    }\n    if (typeof SharedArrayBuffer === \"function\" && obj instanceof SharedArrayBuffer) {\n        return true;\n    }\n    if (IS_NODE) { // Necessary for Node.js for some reason..\n        return (obj as Record<string, unknown>).toString().startsWith(\"[object ArrayBuffer]\")\n            || (obj as Record<string, unknown>).toString().startsWith(\"[object SharedArrayBuffer]\");\n    }\n    return false;\n}\n","export const ARRAY_META_KEY = \".zarray\";\n// export const GROUP_META_KEY = \".zgroup\";\nexport const GROUP_META_KEY = \".zmetadata\";\nexport const ATTRS_META_KEY = \".zattrs\";\n","import { normalizeStoragePath, normalizeChunks, normalizeDtype, normalizeShape, normalizeOrder, normalizeFillValue } from '../util';\nimport { Store } from './types';\nimport { ARRAY_META_KEY, GROUP_META_KEY } from '../names';\nimport { FillType, Order, Filter, CompressorConfig, ZarrGroupMetadata, ChunksArgument, DtypeString, ZarrArrayMetadata, FillTypeSerialized } from '../types';\nimport { ContainsArrayError, ContainsGroupError } from '../errors';\n\n\n/**\n * Return true if the store contains an array at the given logical path.\n */\nexport async function containsArray(store: Store, path: string | null = null) {\n    path = normalizeStoragePath(path);\n    const prefix = pathToPrefix(path);\n    const key = prefix + ARRAY_META_KEY;\n    return store.containsItem(key);\n}\n\n/**\n * Return true if the store contains a group at the given logical path.\n */\nexport async function containsGroup(store: Store, path: string | null = null) {\n    path = normalizeStoragePath(path);\n    const prefix = pathToPrefix(path);\n    const key = prefix + GROUP_META_KEY;\n    return store.containsItem(key);\n}\n\n\nexport function pathToPrefix(path: string): string {\n    // assume path already normalized\n    if (path.length > 0) {\n        return path + '/';\n    }\n    return '';\n}\n\nasync function listDirFromKeys(store: Store, path: string) {\n    // assume path already normalized\n    const prefix = pathToPrefix(path);\n    const children = new Set<string>();\n\n    for (const key in await store.keys()) {\n        if (key.startsWith(prefix) && key.length > prefix.length) {\n            const suffix = key.slice(prefix.length);\n            const child = suffix.split('/')[0];\n            children.add(child);\n        }\n    }\n    return Array.from(children).sort();\n}\n\nasync function requireParentGroup(store: Store, path: string, chunkStore: Store | null, overwrite: boolean) {\n    // Assume path is normalized\n    if (path.length === 0) {\n        return;\n    }\n\n    const segments = path.split(\"/\");\n    let p = \"\";\n    for (const s of segments.slice(0, segments.length - 1)) {\n        p += s;\n        if (await containsArray(store, p)) {\n            await initGroupMetadata(store, p, overwrite);\n        } else if (!await containsGroup(store, p)) {\n            await initGroupMetadata(store, p);\n        }\n        p += \"/\";\n    }\n}\n\n/**\n * Obtain a directory listing for the given path. If `store` provides a `listDir`\n *  method, this will be called, otherwise will fall back to implementation via the\n *  `MutableMapping` interface.\n * @param store \n */\nexport async function listDir(store: Store, path: string | null = null) {\n    path = normalizeStoragePath(path);\n    if (store.listDir) {\n        return store.listDir(path);\n    } else {\n        return listDirFromKeys(store, path);\n    }\n}\n\nasync function initGroupMetadata(store: Store, path: string | null = null, overwrite = false) {\n    path = normalizeStoragePath(path);\n\n    // Guard conditions\n    if (overwrite) {\n        throw Error(\"Group overwriting not implemented yet :(\");\n    } else if (await containsArray(store, path)) {\n        throw new ContainsArrayError(path);\n    } else if (await containsGroup(store, path)) {\n        throw new ContainsGroupError(path);\n    }\n\n    const metadata: ZarrGroupMetadata = { zarr_format: 2 };\n    const key = pathToPrefix(path) + GROUP_META_KEY;\n    await store.setItem(key, JSON.stringify(metadata));\n}\n/**\n *  Initialize a group store. Note that this is a low-level function and there should be no\n *  need to call this directly from user code.\n */\nexport async function initGroup(store: Store, path: string | null = null, chunkStore: null | Store = null, overwrite = false) {\n    path = normalizeStoragePath(path);\n    await requireParentGroup(store, path, chunkStore, overwrite);\n    await initGroupMetadata(store, path, overwrite);\n}\n\nasync function initArrayMetadata(\n    store: Store,\n    shape: number | number[],\n    chunks: ChunksArgument,\n    dtype: DtypeString,\n    path: string,\n    compressor: null | CompressorConfig,\n    fillValue: FillType,\n    order: Order,\n    overwrite: boolean,\n    chunkStore: null | Store,\n    filters: null | Filter[],\n    dimensionSeparator?: '.' | '/',\n) {\n    // Guard conditions\n    if (overwrite) {\n        throw Error(\"Array overwriting not implemented yet :(\");\n    } else if (await containsArray(store, path)) {\n        throw new ContainsArrayError(path);\n    } else if (await containsGroup(store, path)) {\n        throw new ContainsGroupError(path);\n    }\n\n    // Normalize metadata,  does type checking too.\n    dtype = normalizeDtype(dtype);\n    shape = normalizeShape(shape);\n    chunks = normalizeChunks(chunks, shape);\n    order = normalizeOrder(order);\n    fillValue = normalizeFillValue(fillValue);\n\n    if (filters !== null && filters.length > 0) {\n        throw Error(\"Filters are not supported yet\");\n    }\n\n    let serializedFillValue: FillTypeSerialized = fillValue;\n\n    if (typeof fillValue === \"number\") {\n        if (Number.isNaN(fillValue)) serializedFillValue = \"NaN\";\n        if (Number.POSITIVE_INFINITY === fillValue) serializedFillValue = \"Infinity\";\n        if (Number.NEGATIVE_INFINITY === fillValue) serializedFillValue = \"-Infinity\";\n    }\n\n    filters = null;\n\n    const metadata: ZarrArrayMetadata = {\n        zarr_format: 2,\n        shape: shape,\n        chunks: chunks as number[],\n        dtype: dtype,\n        fill_value: serializedFillValue,\n        order: order,\n        compressor: compressor,\n        filters: filters,\n    };\n    if (dimensionSeparator) {\n        metadata.dimension_separator = dimensionSeparator;\n    }\n    const metaKey = pathToPrefix(path) + ARRAY_META_KEY;\n    await store.setItem(metaKey, JSON.stringify(metadata));\n}\n\n/**\n * \n * Initialize an array store with the given configuration. Note that this is a low-level\n * function and there should be no need to call this directly from user code\n */\nexport async function initArray(\n    store: Store,\n    shape: number | number[],\n    chunks: ChunksArgument,\n    dtype: DtypeString,\n    path: string | null = null,\n    compressor: null | CompressorConfig = null,\n    fillValue: FillType = null,\n    order: Order = \"C\",\n    overwrite = false,\n    chunkStore: null | Store = null,\n    filters: null | Filter[] = null,\n    dimensionSeparator?: '.' | '/',\n) {\n\n    path = normalizeStoragePath(path);\n    await requireParentGroup(store, path, chunkStore, overwrite);\n    await initArrayMetadata(store, shape, chunks, dtype, path, compressor, fillValue, order, overwrite, chunkStore, filters, dimensionSeparator);\n}\n","import { ZarrMetadataType, UserAttributes } from './types';\nimport { ValidStoreType } from './storage/types';\nimport { isArrayBufferLike, IS_NODE } from './util';\n\nexport function parseMetadata(\n    s: ValidStoreType | ZarrMetadataType\n): ZarrMetadataType | UserAttributes {\n    // Here we allow that a store may return an already-parsed metadata object,\n    // or a string of JSON that we will parse here. We allow for an already-parsed\n    // object to accommodate a consolidated metadata store, where all the metadata for\n    // all groups and arrays will already have been parsed from JSON.\n    if (typeof s !== 'string') {\n        // tslint:disable-next-line: strict-type-predicates\n        if (IS_NODE && Buffer.isBuffer(s)) {\n            return JSON.parse(s.toString());\n        } else if (isArrayBufferLike(s)) {\n            const utf8Decoder = new TextDecoder();\n            const bytes = new Uint8Array(s);\n            return JSON.parse(utf8Decoder.decode(bytes));\n        } else {\n            return s;\n        }\n    }\n    return JSON.parse(s);\n}\n","import { createProxy, AsyncMutableMapping, AsyncMutableMappingProxy } from './mutableMapping';\nimport { Store } from './storage/types';\nimport { parseMetadata } from './metadata';\nimport { UserAttributes } from './types';\nimport { PermissionError } from './errors';\n\n/**\n * Class providing access to user attributes on an array or group. Should not be\n * instantiated directly, will be available via the `.attrs` property of an array or\n * group.\n */\nexport class Attributes<M extends UserAttributes> implements AsyncMutableMapping<any> {\n    store: Store;\n    key: string;\n    readOnly: boolean;\n    cache: boolean;\n    private cachedValue: M | null;\n\n    constructor(store: Store, key: string, readOnly: boolean, cache = true) {\n        this.store = store;\n        this.key = key;\n        this.readOnly = readOnly;\n        this.cache = cache;\n        this.cachedValue = null;\n    }\n\n    /**\n     * Retrieve all attributes as a JSON object.\n     */\n    public async asObject() {\n        if (this.cache && this.cachedValue !== null) {\n            return this.cachedValue;\n        }\n        const o = await this.getNoSync();\n        if (this.cache) {\n            this.cachedValue = o;\n        }\n        return o;\n    }\n\n    private async getNoSync(): Promise<M> {\n        try {\n            const data = await this.store.getItem(this.key);\n            // TODO fix typing?\n            return parseMetadata(data) as M;\n        } catch (error) {\n            return {} as M;\n        }\n    }\n\n    private async setNoSync(key: string, value: any) {\n        const d = await this.getNoSync();\n        (d as any)[key] = value;\n        await this.putNoSync(d);\n        return true;\n    }\n\n    private async putNoSync(m: M) {\n        await this.store.setItem(this.key, JSON.stringify(m));\n        if (this.cache) {\n            this.cachedValue = m;\n        }\n    }\n\n    private async delNoSync(key: string): Promise<boolean> {\n        const d = await this.getNoSync();\n        delete (d as any)[key];\n        await this.putNoSync(d);\n        return true;\n    }\n\n    /**\n     * Overwrite all attributes with the provided object in a single operation\n     */\n    async put(d: M) {\n        if (this.readOnly) {\n            throw new PermissionError(\"attributes are read-only\");\n        }\n        return this.putNoSync(d);\n    }\n\n    async setItem(key: string, value: any): Promise<boolean> {\n        if (this.readOnly) {\n            throw new PermissionError(\"attributes are read-only\");\n        }\n        return this.setNoSync(key, value);\n    }\n\n    async getItem(key: string) {\n        return ((await this.asObject()) as any)[key];\n    }\n\n    async deleteItem(key: string) {\n        if (this.readOnly) {\n            throw new PermissionError(\"attributes are read-only\");\n        }\n        return this.delNoSync(key);\n    }\n\n    async containsItem(key: string) {\n        return ((await this.asObject()) as any)[key] !== undefined;\n    }\n\n    proxy(): AsyncMutableMappingProxy<any> {\n        return createProxy(this);\n    }\n}","import { DtypeString } from '../types';\nimport { ValueError } from '../errors';\n\n// Conditionally get the type for `Float16Array` based on end user TS settings. If not\n// present, then the type if `never` (and thus excluded from unions).\ntype Float16ArrayConstructor = typeof globalThis extends { Float16Array: infer T } ? T : never;\n// eslint-disable-next-line @typescript-eslint/naming-convention\nconst Float16Array = (globalThis as any).Float16Array as Float16ArrayConstructor;\n\nexport type NestedArrayData = TypedArray | NDNestedArrayData;\nexport type NDNestedArrayData =\n  | TypedArray[]\n  | TypedArray[][]\n  | TypedArray[][][]\n  | TypedArray[][][][]\n  | TypedArray[][][][][]\n  | TypedArray[][][][][][];\n\nexport type TypedArray =\n  | Uint8Array\n  | Int8Array\n  | Uint16Array\n  | Int16Array\n  | Uint32Array\n  | Int32Array\n  | Float32Array\n  | Float64Array\n  // | BigInt64Array\n  | InstanceType<Float16ArrayConstructor>;\n\nexport type TypedArrayConstructor<T extends TypedArray> = {\n  new(): T;\n  // tslint:disable-next-line: unified-signatures\n  new(size: number): T;\n  // tslint:disable-next-line: unified-signatures\n  new(buffer: ArrayBuffer): T;\n  BYTES_PER_ELEMENT: number;\n};\n\nconst DTYPE_TYPEDARRAY_MAPPING: { [A in DtypeString]: TypedArrayConstructor<TypedArray> } = {\n  '|b': Int8Array,\n  '|b1': Uint8Array,\n  '|B': Uint8Array,\n  '|u1': Uint8Array,\n  '|i1': Int8Array,\n  '<b': Int8Array,\n  '<B': Uint8Array,\n  '<u1': Uint8Array,\n  '<i1': Int8Array,\n  '<u2': Uint16Array,\n  '<i2': Int16Array,\n  '<u4': Uint32Array,\n  '<i4': Int32Array,\n  '<i8': Float64Array,\n  '<f2': Float16Array,\n  '<f4': Float32Array,\n  '<f8': Float64Array,\n  '>b': Int8Array,\n  '>B': Uint8Array,\n  '>u1': Uint8Array,\n  '>i1': Int8Array,\n  '>u2': Uint16Array,\n  '>i2': Int16Array,\n  '>u4': Uint32Array,\n  '>i4': Int32Array,\n  '>f4': Float32Array,\n  '>f2': Float16Array,\n  '>f8': Float64Array\n};\n\nexport function getTypedArrayCtr(dtype: DtypeString) {\n  const ctr = DTYPE_TYPEDARRAY_MAPPING[dtype];\n  if (!ctr) {\n    if (dtype.slice(1) === 'f2') {\n      throw Error(\n        `'${dtype}' is not supported natively in zarr.js. ` +\n        `In order to access this dataset you must make Float16Array available as a global. ` +\n        `See https://github.com/gzuidhof/zarr.js/issues/127`\n      );\n    }\n    throw Error(`Dtype not recognized or not supported in zarr.js, got ${dtype}.`);\n  }\n  return ctr;\n}\n\n/*\n * Called by NestedArray and RawArray constructors only.\n * We byte-swap the buffer of a store after decoding\n * since TypedArray views are little endian only.\n *\n * This means NestedArrays and RawArrays will always be little endian,\n * unless a numpy-like library comes around and can handle endianess\n * for buffer views.\n */\nexport function getTypedArrayDtypeString(t: TypedArray): DtypeString {\n  // Favour the types below instead of small and big B\n  if (t instanceof Uint8Array) return '|u1';\n  if (t instanceof Int8Array) return '|i1';\n  if (t instanceof Uint16Array) return '<u2';\n  if (t instanceof Int16Array) return '<i2';\n  if (t instanceof Uint32Array) return '<u4';\n  if (t instanceof Int32Array) return '<i4';\n  // if (t instanceof Float64Array) return '<i8';\n  if (t instanceof Float32Array) return '<f4';\n  if (t instanceof Float64Array) return '<f8';\n  throw new ValueError('Mapping for TypedArray to Dtypestring not known');\n}\n","import { ArraySelection, SliceIndices } from '../core/types';\nimport { ValueError } from '../errors';\nimport { TypedArray, TypedArrayConstructor, NestedArrayData, NDNestedArrayData } from './types';\nimport { normalizeArraySelection, selectionToSliceIndices } from '../core/indexing';\n\n/**\n * Digs down into the dimensions of given array to find the TypedArray and returns its constructor.\n * Better to use sparingly.\n */\nexport function getNestedArrayConstructor<T extends TypedArray>(arr: any): TypedArrayConstructor<T> {\n    // TODO fix typing\n    // tslint:disable-next-line: strict-type-predicates\n    if ((arr as TypedArray).byteLength !== undefined) {\n        return (arr).constructor;\n    }\n    return getNestedArrayConstructor(arr[0]);\n}\n\n/**\n * Returns both the slice result and new output shape\n * @param arr NestedArray to slice\n * @param shape The shape of the NestedArray\n * @param selection\n */\nexport function sliceNestedArray(arr: NestedArrayData, shape: number[], selection: number | ArraySelection): [NestedArrayData | number, number[]] {\n    // This translates \"...\", \":\", null into a list of slices or integer selections\n    const normalizedSelection = normalizeArraySelection(selection, shape);\n    const [sliceIndices, outShape] = selectionToSliceIndices(normalizedSelection, shape);\n    const outArray = _sliceNestedArray(arr, shape, sliceIndices);\n    return [outArray, outShape];\n}\n\nfunction _sliceNestedArray<T extends TypedArray>(arr: NestedArrayData, shape: number[], selection: (SliceIndices | number)[]): NestedArrayData | number {\n    const currentSlice = selection[0];\n\n    // Is this necessary?\n    // // This is possible when a slice list is passed shorter than the amount of dimensions\n    // // tslint:disable-next-line: strict-type-predicates\n    // if (currentSlice === undefined) {\n    //     return arr.slice();\n    // }\n\n    // When a number is passed that dimension is squeezed\n    if (typeof currentSlice === \"number\") {\n        // Assume already normalized integer selection here.\n        if (shape.length === 1) {\n            return arr[currentSlice];\n        } else {\n            return _sliceNestedArray(arr[currentSlice] as NestedArrayData, shape.slice(1), selection.slice(1));\n        }\n    }\n    const [from, to, step, outputSize] = currentSlice;\n\n    if (outputSize === 0) {\n        return new (getNestedArrayConstructor(arr))(0);\n    }\n\n    if (shape.length === 1) {\n        if (step === 1) {\n            return (arr as TypedArray).slice(from, to);\n        }\n\n        const newArrData = new (arr.constructor as TypedArrayConstructor<T>)(outputSize);\n        for (let i = 0; i < outputSize; i++) {\n            newArrData[i] = (arr as TypedArray)[from + i * step];\n        }\n        return newArrData;\n    }\n\n    let newArr = new Array(outputSize);\n\n    for (let i = 0; i < outputSize; i++) {\n        newArr[i] = _sliceNestedArray(arr[from + i * step] as NestedArrayData, shape.slice(1), selection.slice(1));\n    }\n\n    // This is necessary to ensure that the return value is a NestedArray if the last dimension is squeezed\n    // e.g. shape [2,1] with slice [:, 0] would otherwise result in a list of numbers instead of a valid NestedArray\n    if (outputSize > 0 && typeof newArr[0] === \"number\") {\n        const typedArrayConstructor = (arr[0] as TypedArray).constructor;\n        newArr = (typedArrayConstructor as any).from(newArr);\n    }\n\n    return newArr;\n}\n\n\n\n\nexport function setNestedArrayToScalar(dstArr: NestedArrayData, value: number, destShape: number[], selection: number | ArraySelection) {\n    // This translates \"...\", \":\", null, etc into a list of slices.\n    const normalizedSelection = normalizeArraySelection(selection, destShape, true);\n\n    // Above we force the results to be SliceIndicesIndices only, without integer selections making this cast is safe.\n    const [sliceIndices, _outShape] = selectionToSliceIndices(normalizedSelection, destShape) as [SliceIndices[], number[]];\n    _setNestedArrayToScalar(dstArr, value, destShape, sliceIndices);\n}\n\nexport function setNestedArray(dstArr: NestedArrayData, sourceArr: NestedArrayData, destShape: number[], sourceShape: number[], selection: number | ArraySelection) {\n    // This translates \"...\", \":\", null, etc into a list of slices.\n    const normalizedSelection = normalizeArraySelection(selection, destShape, false);\n    const [sliceIndices, outShape] = selectionToSliceIndices(normalizedSelection, destShape);\n\n    // TODO: replace with non stringify equality check\n    if (JSON.stringify(outShape) !== JSON.stringify(sourceShape)) {\n        throw new ValueError(`Shape mismatch in target and source NestedArray: ${outShape} and ${sourceShape}`);\n    }\n\n    _setNestedArray(dstArr, sourceArr, destShape, sliceIndices);\n}\n\n\nfunction _setNestedArray(dstArr: NestedArrayData, sourceArr: NestedArrayData | number, shape: number[], selection: (SliceIndices | number)[]) {\n\n    const currentSlice = selection[0];\n\n    if (typeof sourceArr === \"number\") {\n        _setNestedArrayToScalar(dstArr, sourceArr, shape, selection.map(x => typeof x === \"number\" ? [x, x + 1, 1, 1] : x));\n        return;\n    }\n\n    // This dimension is squeezed.\n    if (typeof currentSlice === \"number\") {\n        _setNestedArray((dstArr as NDNestedArrayData)[currentSlice], sourceArr, shape.slice(1), selection.slice(1));\n        return;\n    }\n\n    const [from, _to, step, outputSize] = currentSlice;\n\n    if (shape.length === 1) {\n        if (step === 1) {\n            (dstArr as TypedArray).set(sourceArr as TypedArray, from);\n        } else {\n            for (let i = 0; i < outputSize; i++) {\n                dstArr[from + i * step] = (sourceArr)[i];\n            }\n        }\n        return;\n    }\n\n    for (let i = 0; i < outputSize; i++) {\n        _setNestedArray((dstArr as NDNestedArrayData)[from + i * step], (sourceArr as NDNestedArrayData)[i], shape.slice(1), selection.slice(1));\n    }\n}\n\nfunction _setNestedArrayToScalar(dstArr: NestedArrayData, value: number, shape: number[], selection: SliceIndices[]) {\n    const currentSlice = selection[0];\n\n    const [from, to, step, outputSize] = currentSlice;\n\n    if (shape.length === 1) {\n        if (step === 1) {\n            (dstArr as TypedArray).fill(value, from, to);\n        } else {\n            for (let i = 0; i < outputSize; i++) {\n                dstArr[from + i * step] = value;\n            }\n        }\n        return;\n    }\n\n    for (let i = 0; i < outputSize; i++) {\n        _setNestedArrayToScalar((dstArr as NDNestedArrayData)[from + i * step], value, shape.slice(1), selection.slice(1));\n    }\n}\n\nexport function flattenNestedArray(arr: NestedArrayData, shape: number[], constr?: TypedArrayConstructor<TypedArray>): TypedArray {\n    if (constr === undefined) {\n        constr = getNestedArrayConstructor(arr);\n    }\n    const size = shape.reduce((x, y) => x * y, 1);\n    const outArr = new constr(size);\n\n    _flattenNestedArray(arr, shape, outArr, 0);\n\n    return outArr;\n}\n\nfunction _flattenNestedArray(arr: NestedArrayData, shape: number[], outArr: TypedArray, offset: number) {\n    if (shape.length === 1) {\n        // This is only ever reached if called with rank 1 shape, never reached through recursion.\n        // We just slice set the array directly from one level above to save some function calls.\n        outArr.set((arr as TypedArray), offset);\n        return;\n    }\n\n    if (shape.length === 2) {\n        for (let i = 0; i < shape[0]; i++) {\n            outArr.set((arr as TypedArray[])[i], offset + shape[1] * i);\n        }\n        return arr;\n    }\n\n    const nextShape = shape.slice(1);\n    // Small optimization possible here: this can be precomputed for different levels of depth and passed on.\n    const mult = nextShape.reduce((x, y) => x * y, 1);\n\n    for (let i = 0; i < shape[0]; i++) {\n        _flattenNestedArray((arr as NDNestedArrayData)[i], nextShape, outArr, offset + mult * i);\n    }\n    return arr;\n}\n","import { DtypeString } from '../types';\nimport { NestedArrayData, TypedArray, TypedArrayConstructor, getTypedArrayCtr, getTypedArrayDtypeString } from './types';\nimport { ArraySelection, Slice } from '../core/types';\nimport { slice } from '../core/slice';\nimport { ValueError } from '../errors';\nimport { normalizeShape, IS_NODE, isArrayBufferLike } from '../util';\nimport { setNestedArray, setNestedArrayToScalar, flattenNestedArray, sliceNestedArray } from './ops';\n\nexport class NestedArray<T extends TypedArray> {\n    dtype: DtypeString;\n    shape: number[];\n    data: NestedArrayData;\n\n    constructor(data: TypedArray, shape?: number | number[], dtype?: DtypeString)\n    constructor(data: Buffer | ArrayBufferLike | NestedArrayData | null, shape: number | number[], dtype: DtypeString)\n    constructor(data: Buffer | ArrayBufferLike | NestedArrayData | TypedArray | null, shape?: number | number[], dtype?: DtypeString) {\n        const dataIsTypedArray = data !== null && !!(data as TypedArray).BYTES_PER_ELEMENT;\n\n        if (shape === undefined) {\n            if (!dataIsTypedArray) {\n                throw new ValueError(\"Shape argument is required unless you pass in a TypedArray\");\n            }\n            shape = [(data as TypedArray).length];\n        }\n\n        if (dtype === undefined) {\n            if (!dataIsTypedArray) {\n                throw new ValueError(\"Dtype argument is required unless you pass in a TypedArray\");\n            }\n            dtype = getTypedArrayDtypeString(data as TypedArray);\n        }\n\n        shape = normalizeShape(shape);\n        this.shape = shape;\n        this.dtype = dtype;\n\n        if (dataIsTypedArray && shape.length !== 1) {\n            data = (data as TypedArray).buffer;\n        }\n\n        // Zero dimension array.. they are a bit weirdly represented now, they will only ever occur internally\n        if (this.shape.length === 0) {\n            this.data = new (getTypedArrayCtr(dtype))(1);\n        }\n        else if (\n            // tslint:disable-next-line: strict-type-predicates\n            (IS_NODE && Buffer.isBuffer(data))\n            || isArrayBufferLike(data)\n            || data === null\n        ) {\n            // Create from ArrayBuffer or Buffer\n            const numShapeElements = shape.reduce((x, y) => x * y, 1);\n\n            if (data === null) {\n                data = new ArrayBuffer(numShapeElements * parseInt(dtype[dtype.length - 1], 10));\n            }\n\n            const numDataElements = (data as ArrayBuffer).byteLength / parseInt(dtype[dtype.length - 1], 10);\n            if (numShapeElements !== numDataElements) {\n                throw new Error(`Buffer has ${numDataElements} of dtype ${dtype}, shape is too large or small ${shape} (flat=${numShapeElements})`);\n            }\n            const typeConstructor: TypedArrayConstructor<TypedArray> = getTypedArrayCtr(dtype);\n            this.data = createNestedArray((data as ArrayBuffer), typeConstructor, shape);\n        } else {\n            this.data = data;\n        }\n    }\n\n    public get(selection: Slice | \":\" | \"...\" | null | (Slice | null | \":\" | \"...\")[]): NestedArray<T>;\n    public get(selection: ArraySelection): NestedArray<T> | number;\n    public get(selection: ArraySelection): NestedArray<T> | number {\n        const [sliceResult, outShape] = sliceNestedArray(this.data, this.shape, selection);\n        if (outShape.length === 0) {\n            return sliceResult as number;\n        } else {\n            return new NestedArray(sliceResult as NestedArrayData, outShape, this.dtype);\n        }\n    }\n\n    public set(selection: ArraySelection = null, value: NestedArray<T> | number) {\n        if (selection === null) {\n            selection = [slice(null)];\n        }\n        if (typeof value === \"number\") {\n            if (this.shape.length === 0) {\n                // Zero dimension array..\n                this.data[0] = value;\n            } else {\n                setNestedArrayToScalar(this.data, value, this.shape, selection);\n            }\n        } else {\n            setNestedArray(this.data, value.data, this.shape, value.shape, selection);\n        }\n    }\n\n    public flatten(): T {\n        if (this.shape.length === 1) {\n            return this.data as T;\n        }\n        return flattenNestedArray(this.data, this.shape, getTypedArrayCtr(this.dtype)) as T;\n    }\n\n    /**\n     * Currently only supports a single integer as the size, TODO: support start, stop, step.\n     */\n    public static arange(size: number, dtype: DtypeString = \"<i4\"): NestedArray<TypedArray> {\n        const constr = getTypedArrayCtr(dtype);\n        const data = rangeTypedArray([size], constr);\n        return new NestedArray(data, [size], dtype);\n    }\n}\n\n\n\n/**\n * Creates a TypedArray with values 0 through N where N is the product of the shape.\n */\nexport function rangeTypedArray<T extends TypedArray>(shape: number[], tContructor: TypedArrayConstructor<T>) {\n    const size = shape.reduce((x, y) => x * y, 1);\n    const data = new tContructor(size);\n    data.set([...Array(size).keys()]); // Sets range 0,1,2,3,4,5\n    return data;\n}\n\n/**\n * Creates multi-dimensional (rank > 1) array given input data and shape recursively.\n * What it does is create a Array<Array<...<Array<Uint8Array>>> or some other typed array.\n * This is for internal use, there should be no need to call this from user code.\n * @param data a buffer containing the data for this array.\n * @param t constructor for the datatype of choice\n * @param shape list of numbers describing the size in each dimension\n * @param offset in bytes for this dimension\n */\nexport function createNestedArray<T extends TypedArray>(data: Buffer | ArrayBuffer, t: TypedArrayConstructor<T>, shape: number[], offset = 0): NestedArrayData {\n    if (shape.length === 1) {\n        // This is only ever reached if called with rank 1 shape, never reached through recursion.\n        // We just slice set the array directly from one level above to save some function calls.\n        return new t(data.slice(offset, offset + shape[0] * t.BYTES_PER_ELEMENT));\n    }\n\n    const arr = new Array<any>(shape[0]);\n    if (shape.length === 2) {\n        for (let i = 0; i < shape[0]; i++) {\n            arr[i] = new t(data.slice(offset + shape[1] * i * t.BYTES_PER_ELEMENT, offset + shape[1] * (i + 1) * t.BYTES_PER_ELEMENT));\n        }\n        return arr;\n    }\n\n    const nextShape = shape.slice(1);\n    // Small optimization possible here: this can be precomputed for different levels of depth and passed on.\n    const mult = nextShape.reduce((x, y) => x * y, 1);\n\n    for (let i = 0; i < shape[0]; i++) {\n        arr[i] = createNestedArray(data, t, nextShape, offset + mult * i * t.BYTES_PER_ELEMENT);\n    }\n    return arr;\n}\n","import { ArraySelection, SliceIndices } from '../core/types';\nimport { normalizeArraySelection, selectionToSliceIndices } from '../core/indexing';\nimport { ValueError } from '../errors';\nimport { TypedArray } from '../nestedArray/types';\n\nexport function setRawArrayToScalar(dstArr: TypedArray, dstStrides: number[], dstShape: number[], dstSelection: number | ArraySelection, value: number) {\n    // This translates \"...\", \":\", null, etc into a list of slices.\n    const normalizedSelection = normalizeArraySelection(dstSelection, dstShape, true);\n    const [sliceIndices] = selectionToSliceIndices(normalizedSelection, dstShape);\n    // Above we force the results to be SliceIndicesIndices only, without integer selections making this cast is safe.\n    _setRawArrayToScalar(value, dstArr, dstStrides, sliceIndices as SliceIndices[]);\n}\n\nexport function setRawArray(dstArr: TypedArray, dstStrides: number[], dstShape: number[], dstSelection: number | ArraySelection, sourceArr: TypedArray, sourceStrides: number[], sourceShape: number[]): void {\n    // This translates \"...\", \":\", null, etc into a list of slices.\n    const normalizedDstSelection = normalizeArraySelection(dstSelection, dstShape, false);\n    const [dstSliceIndices, outShape] = selectionToSliceIndices(normalizedDstSelection, dstShape);\n\n    // TODO: replace with non stringify equality check\n    if (JSON.stringify(outShape) !== JSON.stringify(sourceShape)) {\n        throw new ValueError(`Shape mismatch in target and source RawArray: ${outShape} and ${sourceShape}`);\n    }\n\n    _setRawArray(dstArr, dstStrides, dstSliceIndices, sourceArr, sourceStrides);\n}\n\nexport function setRawArrayFromChunkItem(dstArr: TypedArray, dstStrides: number[], dstShape: number[], dstSelection: number | ArraySelection, sourceArr: TypedArray, sourceStrides: number[], sourceShape: number[], sourceSelection: number | ArraySelection) {\n    // This translates \"...\", \":\", null, etc into a list of slices.\n    const normalizedDstSelection = normalizeArraySelection(dstSelection, dstShape, true);\n    // Above we force the results to be dstSliceIndices only, without integer selections making this cast is safe.\n    const [dstSliceIndices] = selectionToSliceIndices(normalizedDstSelection, dstShape);\n\n    const normalizedSourceSelection = normalizeArraySelection(sourceSelection, sourceShape, false);\n    const [sourceSliceIndicies] = selectionToSliceIndices(normalizedSourceSelection, sourceShape);\n\n    // TODO check to ensure chunk and dest selection are same shape?\n    // As is, this only gets called in ZarrArray.getRaw where this condition should be ensured, and check might hinder performance.\n\n    _setRawArrayFromChunkItem(dstArr, dstStrides, dstSliceIndices as SliceIndices[], sourceArr, sourceStrides, sourceSliceIndicies);\n}\n\nfunction _setRawArrayToScalar(value: number, dstArr: TypedArray, dstStrides: number[], dstSliceIndices: SliceIndices[]) {\n    const [currentDstSlice, ...nextDstSliceIndices] = dstSliceIndices;\n    const [currentDstStride, ...nextDstStrides] = dstStrides;\n\n    const [from, _to, step, outputSize] = currentDstSlice;\n\n    if (dstStrides.length === 1) {\n        if (step === 1 && currentDstStride === 1) {\n            dstArr.fill(value, from, from + outputSize);\n        } else {\n            for (let i = 0; i < outputSize; i++) {\n                dstArr[currentDstStride * (from + (step * i))] = value;\n            }\n        }\n        return;\n    }\n\n    for (let i = 0; i < outputSize; i++) {\n        _setRawArrayToScalar(\n            value,\n            dstArr.subarray(currentDstStride * (from + (step * i))),\n            nextDstStrides,\n            nextDstSliceIndices,\n        );\n    }\n}\n\nfunction _setRawArray(dstArr: TypedArray, dstStrides: number[], dstSliceIndices: (number | SliceIndices)[], sourceArr: TypedArray, sourceStrides: number[]) {\n    if (dstSliceIndices.length === 0) {\n        dstArr.set(sourceArr);\n        return;\n    }\n\n    const [currentDstSlice, ...nextDstSliceIndices] = dstSliceIndices;\n    const [currentDstStride, ...nextDstStrides] = dstStrides;\n\n    // This dimension is squeezed.\n    if (typeof currentDstSlice === \"number\") {\n        _setRawArray(\n            dstArr.subarray(currentDstSlice * currentDstStride),\n            nextDstStrides,\n            nextDstSliceIndices,\n            sourceArr,\n            sourceStrides\n        );\n        return;\n    }\n\n    const [currentSourceStride, ...nextSourceStrides] = sourceStrides;\n    const [from, _to, step, outputSize] = currentDstSlice;\n\n    if (dstStrides.length === 1) {\n        if (step === 1 && currentDstStride === 1 && currentSourceStride === 1) {\n            dstArr.set(sourceArr.subarray(0, outputSize), from);\n        } else {\n            for (let i = 0; i < outputSize; i++) {\n                dstArr[currentDstStride * (from + (step * i))] = sourceArr[currentSourceStride * i];\n            }\n        }\n        return;\n    }\n\n    for (let i = 0; i < outputSize; i++) {\n        // Apply strides as above, using both destination and source-specific strides.\n        _setRawArray(\n            dstArr.subarray(currentDstStride * (from + (i * step))),\n            nextDstStrides,\n            nextDstSliceIndices,\n            sourceArr.subarray(currentSourceStride * i),\n            nextSourceStrides\n        );\n    }\n}\n\nfunction _setRawArrayFromChunkItem(dstArr: TypedArray, dstStrides: number[], dstSliceIndices: SliceIndices[], sourceArr: TypedArray, sourceStrides: number[], sourceSliceIndices: (SliceIndices | number)[]) {\n    if (sourceSliceIndices.length === 0) {\n        // Case when last source dimension is squeezed\n        dstArr.set(sourceArr.subarray(0, dstArr.length));\n        return;\n    }\n\n    // Get current indicies and strides for both destination and source arrays\n    const [currentDstSlice, ...nextDstSliceIndices] = dstSliceIndices;\n    const [currentSourceSlice, ...nextSourceSliceIndices] = sourceSliceIndices;\n\n    const [currentDstStride, ...nextDstStrides] = dstStrides;\n    const [currentSourceStride, ...nextSourceStrides] = sourceStrides;\n\n    // This source dimension is squeezed\n    if (typeof currentSourceSlice === \"number\") {\n        /*\n        Sets dimension offset for squeezed dimension.\n\n        Ex. if 0th dimension is squeezed to 2nd index (numpy : arr[2,i])\n\n            sourceArr[stride[0]* 2 + i] --> sourceArr.subarray(stride[0] * 2)[i] (sourceArr[i] in next call)\n\n        Thus, subsequent squeezed dims are appended to the source offset.\n        */\n        _setRawArrayFromChunkItem(\n            // Don't update destination offset/slices, just source\n            dstArr, dstStrides, dstSliceIndices,\n            sourceArr.subarray(currentSourceStride * currentSourceSlice),\n            nextSourceStrides,\n            nextSourceSliceIndices,\n        );\n        return;\n    }\n\n    const [from, _to, step, outputSize] = currentDstSlice; // just need start and size\n    const [sfrom, _sto, sstep, _soutputSize] = currentSourceSlice; // Will always be subset of dst, so don't need output size just start\n\n    if (dstStrides.length === 1 && sourceStrides.length === 1) {\n        if (step === 1 && currentDstStride === 1 && sstep === 1 && currentSourceStride === 1) {\n            dstArr.set(sourceArr.subarray(sfrom, sfrom + outputSize), from);\n        } else {\n            for (let i = 0; i < outputSize; i++) {\n                dstArr[currentDstStride * (from + (step * i))] = sourceArr[currentSourceStride * (sfrom + (sstep * i))];\n            }\n        }\n        return;\n    }\n\n    for (let i = 0; i < outputSize; i++) {\n        // Apply strides as above, using both destination and source-specific strides.\n        _setRawArrayFromChunkItem(\n            dstArr.subarray(currentDstStride * (from + (i * step))),\n            nextDstStrides,\n            nextDstSliceIndices,\n            sourceArr.subarray(currentSourceStride * (sfrom + (i * sstep))),\n            nextSourceStrides,\n            nextSourceSliceIndices,\n        );\n    }\n}\n","import { DtypeString } from '../types';\nimport { ArraySelection } from '../core/types';\nimport { slice } from '../core/slice';\nimport { ValueError } from '../errors';\nimport { normalizeShape, IS_NODE, getStrides, isArrayBufferLike } from '../util';\nimport { TypedArray, getTypedArrayCtr, getTypedArrayDtypeString, TypedArrayConstructor } from '../nestedArray/types';\nimport { setRawArrayFromChunkItem, setRawArrayToScalar, setRawArray } from './ops';\n\nexport class RawArray {\n    dtype: DtypeString;\n    shape: number[];\n    strides: number[];\n    data: TypedArray;\n\n    constructor(data: TypedArray, shape?: number | number[], dtype?: DtypeString, strides?: number[])\n    constructor(data: Buffer | ArrayBufferLike | null, shape?: number | number[], dtype?: DtypeString, strides?: number[])\n    constructor(data: Buffer | ArrayBufferLike | TypedArray | null, shape?: number | number[], dtype?: DtypeString, strides?: number[]) {\n        const dataIsTypedArray = data !== null && !!(data as TypedArray).BYTES_PER_ELEMENT;\n\n        if (shape === undefined) {\n            if (!dataIsTypedArray) {\n                throw new ValueError(\"Shape argument is required unless you pass in a TypedArray\");\n            }\n            shape = [(data as TypedArray).length];\n        }\n        shape = normalizeShape(shape);\n\n        if (dtype === undefined) {\n            if (!dataIsTypedArray) {\n                throw new ValueError(\"Dtype argument is required unless you pass in a TypedArray\");\n            }\n            dtype = getTypedArrayDtypeString(data as TypedArray);\n        }\n\n        if (strides === undefined) {\n            strides = getStrides(shape);\n        }\n\n        this.shape = shape;\n        this.dtype = dtype;\n        this.strides = strides;\n\n        if (dataIsTypedArray && shape.length !== 1) {\n            data = (data as TypedArray).buffer;\n        }\n\n        // Zero dimension array.. they are a bit weirdly represented now, they will only ever occur internally\n        if (this.shape.length === 0) {\n            this.data = new (getTypedArrayCtr(dtype))(1);\n        } else if (\n            // tslint:disable-next-line: strict-type-predicates\n            (IS_NODE && Buffer.isBuffer(data))\n            || isArrayBufferLike(data)\n            || data === null\n        ) {\n            // Create from ArrayBuffer or Buffer\n            const numShapeElements = shape.reduce((x, y) => x * y, 1);\n\n            if (data === null) {\n                data = new ArrayBuffer(numShapeElements * parseInt(dtype[dtype.length - 1], 10));\n            }\n\n            const numDataElements = (data as ArrayBuffer).byteLength / parseInt(dtype[dtype.length - 1], 10);\n            if (numShapeElements !== numDataElements) {\n                throw new Error(`Buffer has ${numDataElements} of dtype ${dtype}, shape is too large or small ${shape} (flat=${numShapeElements})`);\n            }\n            const typeConstructor: TypedArrayConstructor<TypedArray> = getTypedArrayCtr(dtype);\n            this.data = new typeConstructor(data as ArrayBuffer);\n        } else {\n            this.data = data;\n        }\n    }\n\n    public set(selection: ArraySelection, value: RawArray | number): void;\n    public set(selection: ArraySelection, chunk: RawArray, chunkSelection: ArraySelection): void;\n    public set(selection: ArraySelection = null, value: RawArray | number, chunkSelection?: ArraySelection) {\n        if (selection === null) {\n            selection = [slice(null)];\n        }\n        if (typeof value === \"number\") {\n            if (this.shape.length === 0) {\n                // Zero dimension array..\n                this.data[0] = value;\n            } else {\n                setRawArrayToScalar(this.data, this.strides, this.shape, selection, value);\n            }\n        } else if (value instanceof RawArray && chunkSelection) {\n            // Copy directly from decoded chunk to destination array\n            setRawArrayFromChunkItem(this.data, this.strides, this.shape, selection, value.data, value.strides, value.shape, chunkSelection);\n        } else {\n            setRawArray(this.data, this.strides, this.shape, selection, value.data, value.strides, value.shape);\n        }\n    }\n}\n\n\n","'use strict';\n\nvar has = Object.prototype.hasOwnProperty\n  , prefix = '~';\n\n/**\n * Constructor to create a storage for our `EE` objects.\n * An `Events` instance is a plain object whose properties are event names.\n *\n * @constructor\n * @private\n */\nfunction Events() {}\n\n//\n// We try to not inherit from `Object.prototype`. In some engines creating an\n// instance in this way is faster than calling `Object.create(null)` directly.\n// If `Object.create(null)` is not supported we prefix the event names with a\n// character to make sure that the built-in object properties are not\n// overridden or used as an attack vector.\n//\nif (Object.create) {\n  Events.prototype = Object.create(null);\n\n  //\n  // This hack is needed because the `__proto__` property is still inherited in\n  // some old browsers like Android 4, iPhone 5.1, Opera 11 and Safari 5.\n  //\n  if (!new Events().__proto__) prefix = false;\n}\n\n/**\n * Representation of a single event listener.\n *\n * @param {Function} fn The listener function.\n * @param {*} context The context to invoke the listener with.\n * @param {Boolean} [once=false] Specify if the listener is a one-time listener.\n * @constructor\n * @private\n */\nfunction EE(fn, context, once) {\n  this.fn = fn;\n  this.context = context;\n  this.once = once || false;\n}\n\n/**\n * Add a listener for a given event.\n *\n * @param {EventEmitter} emitter Reference to the `EventEmitter` instance.\n * @param {(String|Symbol)} event The event name.\n * @param {Function} fn The listener function.\n * @param {*} context The context to invoke the listener with.\n * @param {Boolean} once Specify if the listener is a one-time listener.\n * @returns {EventEmitter}\n * @private\n */\nfunction addListener(emitter, event, fn, context, once) {\n  if (typeof fn !== 'function') {\n    throw new TypeError('The listener must be a function');\n  }\n\n  var listener = new EE(fn, context || emitter, once)\n    , evt = prefix ? prefix + event : event;\n\n  if (!emitter._events[evt]) emitter._events[evt] = listener, emitter._eventsCount++;\n  else if (!emitter._events[evt].fn) emitter._events[evt].push(listener);\n  else emitter._events[evt] = [emitter._events[evt], listener];\n\n  return emitter;\n}\n\n/**\n * Clear event by name.\n *\n * @param {EventEmitter} emitter Reference to the `EventEmitter` instance.\n * @param {(String|Symbol)} evt The Event name.\n * @private\n */\nfunction clearEvent(emitter, evt) {\n  if (--emitter._eventsCount === 0) emitter._events = new Events();\n  else delete emitter._events[evt];\n}\n\n/**\n * Minimal `EventEmitter` interface that is molded against the Node.js\n * `EventEmitter` interface.\n *\n * @constructor\n * @public\n */\nfunction EventEmitter() {\n  this._events = new Events();\n  this._eventsCount = 0;\n}\n\n/**\n * Return an array listing the events for which the emitter has registered\n * listeners.\n *\n * @returns {Array}\n * @public\n */\nEventEmitter.prototype.eventNames = function eventNames() {\n  var names = []\n    , events\n    , name;\n\n  if (this._eventsCount === 0) return names;\n\n  for (name in (events = this._events)) {\n    if (has.call(events, name)) names.push(prefix ? name.slice(1) : name);\n  }\n\n  if (Object.getOwnPropertySymbols) {\n    return names.concat(Object.getOwnPropertySymbols(events));\n  }\n\n  return names;\n};\n\n/**\n * Return the listeners registered for a given event.\n *\n * @param {(String|Symbol)} event The event name.\n * @returns {Array} The registered listeners.\n * @public\n */\nEventEmitter.prototype.listeners = function listeners(event) {\n  var evt = prefix ? prefix + event : event\n    , handlers = this._events[evt];\n\n  if (!handlers) return [];\n  if (handlers.fn) return [handlers.fn];\n\n  for (var i = 0, l = handlers.length, ee = new Array(l); i < l; i++) {\n    ee[i] = handlers[i].fn;\n  }\n\n  return ee;\n};\n\n/**\n * Return the number of listeners listening to a given event.\n *\n * @param {(String|Symbol)} event The event name.\n * @returns {Number} The number of listeners.\n * @public\n */\nEventEmitter.prototype.listenerCount = function listenerCount(event) {\n  var evt = prefix ? prefix + event : event\n    , listeners = this._events[evt];\n\n  if (!listeners) return 0;\n  if (listeners.fn) return 1;\n  return listeners.length;\n};\n\n/**\n * Calls each of the listeners registered for a given event.\n *\n * @param {(String|Symbol)} event The event name.\n * @returns {Boolean} `true` if the event had listeners, else `false`.\n * @public\n */\nEventEmitter.prototype.emit = function emit(event, a1, a2, a3, a4, a5) {\n  var evt = prefix ? prefix + event : event;\n\n  if (!this._events[evt]) return false;\n\n  var listeners = this._events[evt]\n    , len = arguments.length\n    , args\n    , i;\n\n  if (listeners.fn) {\n    if (listeners.once) this.removeListener(event, listeners.fn, undefined, true);\n\n    switch (len) {\n      case 1: return listeners.fn.call(listeners.context), true;\n      case 2: return listeners.fn.call(listeners.context, a1), true;\n      case 3: return listeners.fn.call(listeners.context, a1, a2), true;\n      case 4: return listeners.fn.call(listeners.context, a1, a2, a3), true;\n      case 5: return listeners.fn.call(listeners.context, a1, a2, a3, a4), true;\n      case 6: return listeners.fn.call(listeners.context, a1, a2, a3, a4, a5), true;\n    }\n\n    for (i = 1, args = new Array(len -1); i < len; i++) {\n      args[i - 1] = arguments[i];\n    }\n\n    listeners.fn.apply(listeners.context, args);\n  } else {\n    var length = listeners.length\n      , j;\n\n    for (i = 0; i < length; i++) {\n      if (listeners[i].once) this.removeListener(event, listeners[i].fn, undefined, true);\n\n      switch (len) {\n        case 1: listeners[i].fn.call(listeners[i].context); break;\n        case 2: listeners[i].fn.call(listeners[i].context, a1); break;\n        case 3: listeners[i].fn.call(listeners[i].context, a1, a2); break;\n        case 4: listeners[i].fn.call(listeners[i].context, a1, a2, a3); break;\n        default:\n          if (!args) for (j = 1, args = new Array(len -1); j < len; j++) {\n            args[j - 1] = arguments[j];\n          }\n\n          listeners[i].fn.apply(listeners[i].context, args);\n      }\n    }\n  }\n\n  return true;\n};\n\n/**\n * Add a listener for a given event.\n *\n * @param {(String|Symbol)} event The event name.\n * @param {Function} fn The listener function.\n * @param {*} [context=this] The context to invoke the listener with.\n * @returns {EventEmitter} `this`.\n * @public\n */\nEventEmitter.prototype.on = function on(event, fn, context) {\n  return addListener(this, event, fn, context, false);\n};\n\n/**\n * Add a one-time listener for a given event.\n *\n * @param {(String|Symbol)} event The event name.\n * @param {Function} fn The listener function.\n * @param {*} [context=this] The context to invoke the listener with.\n * @returns {EventEmitter} `this`.\n * @public\n */\nEventEmitter.prototype.once = function once(event, fn, context) {\n  return addListener(this, event, fn, context, true);\n};\n\n/**\n * Remove the listeners of a given event.\n *\n * @param {(String|Symbol)} event The event name.\n * @param {Function} fn Only remove the listeners that match this function.\n * @param {*} context Only remove the listeners that have this context.\n * @param {Boolean} once Only remove one-time listeners.\n * @returns {EventEmitter} `this`.\n * @public\n */\nEventEmitter.prototype.removeListener = function removeListener(event, fn, context, once) {\n  var evt = prefix ? prefix + event : event;\n\n  if (!this._events[evt]) return this;\n  if (!fn) {\n    clearEvent(this, evt);\n    return this;\n  }\n\n  var listeners = this._events[evt];\n\n  if (listeners.fn) {\n    if (\n      listeners.fn === fn &&\n      (!once || listeners.once) &&\n      (!context || listeners.context === context)\n    ) {\n      clearEvent(this, evt);\n    }\n  } else {\n    for (var i = 0, events = [], length = listeners.length; i < length; i++) {\n      if (\n        listeners[i].fn !== fn ||\n        (once && !listeners[i].once) ||\n        (context && listeners[i].context !== context)\n      ) {\n        events.push(listeners[i]);\n      }\n    }\n\n    //\n    // Reset the array, or remove it completely if we have no more listeners.\n    //\n    if (events.length) this._events[evt] = events.length === 1 ? events[0] : events;\n    else clearEvent(this, evt);\n  }\n\n  return this;\n};\n\n/**\n * Remove all listeners, or those of the specified event.\n *\n * @param {(String|Symbol)} [event] The event name.\n * @returns {EventEmitter} `this`.\n * @public\n */\nEventEmitter.prototype.removeAllListeners = function removeAllListeners(event) {\n  var evt;\n\n  if (event) {\n    evt = prefix ? prefix + event : event;\n    if (this._events[evt]) clearEvent(this, evt);\n  } else {\n    this._events = new Events();\n    this._eventsCount = 0;\n  }\n\n  return this;\n};\n\n//\n// Alias methods names because people roll like that.\n//\nEventEmitter.prototype.off = EventEmitter.prototype.removeListener;\nEventEmitter.prototype.addListener = EventEmitter.prototype.on;\n\n//\n// Expose the prefix.\n//\nEventEmitter.prefixed = prefix;\n\n//\n// Allow `EventEmitter` to be imported as module namespace.\n//\nEventEmitter.EventEmitter = EventEmitter;\n\n//\n// Expose the module.\n//\nif ('undefined' !== typeof module) {\n  module.exports = EventEmitter;\n}\n","export class TimeoutError extends Error {\n\tconstructor(message) {\n\t\tsuper(message);\n\t\tthis.name = 'TimeoutError';\n\t}\n}\n\n/**\nAn error to be thrown when the request is aborted by AbortController.\nDOMException is thrown instead of this Error when DOMException is available.\n*/\nexport class AbortError extends Error {\n\tconstructor(message) {\n\t\tsuper();\n\t\tthis.name = 'AbortError';\n\t\tthis.message = message;\n\t}\n}\n\n/**\nTODO: Remove AbortError and just throw DOMException when targeting Node 18.\n*/\nconst getDOMException = errorMessage => globalThis.DOMException === undefined ?\n\tnew AbortError(errorMessage) :\n\tnew DOMException(errorMessage);\n\n/**\nTODO: Remove below function and just 'reject(signal.reason)' when targeting Node 18.\n*/\nconst getAbortedReason = signal => {\n\tconst reason = signal.reason === undefined ?\n\t\tgetDOMException('This operation was aborted.') :\n\t\tsignal.reason;\n\n\treturn reason instanceof Error ? reason : getDOMException(reason);\n};\n\nexport default function pTimeout(promise, milliseconds, fallback, options) {\n\tlet timer;\n\n\tconst cancelablePromise = new Promise((resolve, reject) => {\n\t\tif (typeof milliseconds !== 'number' || Math.sign(milliseconds) !== 1) {\n\t\t\tthrow new TypeError(`Expected \\`milliseconds\\` to be a positive number, got \\`${milliseconds}\\``);\n\t\t}\n\n\t\tif (milliseconds === Number.POSITIVE_INFINITY) {\n\t\t\tresolve(promise);\n\t\t\treturn;\n\t\t}\n\n\t\toptions = {\n\t\t\tcustomTimers: {setTimeout, clearTimeout},\n\t\t\t...options\n\t\t};\n\n\t\tif (options.signal) {\n\t\t\tconst {signal} = options;\n\t\t\tif (signal.aborted) {\n\t\t\t\treject(getAbortedReason(signal));\n\t\t\t}\n\n\t\t\tsignal.addEventListener('abort', () => {\n\t\t\t\treject(getAbortedReason(signal));\n\t\t\t});\n\t\t}\n\n\t\ttimer = options.customTimers.setTimeout.call(undefined, () => {\n\t\t\tif (typeof fallback === 'function') {\n\t\t\t\ttry {\n\t\t\t\t\tresolve(fallback());\n\t\t\t\t} catch (error) {\n\t\t\t\t\treject(error);\n\t\t\t\t}\n\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tconst message = typeof fallback === 'string' ? fallback : `Promise timed out after ${milliseconds} milliseconds`;\n\t\t\tconst timeoutError = fallback instanceof Error ? fallback : new TimeoutError(message);\n\n\t\t\tif (typeof promise.cancel === 'function') {\n\t\t\t\tpromise.cancel();\n\t\t\t}\n\n\t\t\treject(timeoutError);\n\t\t}, milliseconds);\n\n\t\t(async () => {\n\t\t\ttry {\n\t\t\t\tresolve(await promise);\n\t\t\t} catch (error) {\n\t\t\t\treject(error);\n\t\t\t} finally {\n\t\t\t\toptions.customTimers.clearTimeout.call(undefined, timer);\n\t\t\t}\n\t\t})();\n\t});\n\n\tcancelablePromise.clear = () => {\n\t\tclearTimeout(timer);\n\t\ttimer = undefined;\n\t};\n\n\treturn cancelablePromise;\n}\n","var __classPrivateFieldGet = (this && this.__classPrivateFieldGet) || function (receiver, state, kind, f) {\n    if (kind === \"a\" && !f) throw new TypeError(\"Private accessor was defined without a getter\");\n    if (typeof state === \"function\" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError(\"Cannot read private member from an object whose class did not declare it\");\n    return kind === \"m\" ? f : kind === \"a\" ? f.call(receiver) : f ? f.value : state.get(receiver);\n};\nvar _PriorityQueue_queue;\nimport lowerBound from './lower-bound.js';\nclass PriorityQueue {\n    constructor() {\n        _PriorityQueue_queue.set(this, []);\n    }\n    enqueue(run, options) {\n        options = {\n            priority: 0,\n            ...options,\n        };\n        const element = {\n            priority: options.priority,\n            run,\n        };\n        if (this.size && __classPrivateFieldGet(this, _PriorityQueue_queue, \"f\")[this.size - 1].priority >= options.priority) {\n            __classPrivateFieldGet(this, _PriorityQueue_queue, \"f\").push(element);\n            return;\n        }\n        const index = lowerBound(__classPrivateFieldGet(this, _PriorityQueue_queue, \"f\"), element, (a, b) => b.priority - a.priority);\n        __classPrivateFieldGet(this, _PriorityQueue_queue, \"f\").splice(index, 0, element);\n    }\n    dequeue() {\n        const item = __classPrivateFieldGet(this, _PriorityQueue_queue, \"f\").shift();\n        return item === null || item === void 0 ? void 0 : item.run;\n    }\n    filter(options) {\n        return __classPrivateFieldGet(this, _PriorityQueue_queue, \"f\").filter((element) => element.priority === options.priority).map((element) => element.run);\n    }\n    get size() {\n        return __classPrivateFieldGet(this, _PriorityQueue_queue, \"f\").length;\n    }\n}\n_PriorityQueue_queue = new WeakMap();\nexport default PriorityQueue;\n","// Port of lower_bound from https://en.cppreference.com/w/cpp/algorithm/lower_bound\n// Used to compute insertion index to keep queue sorted after insertion\nexport default function lowerBound(array, value, comparator) {\n    let first = 0;\n    let count = array.length;\n    while (count > 0) {\n        const step = Math.trunc(count / 2);\n        let it = first + step;\n        if (comparator(array[it], value) <= 0) {\n            first = ++it;\n            count -= step + 1;\n        }\n        else {\n            count = step;\n        }\n    }\n    return first;\n}\n","var __classPrivateFieldSet = (this && this.__classPrivateFieldSet) || function (receiver, state, value, kind, f) {\n    if (kind === \"m\") throw new TypeError(\"Private method is not writable\");\n    if (kind === \"a\" && !f) throw new TypeError(\"Private accessor was defined without a setter\");\n    if (typeof state === \"function\" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError(\"Cannot write private member to an object whose class did not declare it\");\n    return (kind === \"a\" ? f.call(receiver, value) : f ? f.value = value : state.set(receiver, value)), value;\n};\nvar __classPrivateFieldGet = (this && this.__classPrivateFieldGet) || function (receiver, state, kind, f) {\n    if (kind === \"a\" && !f) throw new TypeError(\"Private accessor was defined without a getter\");\n    if (typeof state === \"function\" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError(\"Cannot read private member from an object whose class did not declare it\");\n    return kind === \"m\" ? f : kind === \"a\" ? f.call(receiver) : f ? f.value : state.get(receiver);\n};\nvar _PQueue_instances, _PQueue_carryoverConcurrencyCount, _PQueue_isIntervalIgnored, _PQueue_intervalCount, _PQueue_intervalCap, _PQueue_interval, _PQueue_intervalEnd, _PQueue_intervalId, _PQueue_timeoutId, _PQueue_queue, _PQueue_queueClass, _PQueue_pending, _PQueue_concurrency, _PQueue_isPaused, _PQueue_throwOnTimeout, _PQueue_doesIntervalAllowAnother_get, _PQueue_doesConcurrentAllowAnother_get, _PQueue_next, _PQueue_onResumeInterval, _PQueue_isIntervalPaused_get, _PQueue_tryToStartAnother, _PQueue_initializeIntervalIfNeeded, _PQueue_onInterval, _PQueue_processQueue, _PQueue_throwOnAbort, _PQueue_onEvent;\nimport { EventEmitter } from 'eventemitter3';\nimport pTimeout, { TimeoutError } from 'p-timeout';\nimport PriorityQueue from './priority-queue.js';\n/**\nThe error thrown by `queue.add()` when a job is aborted before it is run. See `signal`.\n*/\nexport class AbortError extends Error {\n}\n/**\nPromise queue with concurrency control.\n*/\nclass PQueue extends EventEmitter {\n    // TODO: The `throwOnTimeout` option should affect the return types of `add()` and `addAll()`\n    constructor(options) {\n        var _a, _b, _c, _d;\n        super();\n        _PQueue_instances.add(this);\n        _PQueue_carryoverConcurrencyCount.set(this, void 0);\n        _PQueue_isIntervalIgnored.set(this, void 0);\n        _PQueue_intervalCount.set(this, 0);\n        _PQueue_intervalCap.set(this, void 0);\n        _PQueue_interval.set(this, void 0);\n        _PQueue_intervalEnd.set(this, 0);\n        _PQueue_intervalId.set(this, void 0);\n        _PQueue_timeoutId.set(this, void 0);\n        _PQueue_queue.set(this, void 0);\n        _PQueue_queueClass.set(this, void 0);\n        _PQueue_pending.set(this, 0);\n        // The `!` is needed because of https://github.com/microsoft/TypeScript/issues/32194\n        _PQueue_concurrency.set(this, void 0);\n        _PQueue_isPaused.set(this, void 0);\n        _PQueue_throwOnTimeout.set(this, void 0);\n        /**\n        Per-operation timeout in milliseconds. Operations fulfill once `timeout` elapses if they haven't already.\n    \n        Applies to each future operation.\n        */\n        Object.defineProperty(this, \"timeout\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        // eslint-disable-next-line @typescript-eslint/consistent-type-assertions\n        options = {\n            carryoverConcurrencyCount: false,\n            intervalCap: Number.POSITIVE_INFINITY,\n            interval: 0,\n            concurrency: Number.POSITIVE_INFINITY,\n            autoStart: true,\n            queueClass: PriorityQueue,\n            ...options,\n        };\n        if (!(typeof options.intervalCap === 'number' && options.intervalCap >= 1)) {\n            throw new TypeError(`Expected \\`intervalCap\\` to be a number from 1 and up, got \\`${(_b = (_a = options.intervalCap) === null || _a === void 0 ? void 0 : _a.toString()) !== null && _b !== void 0 ? _b : ''}\\` (${typeof options.intervalCap})`);\n        }\n        if (options.interval === undefined || !(Number.isFinite(options.interval) && options.interval >= 0)) {\n            throw new TypeError(`Expected \\`interval\\` to be a finite number >= 0, got \\`${(_d = (_c = options.interval) === null || _c === void 0 ? void 0 : _c.toString()) !== null && _d !== void 0 ? _d : ''}\\` (${typeof options.interval})`);\n        }\n        __classPrivateFieldSet(this, _PQueue_carryoverConcurrencyCount, options.carryoverConcurrencyCount, \"f\");\n        __classPrivateFieldSet(this, _PQueue_isIntervalIgnored, options.intervalCap === Number.POSITIVE_INFINITY || options.interval === 0, \"f\");\n        __classPrivateFieldSet(this, _PQueue_intervalCap, options.intervalCap, \"f\");\n        __classPrivateFieldSet(this, _PQueue_interval, options.interval, \"f\");\n        __classPrivateFieldSet(this, _PQueue_queue, new options.queueClass(), \"f\");\n        __classPrivateFieldSet(this, _PQueue_queueClass, options.queueClass, \"f\");\n        this.concurrency = options.concurrency;\n        this.timeout = options.timeout;\n        __classPrivateFieldSet(this, _PQueue_throwOnTimeout, options.throwOnTimeout === true, \"f\");\n        __classPrivateFieldSet(this, _PQueue_isPaused, options.autoStart === false, \"f\");\n    }\n    get concurrency() {\n        return __classPrivateFieldGet(this, _PQueue_concurrency, \"f\");\n    }\n    set concurrency(newConcurrency) {\n        if (!(typeof newConcurrency === 'number' && newConcurrency >= 1)) {\n            throw new TypeError(`Expected \\`concurrency\\` to be a number from 1 and up, got \\`${newConcurrency}\\` (${typeof newConcurrency})`);\n        }\n        __classPrivateFieldSet(this, _PQueue_concurrency, newConcurrency, \"f\");\n        __classPrivateFieldGet(this, _PQueue_instances, \"m\", _PQueue_processQueue).call(this);\n    }\n    async add(function_, options = {}) {\n        options = {\n            timeout: this.timeout,\n            throwOnTimeout: __classPrivateFieldGet(this, _PQueue_throwOnTimeout, \"f\"),\n            ...options,\n        };\n        return new Promise((resolve, reject) => {\n            __classPrivateFieldGet(this, _PQueue_queue, \"f\").enqueue(async () => {\n                var _a;\n                var _b, _c;\n                __classPrivateFieldSet(this, _PQueue_pending, (_b = __classPrivateFieldGet(this, _PQueue_pending, \"f\"), _b++, _b), \"f\");\n                __classPrivateFieldSet(this, _PQueue_intervalCount, (_c = __classPrivateFieldGet(this, _PQueue_intervalCount, \"f\"), _c++, _c), \"f\");\n                try {\n                    // TODO: Use options.signal?.throwIfAborted() when targeting Node.js 18\n                    if ((_a = options.signal) === null || _a === void 0 ? void 0 : _a.aborted) {\n                        // TODO: Use ABORT_ERR code when targeting Node.js 16 (https://nodejs.org/docs/latest-v16.x/api/errors.html#abort_err)\n                        throw new AbortError('The task was aborted.');\n                    }\n                    let operation = function_({ signal: options.signal });\n                    if (options.timeout) {\n                        operation = pTimeout(Promise.resolve(operation), options.timeout);\n                    }\n                    if (options.signal) {\n                        operation = Promise.race([operation, __classPrivateFieldGet(this, _PQueue_instances, \"m\", _PQueue_throwOnAbort).call(this, options.signal)]);\n                    }\n                    const result = await operation;\n                    resolve(result);\n                    this.emit('completed', result);\n                }\n                catch (error) {\n                    if (error instanceof TimeoutError && !options.throwOnTimeout) {\n                        resolve();\n                        return;\n                    }\n                    reject(error);\n                    this.emit('error', error);\n                }\n                finally {\n                    __classPrivateFieldGet(this, _PQueue_instances, \"m\", _PQueue_next).call(this);\n                }\n            }, options);\n            this.emit('add');\n            __classPrivateFieldGet(this, _PQueue_instances, \"m\", _PQueue_tryToStartAnother).call(this);\n        });\n    }\n    async addAll(functions, options) {\n        return Promise.all(functions.map(async (function_) => this.add(function_, options)));\n    }\n    /**\n    Start (or resume) executing enqueued tasks within concurrency limit. No need to call this if queue is not paused (via `options.autoStart = false` or by `.pause()` method.)\n    */\n    start() {\n        if (!__classPrivateFieldGet(this, _PQueue_isPaused, \"f\")) {\n            return this;\n        }\n        __classPrivateFieldSet(this, _PQueue_isPaused, false, \"f\");\n        __classPrivateFieldGet(this, _PQueue_instances, \"m\", _PQueue_processQueue).call(this);\n        return this;\n    }\n    /**\n    Put queue execution on hold.\n    */\n    pause() {\n        __classPrivateFieldSet(this, _PQueue_isPaused, true, \"f\");\n    }\n    /**\n    Clear the queue.\n    */\n    clear() {\n        __classPrivateFieldSet(this, _PQueue_queue, new (__classPrivateFieldGet(this, _PQueue_queueClass, \"f\"))(), \"f\");\n    }\n    /**\n    Can be called multiple times. Useful if you for example add additional items at a later time.\n\n    @returns A promise that settles when the queue becomes empty.\n    */\n    async onEmpty() {\n        // Instantly resolve if the queue is empty\n        if (__classPrivateFieldGet(this, _PQueue_queue, \"f\").size === 0) {\n            return;\n        }\n        await __classPrivateFieldGet(this, _PQueue_instances, \"m\", _PQueue_onEvent).call(this, 'empty');\n    }\n    /**\n    @returns A promise that settles when the queue size is less than the given limit: `queue.size < limit`.\n\n    If you want to avoid having the queue grow beyond a certain size you can `await queue.onSizeLessThan()` before adding a new item.\n\n    Note that this only limits the number of items waiting to start. There could still be up to `concurrency` jobs already running that this call does not include in its calculation.\n    */\n    async onSizeLessThan(limit) {\n        // Instantly resolve if the queue is empty.\n        if (__classPrivateFieldGet(this, _PQueue_queue, \"f\").size < limit) {\n            return;\n        }\n        await __classPrivateFieldGet(this, _PQueue_instances, \"m\", _PQueue_onEvent).call(this, 'next', () => __classPrivateFieldGet(this, _PQueue_queue, \"f\").size < limit);\n    }\n    /**\n    The difference with `.onEmpty` is that `.onIdle` guarantees that all work from the queue has finished. `.onEmpty` merely signals that the queue is empty, but it could mean that some promises haven't completed yet.\n\n    @returns A promise that settles when the queue becomes empty, and all promises have completed; `queue.size === 0 && queue.pending === 0`.\n    */\n    async onIdle() {\n        // Instantly resolve if none pending and if nothing else is queued\n        if (__classPrivateFieldGet(this, _PQueue_pending, \"f\") === 0 && __classPrivateFieldGet(this, _PQueue_queue, \"f\").size === 0) {\n            return;\n        }\n        await __classPrivateFieldGet(this, _PQueue_instances, \"m\", _PQueue_onEvent).call(this, 'idle');\n    }\n    /**\n    Size of the queue, the number of queued items waiting to run.\n    */\n    get size() {\n        return __classPrivateFieldGet(this, _PQueue_queue, \"f\").size;\n    }\n    /**\n    Size of the queue, filtered by the given options.\n\n    For example, this can be used to find the number of items remaining in the queue with a specific priority level.\n    */\n    sizeBy(options) {\n        // eslint-disable-next-line unicorn/no-array-callback-reference\n        return __classPrivateFieldGet(this, _PQueue_queue, \"f\").filter(options).length;\n    }\n    /**\n    Number of running items (no longer in the queue).\n    */\n    get pending() {\n        return __classPrivateFieldGet(this, _PQueue_pending, \"f\");\n    }\n    /**\n    Whether the queue is currently paused.\n    */\n    get isPaused() {\n        return __classPrivateFieldGet(this, _PQueue_isPaused, \"f\");\n    }\n}\n_PQueue_carryoverConcurrencyCount = new WeakMap(), _PQueue_isIntervalIgnored = new WeakMap(), _PQueue_intervalCount = new WeakMap(), _PQueue_intervalCap = new WeakMap(), _PQueue_interval = new WeakMap(), _PQueue_intervalEnd = new WeakMap(), _PQueue_intervalId = new WeakMap(), _PQueue_timeoutId = new WeakMap(), _PQueue_queue = new WeakMap(), _PQueue_queueClass = new WeakMap(), _PQueue_pending = new WeakMap(), _PQueue_concurrency = new WeakMap(), _PQueue_isPaused = new WeakMap(), _PQueue_throwOnTimeout = new WeakMap(), _PQueue_instances = new WeakSet(), _PQueue_doesIntervalAllowAnother_get = function _PQueue_doesIntervalAllowAnother_get() {\n    return __classPrivateFieldGet(this, _PQueue_isIntervalIgnored, \"f\") || __classPrivateFieldGet(this, _PQueue_intervalCount, \"f\") < __classPrivateFieldGet(this, _PQueue_intervalCap, \"f\");\n}, _PQueue_doesConcurrentAllowAnother_get = function _PQueue_doesConcurrentAllowAnother_get() {\n    return __classPrivateFieldGet(this, _PQueue_pending, \"f\") < __classPrivateFieldGet(this, _PQueue_concurrency, \"f\");\n}, _PQueue_next = function _PQueue_next() {\n    var _a;\n    __classPrivateFieldSet(this, _PQueue_pending, (_a = __classPrivateFieldGet(this, _PQueue_pending, \"f\"), _a--, _a), \"f\");\n    __classPrivateFieldGet(this, _PQueue_instances, \"m\", _PQueue_tryToStartAnother).call(this);\n    this.emit('next');\n}, _PQueue_onResumeInterval = function _PQueue_onResumeInterval() {\n    __classPrivateFieldGet(this, _PQueue_instances, \"m\", _PQueue_onInterval).call(this);\n    __classPrivateFieldGet(this, _PQueue_instances, \"m\", _PQueue_initializeIntervalIfNeeded).call(this);\n    __classPrivateFieldSet(this, _PQueue_timeoutId, undefined, \"f\");\n}, _PQueue_isIntervalPaused_get = function _PQueue_isIntervalPaused_get() {\n    const now = Date.now();\n    if (__classPrivateFieldGet(this, _PQueue_intervalId, \"f\") === undefined) {\n        const delay = __classPrivateFieldGet(this, _PQueue_intervalEnd, \"f\") - now;\n        if (delay < 0) {\n            // Act as the interval was done\n            // We don't need to resume it here because it will be resumed on line 160\n            __classPrivateFieldSet(this, _PQueue_intervalCount, (__classPrivateFieldGet(this, _PQueue_carryoverConcurrencyCount, \"f\")) ? __classPrivateFieldGet(this, _PQueue_pending, \"f\") : 0, \"f\");\n        }\n        else {\n            // Act as the interval is pending\n            if (__classPrivateFieldGet(this, _PQueue_timeoutId, \"f\") === undefined) {\n                __classPrivateFieldSet(this, _PQueue_timeoutId, setTimeout(() => {\n                    __classPrivateFieldGet(this, _PQueue_instances, \"m\", _PQueue_onResumeInterval).call(this);\n                }, delay), \"f\");\n            }\n            return true;\n        }\n    }\n    return false;\n}, _PQueue_tryToStartAnother = function _PQueue_tryToStartAnother() {\n    if (__classPrivateFieldGet(this, _PQueue_queue, \"f\").size === 0) {\n        // We can clear the interval (\"pause\")\n        // Because we can redo it later (\"resume\")\n        if (__classPrivateFieldGet(this, _PQueue_intervalId, \"f\")) {\n            clearInterval(__classPrivateFieldGet(this, _PQueue_intervalId, \"f\"));\n        }\n        __classPrivateFieldSet(this, _PQueue_intervalId, undefined, \"f\");\n        this.emit('empty');\n        if (__classPrivateFieldGet(this, _PQueue_pending, \"f\") === 0) {\n            this.emit('idle');\n        }\n        return false;\n    }\n    if (!__classPrivateFieldGet(this, _PQueue_isPaused, \"f\")) {\n        const canInitializeInterval = !__classPrivateFieldGet(this, _PQueue_instances, \"a\", _PQueue_isIntervalPaused_get);\n        if (__classPrivateFieldGet(this, _PQueue_instances, \"a\", _PQueue_doesIntervalAllowAnother_get) && __classPrivateFieldGet(this, _PQueue_instances, \"a\", _PQueue_doesConcurrentAllowAnother_get)) {\n            const job = __classPrivateFieldGet(this, _PQueue_queue, \"f\").dequeue();\n            if (!job) {\n                return false;\n            }\n            this.emit('active');\n            job();\n            if (canInitializeInterval) {\n                __classPrivateFieldGet(this, _PQueue_instances, \"m\", _PQueue_initializeIntervalIfNeeded).call(this);\n            }\n            return true;\n        }\n    }\n    return false;\n}, _PQueue_initializeIntervalIfNeeded = function _PQueue_initializeIntervalIfNeeded() {\n    if (__classPrivateFieldGet(this, _PQueue_isIntervalIgnored, \"f\") || __classPrivateFieldGet(this, _PQueue_intervalId, \"f\") !== undefined) {\n        return;\n    }\n    __classPrivateFieldSet(this, _PQueue_intervalId, setInterval(() => {\n        __classPrivateFieldGet(this, _PQueue_instances, \"m\", _PQueue_onInterval).call(this);\n    }, __classPrivateFieldGet(this, _PQueue_interval, \"f\")), \"f\");\n    __classPrivateFieldSet(this, _PQueue_intervalEnd, Date.now() + __classPrivateFieldGet(this, _PQueue_interval, \"f\"), \"f\");\n}, _PQueue_onInterval = function _PQueue_onInterval() {\n    if (__classPrivateFieldGet(this, _PQueue_intervalCount, \"f\") === 0 && __classPrivateFieldGet(this, _PQueue_pending, \"f\") === 0 && __classPrivateFieldGet(this, _PQueue_intervalId, \"f\")) {\n        clearInterval(__classPrivateFieldGet(this, _PQueue_intervalId, \"f\"));\n        __classPrivateFieldSet(this, _PQueue_intervalId, undefined, \"f\");\n    }\n    __classPrivateFieldSet(this, _PQueue_intervalCount, __classPrivateFieldGet(this, _PQueue_carryoverConcurrencyCount, \"f\") ? __classPrivateFieldGet(this, _PQueue_pending, \"f\") : 0, \"f\");\n    __classPrivateFieldGet(this, _PQueue_instances, \"m\", _PQueue_processQueue).call(this);\n}, _PQueue_processQueue = function _PQueue_processQueue() {\n    // eslint-disable-next-line no-empty\n    while (__classPrivateFieldGet(this, _PQueue_instances, \"m\", _PQueue_tryToStartAnother).call(this)) { }\n}, _PQueue_throwOnAbort = async function _PQueue_throwOnAbort(signal) {\n    return new Promise((_resolve, reject) => {\n        signal.addEventListener('abort', () => {\n            // TODO: Reject with signal.throwIfAborted() when targeting Node.js 18\n            // TODO: Use ABORT_ERR code when targeting Node.js 16 (https://nodejs.org/docs/latest-v16.x/api/errors.html#abort_err)\n            reject(new AbortError('The task was aborted.'));\n        }, { once: true });\n    });\n}, _PQueue_onEvent = async function _PQueue_onEvent(event, filter) {\n    return new Promise(resolve => {\n        const listener = () => {\n            if (filter && !filter()) {\n                return;\n            }\n            this.off(event, listener);\n            resolve();\n        };\n        this.on(event, listener);\n    });\n};\nexport default PQueue;\n","import { ValidStoreType, AsyncStore } from './types';\nimport { IS_NODE, resolveUrl } from '../util';\nimport { KeyError, HTTPError } from '../errors';\n\nenum HTTPMethod {\n  HEAD = 'HEAD',\n  GET = 'GET',\n  PUT = 'PUT',\n}\n\nconst DEFAULT_METHODS = [HTTPMethod.HEAD, HTTPMethod.GET, HTTPMethod.PUT];\n\ninterface HTTPStoreOptions {\n    fetchOptions?: RequestInit;\n    supportedMethods?: HTTPMethod[];\n}\n\nexport class HTTPStore<UrlRoot extends string | URL=string> implements AsyncStore<ArrayBuffer, RequestInit> {\n    listDir?: undefined;\n    rmDir?: undefined;\n    getSize?: undefined;\n    rename?: undefined;\n\n    public url: UrlRoot;\n    public fetchOptions: RequestInit;\n    private supportedMethods: Set<HTTPMethod>;\n\n    constructor(url: UrlRoot, options: HTTPStoreOptions = {}) {\n        this.url = url;\n        const { fetchOptions = {}, supportedMethods = DEFAULT_METHODS } = options;\n        this.fetchOptions = fetchOptions;\n        this.supportedMethods = new Set(supportedMethods);\n    }\n\n    keys(): Promise<string[]> {\n        throw new Error('Method not implemented.');\n    }\n\n    async getItem(item: string, opts?: RequestInit) {\n        const url = resolveUrl(this.url, item);\n        const value = await fetch(url, { ...this.fetchOptions, ...opts });\n\n        if (value.status === 404) {\n            // Item is not found\n            throw new KeyError(item);\n        } else if (value.status !== 200) {\n            throw new HTTPError(String(value.status));\n        }\n\n        // only decode if 200\n        if (IS_NODE) {\n            return Buffer.from(await value.arrayBuffer());\n        } else {\n            return value.arrayBuffer(); // Browser\n        }\n    }\n\n    async setItem(item: string, value: ValidStoreType): Promise<boolean> {\n        if (!this.supportedMethods.has(HTTPMethod.PUT)) {\n          throw new Error('HTTP PUT no a supported method for store.');\n        }\n        const url = resolveUrl(this.url, item);\n        if (typeof value === 'string') {\n            value = new TextEncoder().encode(value).buffer;\n        }\n        const set = await fetch(url, { ...this.fetchOptions, method: HTTPMethod.PUT, body: value });\n        return set.status.toString()[0] === '2';\n    }\n\n    deleteItem(_item: string): Promise<boolean> {\n        throw new Error('Method not implemented.');\n    }\n\n    async containsItem(item: string): Promise<boolean> {\n        const url = resolveUrl(this.url, item);\n        // Just check headers if HEAD method supported\n        const method = this.supportedMethods.has(HTTPMethod.HEAD) ? HTTPMethod.HEAD : HTTPMethod.GET;\n        const value = await fetch(url, { ...this.fetchOptions, method });\n        return value.status === 200;\n    }\n}\n","import { Store, ValidStoreType } from \"../storage/types\";\n\nimport { containsGroup, pathToPrefix } from '../storage/index';\nimport { normalizeStoragePath, isTotalSlice, arrayEquals1D, byteSwap, byteSwapInplace, convertColMajorToRowMajor } from '../util';\nimport { ZarrArrayMetadata, UserAttributes, FillType } from '../types';\nimport { ARRAY_META_KEY, ATTRS_META_KEY } from '../names';\nimport { Attributes } from \"../attributes\";\nimport { parseMetadata } from \"../metadata\";\nimport { ArraySelection, DimensionSelection, Indexer, Slice, ChunkProjection } from \"./types\";\nimport { BasicIndexer, isContiguousSelection, normalizeIntegerSelection } from './indexing';\nimport { NestedArray } from \"../nestedArray\";\nimport { RawArray } from \"../rawArray\";\nimport { TypedArray, getTypedArrayCtr } from '../nestedArray/types';\nimport { ValueError, PermissionError, BoundsCheckError, ContainsGroupError, isKeyError } from '../errors';\nimport { getCodec } from \"../compression/registry\";\n\n\nimport type { Codec } from 'numcodecs';\nimport PQueue from 'p-queue';\n\nexport interface GetOptions<StoreGetOptions> {\n  concurrencyLimit?: number;\n  progressCallback?: (progressUpdate: {\n    progress: number;\n    queueSize: number;\n  }) => void;\n  storeOptions?: StoreGetOptions;\n}\n\nexport interface SetOptions {\n  concurrencyLimit?: number;\n  progressCallback?: (progressUpdate: {\n    progress: number;\n    queueSize: number;\n  }) => void;\n}\n\nexport interface GetRawChunkOptions<StoreGetOptions> {\n  storeOptions: StoreGetOptions;\n}\n\nexport class ZarrArray<StoreGetOptions = any> {\n\n  public store: Store<StoreGetOptions>;\n  private compressor: Promise<Codec> | null;\n\n  private _chunkStore: Store<StoreGetOptions> | null;\n  /**\n   * A `Store` providing the underlying storage for array chunks.\n   */\n  public get chunkStore(): Store<StoreGetOptions> {\n    if (this._chunkStore) {\n      return this._chunkStore;\n    }\n    return this.store;\n  }\n  public path: string;\n  public keyPrefix: string;\n  public readOnly: boolean;\n  public cacheMetadata: boolean;\n  public cacheAttrs: boolean;\n  public meta: ZarrArrayMetadata;\n  public attrs: Attributes<UserAttributes>;\n\n  /**\n   * Array name following h5py convention.\n   */\n  public get name(): string | null {\n    if (this.path.length > 0) {\n      if (this.path[0] !== \"/\") {\n        return \"/\" + this.path;\n      }\n      return this.path;\n    }\n    return null;\n  }\n\n  /**\n   * Final component of name.\n   */\n  public get basename(): string | null {\n    const name = this.name;\n    if (name === null) {\n      return null;\n    }\n    const parts = name.split(\"/\");\n    return parts[parts.length - 1];\n  }\n\n  /**\n   * \"A list of integers describing the length of each dimension of the array.\n   */\n  public get shape(): number[] {\n    // this.refreshMetadata();\n    return this.meta.shape;\n  }\n\n  /**\n   * A list of integers describing the length of each dimension of a chunk of the array.\n   */\n  public get chunks(): number[] {\n    return this.meta.chunks;\n  }\n\n  /**\n   * Integer describing how many element a chunk contains\n   */\n  private get chunkSize(): number {\n    return this.chunks.reduce((x, y) => x * y, 1);\n  }\n\n  /**\n   *  The NumPy data type.\n   */\n  public get dtype() {\n    return this.meta.dtype;\n  }\n\n  /**\n   *  A value used for uninitialized portions of the array.\n   */\n  public get fillValue(): FillType {\n\n    const fillTypeValue = this.meta.fill_value;\n\n    // TODO extract into function\n    if (fillTypeValue === \"NaN\") {\n      return NaN;\n    } else if (fillTypeValue === \"Infinity\") {\n      return Infinity;\n    } else if (fillTypeValue === \"-Infinity\") {\n      return -Infinity;\n    }\n\n    return this.meta.fill_value as FillType;\n  }\n\n  /**\n   *  Number of dimensions.\n   */\n  public get nDims() {\n    return this.meta.shape.length;\n  }\n\n  /**\n   *  The total number of elements in the array.\n   */\n  public get size() {\n    // this.refreshMetadata()\n    return this.meta.shape.reduce((x, y) => x * y, 1);\n  }\n\n  public get length() {\n    return this.shape[0];\n  }\n\n\n  private get _chunkDataShape() {\n    if (this.shape.length === 0) {\n      return [1];\n    } else {\n      const s = [];\n      for (let i = 0; i < this.shape.length; i++) {\n        s[i] = Math.ceil(this.shape[i] / this.chunks[i]);\n      }\n      return s;\n    }\n  }\n  /**\n   * A tuple of integers describing the number of chunks along each\n   * dimension of the array.\n   */\n  public get chunkDataShape() {\n    // this.refreshMetadata();\n    return this._chunkDataShape;\n  }\n\n  /**\n   * Total number of chunks.\n   */\n  public get numChunks() {\n    // this.refreshMetadata();\n    return this.chunkDataShape.reduce((x, y) => x * y, 1);\n  }\n\n  /**\n   * Instantiate an array from an initialized store.\n   * @param store Array store, already initialized.\n   * @param path Storage path.\n   * @param readOnly True if array should be protected against modification.\n   * @param chunkStore Separate storage for chunks. If not provided, `store` will be used for storage of both chunks and metadata.\n   * @param cacheMetadata If true (default), array configuration metadata will be cached for the lifetime of the object.\n   * If false, array metadata will be reloaded prior to all data access and modification operations (may incur overhead depending on storage and data access pattern).\n   * @param cacheAttrs If true (default), user attributes will be cached for attribute read operations.\n   * If false, user attributes are reloaded from the store prior to all attribute read operations.\n   */\n  public static async create<StoreGetOptions>(store: Store<StoreGetOptions>, path: null | string = null, readOnly = false, chunkStore: Store<StoreGetOptions> | null = null, cacheMetadata = true, cacheAttrs = true) {\n    const metadata = await this.loadMetadataForConstructor(store, path);\n    return new ZarrArray(store, path, metadata as ZarrArrayMetadata, readOnly, chunkStore, cacheMetadata, cacheAttrs);\n  }\n\n  private static async loadMetadataForConstructor(store: Store, path: null | string) {\n    try {\n      path = normalizeStoragePath(path);\n      const keyPrefix = pathToPrefix(path);\n      const metaStoreValue = await store.getItem(keyPrefix + ARRAY_META_KEY);\n      return parseMetadata(metaStoreValue);\n    } catch (error) {\n      if (await containsGroup(store, path)) {\n        throw new ContainsGroupError(path ?? '');\n      }\n      throw new Error(\"Failed to load metadata for ZarrArray:\" + (error as any).toString());\n    }\n  }\n\n  /**\n   * Instantiate an array from an initialized store.\n   * @param store Array store, already initialized.\n   * @param path Storage path.\n   * @param metadata The initial value for the metadata\n   * @param readOnly True if array should be protected against modification.\n   * @param chunkStore Separate storage for chunks. If not provided, `store` will be used for storage of both chunks and metadata.\n   * @param cacheMetadata If true (default), array configuration metadata will be cached for the lifetime of the object.\n   * If false, array metadata will be reloaded prior to all data access and modification operations (may incur overhead depending on storage and data access pattern).\n   * @param cacheAttrs If true (default), user attributes will be cached for attribute read operations.\n   * If false, user attributes are reloaded from the store prior to all attribute read operations.\n   */\n  private constructor(store: Store<StoreGetOptions>, path: null | string = null, metadata: ZarrArrayMetadata, readOnly = false, chunkStore: Store<StoreGetOptions> | null = null, cacheMetadata = true, cacheAttrs = true) {\n    // N.B., expect at this point store is fully initialized with all\n    // configuration metadata fully specified and normalized\n\n    this.store = store;\n    this._chunkStore = chunkStore;\n    this.path = normalizeStoragePath(path);\n    this.keyPrefix = pathToPrefix(this.path);\n    this.readOnly = readOnly;\n    this.cacheMetadata = cacheMetadata;\n    this.cacheAttrs = cacheAttrs;\n    this.meta = metadata;\n    if (this.meta.compressor !== null) {\n      this.compressor = getCodec(this.meta.compressor);\n    } else {\n      this.compressor = null;\n    }\n\n\n    const attrKey = this.keyPrefix + ATTRS_META_KEY;\n    this.attrs = new Attributes<UserAttributes>(this.store, attrKey, this.readOnly, cacheAttrs);\n  }\n\n  /**\n   * (Re)load metadata from store\n   */\n  public async reloadMetadata() {\n    const metaKey = this.keyPrefix + ARRAY_META_KEY;\n    const metaStoreValue = this.store.getItem(metaKey);\n    this.meta = parseMetadata(await metaStoreValue) as ZarrArrayMetadata;\n    return this.meta;\n  }\n\n  private async refreshMetadata() {\n    if (!this.cacheMetadata) {\n      await this.reloadMetadata();\n    }\n  }\n\n  public get(selection?: undefined | Slice | \":\" | \"...\" | null | (Slice | null | \":\" | \"...\")[], opts?: GetOptions<StoreGetOptions>): Promise<NestedArray<TypedArray> | number>;\n  public get(selection?: ArraySelection, opts?: GetOptions<StoreGetOptions>): Promise<NestedArray<TypedArray> | number>;\n  public get(selection: ArraySelection = null, opts: GetOptions<StoreGetOptions> = {}): Promise<NestedArray<TypedArray> | number> {\n    return this.getBasicSelection(selection, false, opts);\n  }\n\n  public getRaw(selection?: undefined | Slice | \":\" | \"...\" | null | (Slice | null | \":\" | \"...\")[], opts?: GetOptions<StoreGetOptions>): Promise<RawArray | number>;\n  public getRaw(selection?: ArraySelection, opts?: GetOptions<StoreGetOptions>): Promise<RawArray | number>;\n  public getRaw(selection: ArraySelection = null, opts: GetOptions<StoreGetOptions> = {}): Promise<RawArray | number> {\n    return this.getBasicSelection(selection, true, opts);\n  }\n\n  // asRaw = false\n  public async getBasicSelection(selection: Slice | \":\" | \"...\" | null | (Slice | null | \":\" | \"...\")[], asRaw?: false, opts?: GetOptions<StoreGetOptions>): Promise<NestedArray<TypedArray> | number>;\n  public async getBasicSelection(selection: ArraySelection, asRaw?: false, opts?: GetOptions<StoreGetOptions>): Promise<NestedArray<TypedArray> | number>;\n  // asRaw = true\n  public async getBasicSelection(selection: Slice | \":\" | \"...\" | null | (Slice | null | \":\" | \"...\")[], asRaw?: true, opts?: GetOptions<StoreGetOptions>): Promise<RawArray | number>;\n  public async getBasicSelection(selection: ArraySelection, asRaw?: true, opts?: GetOptions<StoreGetOptions>): Promise<RawArray | number>;\n\n  public async getBasicSelection(selection: ArraySelection, asRaw = false, { concurrencyLimit = 10, progressCallback, storeOptions }: GetOptions<StoreGetOptions> = {}): Promise<NestedArray<TypedArray> | RawArray | number> {\n    // Refresh metadata\n    if (!this.cacheMetadata) {\n      await this.reloadMetadata();\n    }\n\n    // Check fields (TODO?)\n    if (this.shape.length === 0) {\n      throw new Error(\"Shape [] indexing is not supported yet\");\n    } else {\n      return this.getBasicSelectionND(selection, asRaw, concurrencyLimit, progressCallback, storeOptions);\n    }\n  }\n\n  private getBasicSelectionND(selection: ArraySelection, asRaw: boolean, concurrencyLimit: number, progressCallback?: (progressUpdate: { progress: number; queueSize: number }) => void, storeOptions?: StoreGetOptions): Promise<number | NestedArray<TypedArray> | RawArray> {\n    const indexer = new BasicIndexer(selection, this);\n    return this.getSelection(indexer, asRaw, concurrencyLimit, progressCallback, storeOptions);\n  }\n\n  private async getSelection(indexer: BasicIndexer, asRaw: boolean, concurrencyLimit: number, progressCallback?: (progressUpdate: { progress: number; queueSize: number }) => void, storeOptions?: StoreGetOptions): Promise<number | NestedArray<TypedArray> | RawArray> {\n    // We iterate over all chunks which overlap the selection and thus contain data\n    // that needs to be extracted. Each chunk is processed in turn, extracting the\n    // necessary data and storing into the correct location in the output array.\n\n    // N.B., it is an important optimisation that we only visit chunks which overlap\n    // the selection. This minimises the number of iterations in the main for loop.\n\n    // check fields are sensible (TODO?)\n\n    const outDtype = this.dtype;\n    const outShape = indexer.shape;\n    const outSize = indexer.shape.reduce((x, y) => x * y, 1);\n\n    if (asRaw && (outSize === this.chunkSize)) {\n      // Optimization: if output strided array _is_ chunk exactly,\n      // decode directly as new TypedArray and return\n      const itr = indexer.iter();\n      const proj = itr.next(); // ensure there is only one projection\n      if (proj.done === false && itr.next().done === true) {\n        const chunkProjection = proj.value as ChunkProjection;\n        const out = await this.decodeDirectToRawArray(chunkProjection, outShape, outSize);\n        return out;\n      }\n    }\n\n    const out = asRaw\n      ? new RawArray(null, outShape, outDtype)\n      : new NestedArray(null, outShape, outDtype);\n\n    if (outSize === 0) {\n      return out;\n    }\n\n    // create promise queue with concurrency control\n    const queue = new PQueue({ concurrency: concurrencyLimit });\n\n    const allTasks = [];\n\n    if (progressCallback) {\n\n      let progress = 0;\n      let queueSize = 0;\n      for (const _ of indexer.iter()) queueSize += 1;\n      progressCallback({ progress: 0, queueSize: queueSize });\n      for (const proj of indexer.iter()) {\n        allTasks.push(queue.add(async () => {\n          await this.chunkGetItem(proj.chunkCoords, proj.chunkSelection, out, proj.outSelection, indexer.dropAxes, storeOptions);\n          progress += 1;\n          progressCallback({ progress: progress, queueSize: queueSize });\n        }));\n      }\n\n    } else {\n      for (const proj of indexer.iter()) {\n        allTasks.push(queue.add(() => this.chunkGetItem(proj.chunkCoords, proj.chunkSelection, out, proj.outSelection, indexer.dropAxes, storeOptions)));\n      }\n    }\n\n    // guarantees that all work on queue has finished and throws if any of the tasks errored.\n    await Promise.all(allTasks);\n\n    // Return scalar instead of zero-dimensional array.\n    if (out.shape.length === 0) {\n      return out.data[0] as number;\n    }\n\n    return out;\n  }\n\n  /**\n   * Obtain part or whole of a chunk.\n   * @param chunkCoords Indices of the chunk.\n   * @param chunkSelection Location of region within the chunk to extract.\n   * @param out Array to store result in.\n   * @param outSelection Location of region within output array to store results in.\n   * @param dropAxes Axes to squeeze out of the chunk.\n   */\n  private async chunkGetItem<T extends TypedArray>(chunkCoords: number[], chunkSelection: DimensionSelection[], out: NestedArray<T> | RawArray, outSelection: DimensionSelection[], dropAxes: null | number[], storeOptions?: StoreGetOptions) {\n    if (chunkCoords.length !== this._chunkDataShape.length) {\n      throw new ValueError(`Inconsistent shapes: chunkCoordsLength: ${chunkCoords.length}, cDataShapeLength: ${this.chunkDataShape.length}`);\n    }\n\n    const cKey = this.chunkKey(chunkCoords);\n    try {\n      const cdata = await this.chunkStore.getItem(cKey, storeOptions);\n      const decodedChunk = await this.decodeChunk(cdata);\n\n      if (out instanceof NestedArray) {\n\n        if (isContiguousSelection(outSelection) && isTotalSlice(chunkSelection, this.chunks) && !this.meta.filters) {\n          // Optimization: we want the whole chunk, and the destination is\n          // contiguous, so we can decompress directly from the chunk\n          // into the destination array\n\n          // TODO check order\n          // TODO filters..\n          out.set(outSelection, this.toNestedArray<T>(decodedChunk));\n          return;\n        }\n\n        // Decode chunk\n        const chunk = this.toNestedArray(decodedChunk);\n        const tmp = chunk.get(chunkSelection);\n\n        if (dropAxes !== null) {\n          throw new Error(\"Drop axes is not supported yet\");\n        }\n\n        out.set(outSelection, tmp as NestedArray<T>);\n\n      } else {\n        /* RawArray\n        Copies chunk by index directly into output. Doesn't matter if selection is contiguous\n        since store/output are different shapes/strides.\n        */\n        out.set(outSelection, this.chunkBufferToRawArray(decodedChunk), chunkSelection);\n      }\n\n    } catch (error) {\n      if (isKeyError(error)) {\n        // fill with scalar if cKey doesn't exist in store\n        if (this.fillValue !== null) {\n          out.set(outSelection, this.fillValue);\n        }\n      } else {\n        // Different type of error - rethrow\n        throw error;\n      }\n    }\n  }\n\n  public async getRawChunk(chunkCoords: number[], opts?: GetRawChunkOptions<StoreGetOptions>): Promise<RawArray> {\n    if (chunkCoords.length !== this.shape.length) {\n      throw new Error(`Chunk coordinates ${chunkCoords.join(\".\")} do not correspond to shape ${this.shape}.`);\n    }\n    try {\n      for (let i = 0; i < chunkCoords.length; i++) {\n        const dimLength = Math.ceil(this.shape[i] / this.chunks[i]);\n        chunkCoords[i] = normalizeIntegerSelection(chunkCoords[i], dimLength);\n      }\n    } catch (error) {\n      if (error instanceof BoundsCheckError) {\n        throw new BoundsCheckError(`index ${chunkCoords.join(\".\")} is out of bounds for shape: ${this.shape} and chunks ${this.chunks}`);\n      } else {\n        throw error;\n      }\n    }\n    const cKey = this.chunkKey(chunkCoords);\n    const cdata = this.chunkStore.getItem(cKey, opts?.storeOptions);\n    const buffer = await this.decodeChunk(await cdata);\n    const outShape = this.chunks.filter(d => d !== 1); // squeeze chunk dim if 1\n    return new RawArray(buffer, outShape, this.dtype);\n  }\n\n  private chunkKey(chunkCoords: number[]) {\n    const sep = this.meta.dimension_separator ?? \".\";\n    return this.keyPrefix + chunkCoords.join(sep);\n  }\n\n  private ensureByteArray(chunkData: ValidStoreType): Uint8Array {\n    if (typeof chunkData === \"string\") {\n      return new Uint8Array(Buffer.from(chunkData).buffer);\n    }\n    return new Uint8Array(chunkData);\n  }\n\n  private toTypedArray(buffer: Buffer | ArrayBuffer) {\n    return new (getTypedArrayCtr(this.dtype))(buffer);\n  }\n\n  private toNestedArray<T extends TypedArray>(data: ValidStoreType) {\n    const buffer = this.ensureByteArray(data).buffer;\n\n    return new NestedArray<T>(buffer, this.chunks, this.dtype);\n  }\n\n  private async decodeChunk(chunkData: ValidStoreType) {\n    let bytes = this.ensureByteArray(chunkData);\n\n    if (this.compressor !== null) {\n      bytes = await (await this.compressor).decode(bytes);\n    }\n\n    if (this.dtype.includes('>')) {\n      // Need to flip bytes for Javascript TypedArrays\n      // We flip bytes in-place to avoid creating an extra copy of the decoded buffer.\n      byteSwapInplace(this.toTypedArray(bytes.buffer));\n    }\n\n    if (this.meta.order === \"F\" && this.nDims > 1) {\n      // We need to transpose the array, because this library only support C-order.\n      const src = this.toTypedArray(bytes.buffer);\n      const out = new (getTypedArrayCtr(this.dtype))(src.length);\n      convertColMajorToRowMajor(src, out, this.chunks);\n      return out.buffer;\n    }\n\n    // TODO filtering etc\n    return bytes.buffer;\n  }\n\n  private chunkBufferToRawArray(buffer: Buffer | ArrayBuffer) {\n    return new RawArray(buffer, this.chunks, this.dtype);\n  }\n\n  private async decodeDirectToRawArray({ chunkCoords }: ChunkProjection, outShape: number[], outSize: number): Promise<RawArray> {\n    const cKey = this.chunkKey(chunkCoords);\n    try {\n      const cdata = await this.chunkStore.getItem(cKey);\n      return new RawArray(await this.decodeChunk(cdata), outShape, this.dtype);\n    } catch (error) {\n      if (isKeyError(error)) {\n        // fill with scalar if item doesn't exist\n        const data = new (getTypedArrayCtr(this.dtype))(outSize);\n        return new RawArray(data.fill(this.fillValue as number), outShape);\n      } else {\n        // Different type of error - rethrow\n        throw error;\n      }\n    }\n  }\n\n  public async set(selection: ArraySelection = null, value: any, opts: SetOptions = {}) {\n    await this.setBasicSelection(selection, value, opts);\n  }\n\n  public async setBasicSelection(selection: ArraySelection, value: any, { concurrencyLimit = 10, progressCallback }: SetOptions = {}) {\n    if (this.readOnly) {\n      throw new PermissionError(\"Object is read only\");\n    }\n\n    if (!this.cacheMetadata) {\n      await this.reloadMetadata();\n    }\n\n    if (this.shape.length === 0) {\n      throw new Error(\"Shape [] indexing is not supported yet\");\n    } else {\n      await this.setBasicSelectionND(selection, value, concurrencyLimit, progressCallback);\n    }\n  }\n\n  private async setBasicSelectionND(selection: ArraySelection, value: any, concurrencyLimit: number, progressCallback?: (progressUpdate: { progress: number; queueSize: number }) => void) {\n    const indexer = new BasicIndexer(selection, this);\n    await this.setSelection(indexer, value, concurrencyLimit, progressCallback);\n  }\n\n  private getChunkValue(proj: ChunkProjection, indexer: Indexer, value: number | NestedArray<TypedArray>, selectionShape: number[]): number | NestedArray<TypedArray> {\n    let chunkValue: number | NestedArray<TypedArray>;\n    if (selectionShape.length === 0) {\n      chunkValue = value;\n    } else if (typeof value === \"number\") {\n      chunkValue = value;\n    } else {\n      chunkValue = value.get(proj.outSelection);\n      // tslint:disable-next-line: strict-type-predicates\n      if (indexer.dropAxes !== null) {\n        throw new Error(\"Handling drop axes not supported yet\");\n      }\n    }\n    return chunkValue;\n  }\n\n  private async setSelection(indexer: Indexer, value: number | NestedArray<TypedArray>, concurrencyLimit: number, progressCallback?: (progressUpdate: { progress: number; queueSize: number }) => void) {\n    // We iterate over all chunks which overlap the selection and thus contain data\n    // that needs to be replaced. Each chunk is processed in turn, extracting the\n    // necessary data from the value array and storing into the chunk array.\n\n    // N.B., it is an important optimisation that we only visit chunks which overlap\n    // the selection. This minimises the number of iterations in the main for loop.\n\n    // TODO? check fields are sensible\n\n    // Determine indices of chunks overlapping the selection\n    const selectionShape = indexer.shape;\n\n    // Check value shape\n    if (selectionShape.length === 0) {\n      // Setting a single value\n    } else if (typeof value === \"number\") {\n      // Setting a scalar value\n    } else if (value instanceof NestedArray) {\n      // TODO: non stringify equality check\n      if (!arrayEquals1D(value.shape, selectionShape)) {\n        throw new ValueError(`Shape mismatch in source NestedArray and set selection: ${value.shape} and ${selectionShape}`);\n      }\n    } else {\n      // TODO support TypedArrays, buffers, etc\n      throw new Error(\"Unknown data type for setting :(\");\n    }\n\n    const queue = new PQueue({ concurrency: concurrencyLimit });\n\n    const allTasks = [];\n\n    if (progressCallback) {\n\n      let queueSize = 0;\n      for (const _ of indexer.iter()) queueSize += 1;\n\n      let progress = 0;\n      progressCallback({ progress: 0, queueSize: queueSize });\n      for (const proj of indexer.iter()) {\n        const chunkValue = this.getChunkValue(proj, indexer, value, selectionShape);\n        allTasks.push(queue.add(async () => {\n          await this.chunkSetItem(proj.chunkCoords, proj.chunkSelection, chunkValue);\n          progress += 1;\n          progressCallback({ progress: progress, queueSize: queueSize });\n        }));\n      }\n\n    } else {\n\n      for (const proj of indexer.iter()) {\n        const chunkValue = this.getChunkValue(proj, indexer, value, selectionShape);\n        allTasks.push(queue.add(() => this.chunkSetItem(proj.chunkCoords, proj.chunkSelection, chunkValue)));\n      }\n\n    }\n\n    // guarantees that all work on queue has finished and throws if any of the tasks errored.\n    await Promise.all(allTasks);\n  }\n\n  private async chunkSetItem(chunkCoords: number[], chunkSelection: DimensionSelection[], value: number | NestedArray<TypedArray>) {\n    if (this.meta.order === \"F\" && this.nDims > 1) {\n      throw new Error(\"Setting content for arrays in F-order is not supported.\");\n    }\n\n    // Obtain key for chunk storage\n    const chunkKey = this.chunkKey(chunkCoords);\n\n    let chunk: null | TypedArray = null;\n\n    const dtypeConstr = getTypedArrayCtr(this.dtype);\n    const chunkSize = this.chunkSize;\n\n    if (isTotalSlice(chunkSelection, this.chunks)) {\n      // Totally replace chunk\n\n      // Optimization: we are completely replacing the chunk, so no need\n      // to access the existing chunk data\n\n      if (typeof value === \"number\") {\n        // TODO get the right type here\n        chunk = new dtypeConstr(chunkSize);\n        chunk.fill(value);\n      } else {\n        chunk = value.flatten();\n      }\n    } else {\n\n      // partially replace the contents of this chunk\n\n      // Existing chunk data\n      let chunkData: TypedArray;\n\n      try {\n        // Chunk is initialized if this does not error\n        const chunkStoreData = await this.chunkStore.getItem(chunkKey);\n        const dBytes = await this.decodeChunk(chunkStoreData);\n        chunkData = this.toTypedArray(dBytes);\n      } catch (error) {\n        if (isKeyError(error)) {\n          // Chunk is not initialized\n          chunkData = new dtypeConstr(chunkSize);\n          if (this.fillValue !== null) {\n            chunkData.fill(this.fillValue);\n          }\n        } else {\n          // Different type of error - rethrow\n          throw error;\n        }\n      }\n\n      const chunkNestedArray = new NestedArray(\n        chunkData,\n        this.chunks,\n        this.dtype,\n      );\n      chunkNestedArray.set(chunkSelection, value);\n      chunk = chunkNestedArray.flatten();\n    }\n    const chunkData = await this.encodeChunk(chunk);\n    this.chunkStore.setItem(chunkKey, chunkData);\n  }\n\n  private async encodeChunk(chunk: TypedArray) {\n    if (this.dtype.includes('>')) {\n      /*\n       * If big endian, flip bytes before applying compression and setting store.\n       *\n       * Here we create a copy (not in-place byteswapping) to avoid flipping the\n       * bytes in the buffers of user-created Raw- and NestedArrays.\n      */\n      chunk = byteSwap(chunk);\n    }\n\n    if (this.compressor !== null) {\n      const bytes = new Uint8Array(chunk.buffer);\n      const cbytes = await (await this.compressor).encode(bytes);\n      return cbytes.buffer;\n    }\n\n    // TODO: filters, etc\n    return chunk.buffer;\n  }\n}\n","import { SyncStore, ValidStoreType } from \"./types\";\nimport { createProxy, MutableMappingProxy } from \"../mutableMapping\";\nimport { KeyError } from \"../errors\";\n\nexport class MemoryStore<T extends ValidStoreType> implements SyncStore<T, undefined> {\n    listDir?: undefined;\n    rmDir?: undefined;\n    getSize?: undefined;\n    rename?: undefined;\n\n    root: { [key: string]: any };\n\n    constructor(root = {}) {\n        this.root = root;\n    }\n\n    public proxy(): MutableMappingProxy<T> {\n        return createProxy(this);\n    }\n\n    private getParent(item: string): [any, string] {\n        let parent = this.root;\n        const segments = item.split('/');\n        // find the parent container\n        for (const k of segments.slice(0, segments.length - 1)) {\n            parent = parent[k];\n            if (!parent) {\n                throw Error(item);\n            }\n            // if not isinstance(parent, self.cls):\n            //     raise KeyError(item)\n        }\n        return [parent, segments[segments.length - 1]];\n    }\n\n    private requireParent(item: string): [any, string] {\n        let parent = this.root;\n        const segments = item.split('/');\n\n        // require the parent container\n        for (const k of segments.slice(0, segments.length - 1)) {\n            // TODO: verify correct implementation\n            if (parent[k] === undefined) {\n                parent[k] = {};\n            }\n            parent = parent[k];\n        }\n\n        return [parent, segments[segments.length - 1]];\n    }\n\n    getItem(item: string) {\n        const [parent, key] = this.getParent(item);\n        const value = parent[key];\n        if (value === undefined) {\n            throw new KeyError(item);\n        }\n        return value;\n    }\n\n    setItem(item: string, value: any): boolean {\n        const [parent, key] = this.requireParent(item);\n        parent[key] = value;\n        return true;\n    }\n\n    deleteItem(item: string): boolean {\n        const [parent, key] = this.getParent(item);\n        return delete parent[key];\n    }\n\n    containsItem(item: string): boolean {\n        // TODO: more sane implementation\n        try {\n            return this.getItem(item) !== undefined;\n        } catch (e) {\n            return false;\n        }\n    }\n\n    keys(): string[] {\n        throw new Error(\"Method not implemented.\");\n    }\n\n\n}","import { ChunksArgument, DtypeString, CompressorConfig, Order, Filter, FillType, PersistenceMode } from './types';\nimport { Store } from './storage/types';\nimport { ZarrArray } from './core/index';\nimport { MemoryStore } from './storage/memoryStore';\nimport { initArray, containsArray, containsGroup } from './storage/index';\nimport { TypedArray } from './nestedArray/types';\nimport { NestedArray } from './nestedArray/index';\nimport { normalizeStoragePath } from './util';\nimport { ContainsArrayError, ValueError, ArrayNotFoundError, ContainsGroupError } from './errors';\nimport { HTTPStore } from './storage/httpStore';\n\nexport type CreateArrayOptions = {\n    shape: number | number[];\n    chunks?: ChunksArgument;\n    dtype?: DtypeString;\n    compressor?: CompressorConfig | null;\n    fillValue?: FillType;\n    order?: Order;\n    store?: Store | string;\n    overwrite?: boolean;\n    path?: string | null;\n    chunkStore?: Store;\n    filters?: Filter[];\n    cacheMetadata?: boolean;\n    cacheAttrs?: boolean;\n    readOnly?: boolean;\n    dimensionSeparator?: '.' | '/';\n};\n\n/**\n * \n * @param shape Array shape.\n * @param chunks  Chunk shape. If `true`, will be guessed from `shape` and `dtype`. If\n *      `false`, will be set to `shape`, i.e., single chunk for the whole array.\n *      If an int, the chunk size in each dimension will be given by the value\n *      of `chunks`. Default is `true`.\n * @param dtype NumPy dtype.\n * @param compressor Primary compressor.\n * @param fillValue Default value to use for uninitialized portions of the array.\n * @param order Memory layout to be used within each chunk.\n * @param store Store or path to directory in file system or name of zip file.\n * @param overwrite  If True, delete all pre-existing data in `store` at `path` before creating the array.\n * @param path Path under which array is stored.\n * @param chunkStore Separate storage for chunks. If not provided, `store` will be used for storage of both chunks and metadata.\n * @param filters Sequence of filters to use to encode chunk data prior to compression.\n * @param cacheMetadata If `true` (default), array configuration metadata will be cached for the\n *      lifetime of the object. If `false`, array metadata will be reloaded\n *      prior to all data access and modification operations (may incur\n *      overhead depending on storage and data access pattern).\n * @param cacheAttrs If `true` (default), user attributes will be cached for attribute read\n *      operations. If `false`, user attributes are reloaded from the store prior\n *      to all attribute read operations.\n * @param readOnly `true` if array should be protected against modification, defaults to `false`.\n * @param dimensionSeparator if specified, defines an alternate string separator placed between the dimension chunks.\n */\nexport async function create(\n    { shape, chunks = true, dtype = \"<i4\", compressor = null, fillValue = null, order = \"C\", store: storeArgument, overwrite = false, path, chunkStore, filters, cacheMetadata = true, cacheAttrs = true, readOnly = false, dimensionSeparator }: CreateArrayOptions,\n): Promise<ZarrArray> {\n    \n    const store = normalizeStoreArgument(storeArgument);\n\n    await initArray(store, shape, chunks, dtype, path, compressor, fillValue, order, overwrite, chunkStore, filters, dimensionSeparator);\n    const z = await ZarrArray.create(store, path, readOnly, chunkStore, cacheMetadata, cacheAttrs);\n\n    return z;\n}\n\n\n/**\n * Create an empty array.\n */\nexport async function empty(shape: number | number[], opts: Omit<CreateArrayOptions, 'shape'> = {}) {\n    opts.fillValue = null;\n    return create({ shape, ...opts });\n}\n\n/**\n * Create an array, with zero being used as the default value for\n * uninitialized portions of the array.\n */\nexport async function zeros(shape: number | number[], opts: Omit<CreateArrayOptions, 'shape'> = {}) {\n    opts.fillValue = 0;\n    return create({ shape, ...opts });\n}\n\n/**\n * Create an array, with one being used as the default value for\n * uninitialized portions of the array.\n */\nexport async function ones(shape: number | number[], opts: Omit<CreateArrayOptions, 'shape'> = {}) {\n    opts.fillValue = 1;\n    return create({ shape, ...opts });\n}\n\n/**\n * Create an array, with `fill_value` being used as the default value for\n * uninitialized portions of the array\n */\nexport async function full(shape: number | number[], fillValue: FillType, opts: Omit<CreateArrayOptions, 'shape'> = {}) {\n    opts.fillValue = fillValue;\n    return create({ shape, ...opts });\n}\n\nexport async function array(data: Buffer | ArrayBuffer | NestedArray<TypedArray>, opts: Omit<CreateArrayOptions, 'shape'> = {}) {\n    // TODO: infer chunks?\n\n    let shape = null;\n    if (data instanceof NestedArray) {\n        shape = data.shape;\n        opts.dtype = opts.dtype === undefined ? data.dtype : opts.dtype;\n    } else {\n        shape = data.byteLength;\n        // TODO: infer datatype\n    }\n    // TODO: support TypedArray\n\n    const wasReadOnly = opts.readOnly === undefined ? false : opts.readOnly;\n    opts.readOnly = false;\n\n    const z = await create({ shape, ...opts });\n    await z.set(null, data);\n    z.readOnly = wasReadOnly;\n\n    return z;\n}\n\ntype OpenArrayOptions = Partial<CreateArrayOptions & { mode: PersistenceMode }>;\n\nexport async function openArray(\n    { shape, mode = \"a\", chunks = true, dtype = \"<i4\", compressor = null, fillValue = null, order = \"C\", store: storeArgument, overwrite = false, path = null, chunkStore, filters, cacheMetadata = true, cacheAttrs = true, dimensionSeparator }: OpenArrayOptions = {},\n) {\n    const store = normalizeStoreArgument(storeArgument);\n    if (chunkStore === undefined) {\n        chunkStore = normalizeStoreArgument(store);\n    }\n    path = normalizeStoragePath(path);\n\n    if (mode === \"r\" || mode === \"r+\") {\n        if (!await containsArray(store, path)) {\n            if (await containsGroup(store, path)) {\n                throw new ContainsGroupError(path);\n            }\n            throw new ArrayNotFoundError(path);\n        }\n    } else if (mode === \"w\") {\n\n        if (shape === undefined) {\n            throw new ValueError(\"Shape can not be undefined when creating a new array\");\n        }\n        await initArray(store, shape, chunks, dtype, path, compressor, fillValue, order, overwrite, chunkStore, filters, dimensionSeparator);\n\n    } else if (mode === \"a\") {\n        if (!await containsArray(store, path)) {\n            if (await containsGroup(store, path)) {\n                throw new ContainsGroupError(path);\n            }\n            if (shape === undefined) {\n                throw new ValueError(\"Shape can not be undefined when creating a new array\");\n            }\n            await initArray(store, shape, chunks, dtype, path, compressor, fillValue, order, overwrite, chunkStore, filters, dimensionSeparator);\n        }\n    } else if (mode === \"w-\" || (mode as any) === \"x\") {\n        if (await containsArray(store, path)) {\n            throw new ContainsArrayError(path);\n        } else if (await containsGroup(store, path)) {\n            throw new ContainsGroupError(path);\n        } else {\n            if (shape === undefined) {\n                throw new ValueError(\"Shape can not be undefined when creating a new array\");\n            }\n            await initArray(store, shape, chunks, dtype, path, compressor, fillValue, order, overwrite, chunkStore, filters, dimensionSeparator);\n        }\n    } else {\n        throw new ValueError(`Invalid mode argument: ${mode}`);\n    }\n\n    const readOnly = mode === \"r\";\n    return ZarrArray.create(store, path, readOnly, chunkStore, cacheMetadata, cacheAttrs);\n}\n\n\nexport function normalizeStoreArgument(store?: Store | string): Store {\n    if (store === undefined) {\n        return new MemoryStore();\n    } else if (typeof store === \"string\") {\n        return new HTTPStore(store);\n    }\n    return store;\n}","import { createProxy, AsyncMutableMapping, AsyncMutableMappingProxy } from './mutableMapping';\nimport { Store, } from './storage/types';\nimport { normalizeStoragePath } from './util';\nimport { containsArray, pathToPrefix, containsGroup, initGroup } from './storage/index';\nimport { ContainsArrayError, GroupNotFoundError, PermissionError, KeyError, ValueError, ContainsGroupError } from './errors';\nimport { ZarrGroupMetadata, UserAttributes, PersistenceMode } from './types';\nimport { GROUP_META_KEY, ATTRS_META_KEY } from './names';\nimport { parseMetadata } from './metadata';\nimport { Attributes } from './attributes';\nimport { array, empty, zeros, ones, full, create, normalizeStoreArgument, CreateArrayOptions } from './creation';\nimport { NestedArray } from './nestedArray';\nimport { TypedArray } from './nestedArray/types';\nimport { ZarrArray } from './core';\n\n\nexport class Group<StoreGetOptions = any> implements AsyncMutableMapping<Group<StoreGetOptions> | ZarrArray<StoreGetOptions>> {\n    /**\n     * A `Store` providing the underlying storage for the group.\n     */\n    public store: Store<StoreGetOptions>;\n\n    /**\n     * Storage path.\n     */\n    public path: string;\n\n    /**\n     * Group name following h5py convention.\n     */\n    public get name(): string {\n        if (this.path.length > 0) {\n            if (this.path[0] !== \"/\") {\n                return \"/\" + this.path;\n            }\n            return this.path;\n        }\n        return \"/\";\n    }\n\n    /**\n     * Final component of name.\n     */\n    public get basename(): string {\n        const parts = this.name.split(\"/\");\n        return parts[parts.length - 1];\n    }\n\n    /**\n     * An object containing user-defined attributes. Note that\n     * attribute values are stored as a JSON string in a store.\n     */\n    public attrs: Attributes<UserAttributes>;\n\n\n    private _chunkStore: Store<StoreGetOptions> | null;\n    /**\n     * A `Store` providing the underlying storage for array chunks.\n     */\n    public get chunkStore(): Store<StoreGetOptions> {\n        if (this._chunkStore) {\n            return this._chunkStore;\n        }\n        return this.store;\n    }\n\n    private keyPrefix: string;\n    public readOnly: boolean;\n    private meta: ZarrGroupMetadata;\n\n    public static async create<StoreGetOptions>(store: Store<StoreGetOptions>, path: string | null = null, readOnly = false, chunkStore: Store<StoreGetOptions> | null = null, cacheAttrs = true) {\n        const metadata = await this.loadMetadataForConstructor(store, path);\n        return new Group(store, path, metadata as ZarrGroupMetadata, readOnly, chunkStore, cacheAttrs);\n    }\n\n    private static async loadMetadataForConstructor<StoreGetOptions>(store: Store<StoreGetOptions>, path: null | string) {\n        path = normalizeStoragePath(path);\n        const keyPrefix = pathToPrefix(path);\n        try {\n            const metaStoreValue = await store.getItem(keyPrefix + GROUP_META_KEY);\n            return parseMetadata(metaStoreValue);\n        } catch (error) {\n            if (await containsArray(store, path)) {\n                throw new ContainsArrayError(path);\n            }\n            throw new GroupNotFoundError(path);\n        }\n    }\n\n    private constructor(store: Store<StoreGetOptions>, path: string | null = null, metadata: ZarrGroupMetadata, readOnly = false, chunkStore: Store<StoreGetOptions> | null = null, cacheAttrs = true) {\n        this.store = store;\n        this._chunkStore = chunkStore;\n        this.path = normalizeStoragePath(path);\n        this.keyPrefix = pathToPrefix(this.path);\n        this.readOnly = readOnly;\n        this.meta = metadata;\n\n        // Initialize attributes\n        const attrKey = this.keyPrefix + ATTRS_META_KEY;\n        this.attrs = new Attributes<UserAttributes>(this.store, attrKey, this.readOnly, cacheAttrs);\n    }\n\n    private itemPath(item: string | null) {\n        const absolute = typeof item === \"string\" && item.length > 0 && item[0] === '/';\n        const path = normalizeStoragePath(item);\n        // Absolute path\n        if (!absolute && this.path.length > 0) {\n            return this.keyPrefix + path;\n        }\n        return path;\n    }\n\n    /**\n     * Create a sub-group.\n     */\n    public async createGroup(name: string, overwrite = false) {\n        if (this.readOnly) {\n            throw new PermissionError(\"group is read only\");\n        }\n        const path = this.itemPath(name);\n        await initGroup(this.store, path, this._chunkStore, overwrite);\n        return Group.create(this.store, path, this.readOnly, this._chunkStore, this.attrs.cache);\n    }\n\n    /**\n     * Obtain a sub-group, creating one if it doesn't exist.\n     */\n    public async requireGroup(name: string, overwrite = false) {\n        if (this.readOnly) {\n            throw new PermissionError(\"group is read only\");\n        }\n        const path = this.itemPath(name);\n        if (!await containsGroup(this.store, path)) {\n            await initGroup(this.store, path, this._chunkStore, overwrite);\n        }\n        return Group.create(this.store, path, this.readOnly, this._chunkStore, this.attrs.cache);\n    }\n\n    private getOptsForArrayCreation(name: string, opts: Omit<CreateArrayOptions, 'shape'> = {}) {\n        const path = this.itemPath(name);\n        opts.path = path;\n\n        if (opts.cacheAttrs === undefined) {\n            opts.cacheAttrs = this.attrs.cache;\n        }\n        opts.store = this.store;\n        opts.chunkStore = this.chunkStore;\n        return opts;\n    }\n\n    /**\n     * Creates an array\n     */\n    public array(name: string, data: Buffer | ArrayBuffer | NestedArray<TypedArray>, opts?: Omit<CreateArrayOptions, 'shape'>, overwrite?: boolean) {\n        if (this.readOnly) {\n            throw new PermissionError(\"group is read only\");\n        }\n        opts = this.getOptsForArrayCreation(name, opts);\n        opts.overwrite = overwrite === undefined ? opts.overwrite : overwrite;\n\n        return array(data, opts);\n    }\n\n    public empty(name: string, shape: number | number[], opts: Omit<CreateArrayOptions, 'shape'>= {}) {\n        if (this.readOnly) {\n            throw new PermissionError(\"group is read only\");\n        }\n        opts = this.getOptsForArrayCreation(name, opts);\n\n        return empty(shape, opts);\n    }\n\n    public zeros(name: string, shape: number | number[], opts: Omit<CreateArrayOptions, 'shape'>= {}) {\n        if (this.readOnly) {\n            throw new PermissionError(\"group is read only\");\n        }\n        opts = this.getOptsForArrayCreation(name, opts);\n\n        return zeros(shape, opts);\n    }\n\n    public ones(name: string, shape: number | number[], opts: Omit<CreateArrayOptions, 'shape'>= {}) {\n        if (this.readOnly) {\n            throw new PermissionError(\"group is read only\");\n        }\n        opts = this.getOptsForArrayCreation(name, opts);\n\n        return ones(shape, opts);\n    }\n\n    public full(name: string, shape: number | number[], fillValue: number | null, opts: Omit<CreateArrayOptions, 'shape'> = {}) {\n        if (this.readOnly) {\n            throw new PermissionError(\"group is read only\");\n        }\n        opts = this.getOptsForArrayCreation(name, opts);\n\n        return full(shape, fillValue, opts);\n    }\n\n    public createDataset(name: string, shape?: number | number[], data?: Buffer | ArrayBuffer | NestedArray<TypedArray>, opts?: Omit<CreateArrayOptions, 'shape'>) {\n        if (this.readOnly) {\n            throw new PermissionError(\"group is read only\");\n        }\n        opts = this.getOptsForArrayCreation(name, opts);\n\n        let z: Promise<ZarrArray<StoreGetOptions>>;\n        if (data === undefined) {\n            if (shape === undefined) {\n                throw new ValueError(\"Shape must be set if no data is passed to CreateDataset\");\n            }\n            z = create({ shape, ...opts });\n        } else {\n            z = array(data, opts);\n        }\n        return z;\n    }\n\n    async getItem(item: string) {\n        const path = this.itemPath(item);\n        if (await containsArray(this.store, path)) {\n            return ZarrArray.create(this.store, path, this.readOnly, this.chunkStore, undefined, this.attrs.cache);\n        } else if (await containsGroup(this.store, path)) {\n            return Group.create(this.store, path, this.readOnly, this._chunkStore, this.attrs.cache);\n        }\n        throw new KeyError(item);\n    }\n\n    async setItem(item: string, value: any) {\n        await this.array(item, value, {}, true);\n        return true;\n    }\n\n    // eslint-disable-next-line @typescript-eslint/no-unused-vars\n    async deleteItem(_item: string): Promise<boolean> {\n        if (this.readOnly) {\n            throw new PermissionError(\"group is read only\");\n        }\n        throw new Error(\"Method not implemented.\");\n    }\n\n    async containsItem(item: string) {\n        const path = this.itemPath(item);\n        return await containsArray(this.store, path) || containsGroup(this.store, path);\n    }\n\n    proxy(): AsyncMutableMappingProxy<Group<StoreGetOptions>> {\n        return createProxy(this);\n    }\n}\n\n/**\n * Create a group.\n * @param store Store or path to directory in file system.\n * @param path Group path within store.\n * @param chunkStore Separate storage for chunks. If not provided, `store` will be used for storage of both chunks and metadata.\n * @param overwrite If `true`, delete any pre-existing data in `store` at `path` before creating the group.\n * @param cacheAttrs If `true` (default), user attributes will be cached for attribute read operations.\n *   If `false`, user attributes are reloaded from the store prior to all attribute read operations.\n */\nexport async function group<StoreGetOptions>(store?: Store<StoreGetOptions> | string, path: string | null = null, chunkStore?: Store<StoreGetOptions>, overwrite = false, cacheAttrs = true) {\n    store = normalizeStoreArgument(store);\n    path = normalizeStoragePath(path);\n\n    if (overwrite || await containsGroup(store)) {\n        await initGroup(store, path, chunkStore, overwrite);\n    }\n\n    return Group.create(store, path, false, chunkStore, cacheAttrs);\n}\n\n/**\n * Open a group using file-mode-like semantics.\n * @param store Store or path to directory in file system or name of zip file.\n * @param path Group path within store.\n * @param mode Persistence mode, see `PersistenceMode` type.\n * @param chunkStore Store or path to directory in file system or name of zip file.\n * @param cacheAttrs If `true` (default), user attributes will be cached for attribute read operations\n *   If False, user attributes are reloaded from the store prior to all attribute read operations.\n *\n */\nexport async function openGroup<StoreGetOptions>(store?: Store<StoreGetOptions> | string, path: string | null = null, mode: PersistenceMode = \"a\", chunkStore?: Store<StoreGetOptions>, cacheAttrs = true) {\n    store = normalizeStoreArgument(store);\n    if (chunkStore !== undefined) {\n        chunkStore = normalizeStoreArgument(store);\n    }\n    path = normalizeStoragePath(path);\n\n    if (mode === \"r\" || mode === \"r+\") {\n        if (!await containsGroup(store, path)) {\n            if (await containsArray(store, path)) {\n                throw new ContainsArrayError(path);\n            }\n            throw new GroupNotFoundError(path);\n        }\n    } else if (mode === \"w\") {\n        await initGroup(store, path, chunkStore, true);\n    } else if (mode === \"a\") {\n        if (!await containsGroup(store, path)) {\n            if (await containsArray(store, path)) {\n                throw new ContainsArrayError(path);\n            }\n            await initGroup(store, path, chunkStore);\n        }\n    } else if (mode === \"w-\" || (mode as any) === \"x\") {\n        if (await containsArray(store, path)) {\n            throw new ContainsArrayError(path);\n        } else if (await containsGroup(store, path)) {\n            throw new ContainsGroupError(path);\n        } else {\n            await initGroup(store, path, chunkStore);\n        }\n    } else {\n        throw new ValueError(`Invalid mode argument: ${mode}`);\n    }\n\n    const readOnly = mode === \"r\";\n    return Group.create(store, path, readOnly, chunkStore, cacheAttrs);\n}\n","import { SyncStore, ValidStoreType } from \"./types\";\nimport { createProxy, MutableMappingProxy } from \"../mutableMapping\";\nimport { KeyError } from \"../errors\";\n\nexport class ObjectStore<T extends ValidStoreType> implements SyncStore<T> {\n    listDir?: undefined;\n    rmDir?: undefined;\n    getSize?: undefined;\n    rename?: undefined;\n\n    public object: {\n        [key: string]: T;\n    };\n\n    constructor() {\n        this.object = {};\n    }\n\n    getItem(item: string): T {\n        if (!Object.prototype.hasOwnProperty.call(this.object, item)) {\n            throw new KeyError(item);\n        }\n        return this.object[item];\n    }\n    setItem(item: string, value: T): boolean {\n        this.object[item] = value;\n        return true;\n    }\n    deleteItem(item: string): boolean {\n        return delete this.object[item];\n    }\n    containsItem(item: string): boolean {\n        return Object.prototype.hasOwnProperty.call(this.object, item);\n    }\n    proxy(): MutableMappingProxy<T> {\n        return createProxy(this);\n    }\n    keys(): string[] {\n        return Object.getOwnPropertyNames(this.object);\n    }\n}","export const getHttpHandlerExtensionConfiguration = (runtimeConfig) => {\n    let httpHandler = runtimeConfig.httpHandler;\n    return {\n        setHttpHandler(handler) {\n            httpHandler = handler;\n        },\n        httpHandler() {\n            return httpHandler;\n        },\n        updateHttpClientConfig(key, value) {\n            httpHandler.updateHttpClientConfig(key, value);\n        },\n        httpHandlerConfigs() {\n            return httpHandler.httpHandlerConfigs();\n        },\n    };\n};\nexport const resolveHttpHandlerRuntimeConfig = (httpHandlerExtensionConfiguration) => {\n    return {\n        httpHandler: httpHandlerExtensionConfiguration.httpHandler(),\n    };\n};\n","export var HttpAuthLocation;\n(function (HttpAuthLocation) {\n    HttpAuthLocation[\"HEADER\"] = \"header\";\n    HttpAuthLocation[\"QUERY\"] = \"query\";\n})(HttpAuthLocation || (HttpAuthLocation = {}));\n","export var HttpApiKeyAuthLocation;\n(function (HttpApiKeyAuthLocation) {\n    HttpApiKeyAuthLocation[\"HEADER\"] = \"header\";\n    HttpApiKeyAuthLocation[\"QUERY\"] = \"query\";\n})(HttpApiKeyAuthLocation || (HttpApiKeyAuthLocation = {}));\n","export var EndpointURLScheme;\n(function (EndpointURLScheme) {\n    EndpointURLScheme[\"HTTP\"] = \"http\";\n    EndpointURLScheme[\"HTTPS\"] = \"https\";\n})(EndpointURLScheme || (EndpointURLScheme = {}));\n","export var AlgorithmId;\n(function (AlgorithmId) {\n    AlgorithmId[\"MD5\"] = \"md5\";\n    AlgorithmId[\"CRC32\"] = \"crc32\";\n    AlgorithmId[\"CRC32C\"] = \"crc32c\";\n    AlgorithmId[\"SHA1\"] = \"sha1\";\n    AlgorithmId[\"SHA256\"] = \"sha256\";\n})(AlgorithmId || (AlgorithmId = {}));\nexport const getChecksumConfiguration = (runtimeConfig) => {\n    const checksumAlgorithms = [];\n    if (runtimeConfig.sha256 !== undefined) {\n        checksumAlgorithms.push({\n            algorithmId: () => AlgorithmId.SHA256,\n            checksumConstructor: () => runtimeConfig.sha256,\n        });\n    }\n    if (runtimeConfig.md5 != undefined) {\n        checksumAlgorithms.push({\n            algorithmId: () => AlgorithmId.MD5,\n            checksumConstructor: () => runtimeConfig.md5,\n        });\n    }\n    return {\n        _checksumAlgorithms: checksumAlgorithms,\n        addChecksumAlgorithm(algo) {\n            this._checksumAlgorithms.push(algo);\n        },\n        checksumAlgorithms() {\n            return this._checksumAlgorithms;\n        },\n    };\n};\nexport const resolveChecksumRuntimeConfig = (clientConfig) => {\n    const runtimeConfig = {};\n    clientConfig.checksumAlgorithms().forEach((checksumAlgorithm) => {\n        runtimeConfig[checksumAlgorithm.algorithmId()] = checksumAlgorithm.checksumConstructor();\n    });\n    return runtimeConfig;\n};\n","export var FieldPosition;\n(function (FieldPosition) {\n    FieldPosition[FieldPosition[\"HEADER\"] = 0] = \"HEADER\";\n    FieldPosition[FieldPosition[\"TRAILER\"] = 1] = \"TRAILER\";\n})(FieldPosition || (FieldPosition = {}));\n","export const SMITHY_CONTEXT_KEY = \"__smithy_context\";\n","export var IniSectionType;\n(function (IniSectionType) {\n    IniSectionType[\"PROFILE\"] = \"profile\";\n    IniSectionType[\"SSO_SESSION\"] = \"sso-session\";\n    IniSectionType[\"SERVICES\"] = \"services\";\n})(IniSectionType || (IniSectionType = {}));\n","export var RequestHandlerProtocol;\n(function (RequestHandlerProtocol) {\n    RequestHandlerProtocol[\"HTTP_0_9\"] = \"http/0.9\";\n    RequestHandlerProtocol[\"HTTP_1_0\"] = \"http/1.0\";\n    RequestHandlerProtocol[\"TDS_8_0\"] = \"tds/8.0\";\n})(RequestHandlerProtocol || (RequestHandlerProtocol = {}));\n","export class HttpRequest {\n    constructor(options) {\n        this.method = options.method || \"GET\";\n        this.hostname = options.hostname || \"localhost\";\n        this.port = options.port;\n        this.query = options.query || {};\n        this.headers = options.headers || {};\n        this.body = options.body;\n        this.protocol = options.protocol\n            ? options.protocol.slice(-1) !== \":\"\n                ? `${options.protocol}:`\n                : options.protocol\n            : \"https:\";\n        this.path = options.path ? (options.path.charAt(0) !== \"/\" ? `/${options.path}` : options.path) : \"/\";\n        this.username = options.username;\n        this.password = options.password;\n        this.fragment = options.fragment;\n    }\n    static clone(request) {\n        const cloned = new HttpRequest({\n            ...request,\n            headers: { ...request.headers },\n        });\n        if (cloned.query) {\n            cloned.query = cloneQuery(cloned.query);\n        }\n        return cloned;\n    }\n    static isInstance(request) {\n        if (!request) {\n            return false;\n        }\n        const req = request;\n        return (\"method\" in req &&\n            \"protocol\" in req &&\n            \"hostname\" in req &&\n            \"path\" in req &&\n            typeof req[\"query\"] === \"object\" &&\n            typeof req[\"headers\"] === \"object\");\n    }\n    clone() {\n        return HttpRequest.clone(this);\n    }\n}\nfunction cloneQuery(query) {\n    return Object.keys(query).reduce((carry, paramName) => {\n        const param = query[paramName];\n        return {\n            ...carry,\n            [paramName]: Array.isArray(param) ? [...param] : param,\n        };\n    }, {});\n}\n","export class HttpResponse {\n    constructor(options) {\n        this.statusCode = options.statusCode;\n        this.reason = options.reason;\n        this.headers = options.headers || {};\n        this.body = options.body;\n    }\n    static isInstance(response) {\n        if (!response)\n            return false;\n        const resp = response;\n        return typeof resp.statusCode === \"number\" && typeof resp.headers === \"object\";\n    }\n}\n","import { HttpRequest } from \"@smithy/protocol-http\";\nexport function addExpectContinueMiddleware(options) {\n    return (next) => async (args) => {\n        const { request } = args;\n        if (HttpRequest.isInstance(request) && request.body && options.runtime === \"node\") {\n            if (options.requestHandler?.constructor?.name !== \"FetchHttpHandler\") {\n                request.headers = {\n                    ...request.headers,\n                    Expect: \"100-continue\",\n                };\n            }\n        }\n        return next({\n            ...args,\n            request,\n        });\n    };\n}\nexport const addExpectContinueMiddlewareOptions = {\n    step: \"build\",\n    tags: [\"SET_EXPECT_HEADER\", \"EXPECT_HEADER\"],\n    name: \"addExpectContinueMiddleware\",\n    override: true,\n};\nexport const getAddExpectContinuePlugin = (options) => ({\n    applyToStack: (clientStack) => {\n        clientStack.add(addExpectContinueMiddleware(options), addExpectContinueMiddlewareOptions);\n    },\n});\n","export const RequestChecksumCalculation = {\n    WHEN_SUPPORTED: \"WHEN_SUPPORTED\",\n    WHEN_REQUIRED: \"WHEN_REQUIRED\",\n};\nexport const DEFAULT_REQUEST_CHECKSUM_CALCULATION = RequestChecksumCalculation.WHEN_SUPPORTED;\nexport const ResponseChecksumValidation = {\n    WHEN_SUPPORTED: \"WHEN_SUPPORTED\",\n    WHEN_REQUIRED: \"WHEN_REQUIRED\",\n};\nexport const DEFAULT_RESPONSE_CHECKSUM_VALIDATION = RequestChecksumCalculation.WHEN_SUPPORTED;\nexport var ChecksumAlgorithm;\n(function (ChecksumAlgorithm) {\n    ChecksumAlgorithm[\"MD5\"] = \"MD5\";\n    ChecksumAlgorithm[\"CRC32\"] = \"CRC32\";\n    ChecksumAlgorithm[\"CRC32C\"] = \"CRC32C\";\n    ChecksumAlgorithm[\"CRC64NVME\"] = \"CRC64NVME\";\n    ChecksumAlgorithm[\"SHA1\"] = \"SHA1\";\n    ChecksumAlgorithm[\"SHA256\"] = \"SHA256\";\n})(ChecksumAlgorithm || (ChecksumAlgorithm = {}));\nexport var ChecksumLocation;\n(function (ChecksumLocation) {\n    ChecksumLocation[\"HEADER\"] = \"header\";\n    ChecksumLocation[\"TRAILER\"] = \"trailer\";\n})(ChecksumLocation || (ChecksumLocation = {}));\nexport const DEFAULT_CHECKSUM_ALGORITHM = ChecksumAlgorithm.CRC32;\n","export var SelectorType;\n(function (SelectorType) {\n    SelectorType[\"ENV\"] = \"env\";\n    SelectorType[\"CONFIG\"] = \"shared config entry\";\n})(SelectorType || (SelectorType = {}));\nexport const stringUnionSelector = (obj, key, union, type) => {\n    if (!(key in obj))\n        return undefined;\n    const value = obj[key].toUpperCase();\n    if (!Object.values(union).includes(value)) {\n        throw new TypeError(`Cannot load ${type} '${key}'. Expected one of ${Object.values(union)}, got '${obj[key]}'.`);\n    }\n    return value;\n};\n","import { DEFAULT_REQUEST_CHECKSUM_CALCULATION, RequestChecksumCalculation } from \"./constants\";\nimport { SelectorType, stringUnionSelector } from \"./stringUnionSelector\";\nexport const ENV_REQUEST_CHECKSUM_CALCULATION = \"AWS_REQUEST_CHECKSUM_CALCULATION\";\nexport const CONFIG_REQUEST_CHECKSUM_CALCULATION = \"request_checksum_calculation\";\nexport const NODE_REQUEST_CHECKSUM_CALCULATION_CONFIG_OPTIONS = {\n    environmentVariableSelector: (env) => stringUnionSelector(env, ENV_REQUEST_CHECKSUM_CALCULATION, RequestChecksumCalculation, SelectorType.ENV),\n    configFileSelector: (profile) => stringUnionSelector(profile, CONFIG_REQUEST_CHECKSUM_CALCULATION, RequestChecksumCalculation, SelectorType.CONFIG),\n    default: DEFAULT_REQUEST_CHECKSUM_CALCULATION,\n};\n","import { DEFAULT_RESPONSE_CHECKSUM_VALIDATION, ResponseChecksumValidation } from \"./constants\";\nimport { SelectorType, stringUnionSelector } from \"./stringUnionSelector\";\nexport const ENV_RESPONSE_CHECKSUM_VALIDATION = \"AWS_RESPONSE_CHECKSUM_VALIDATION\";\nexport const CONFIG_RESPONSE_CHECKSUM_VALIDATION = \"response_checksum_validation\";\nexport const NODE_RESPONSE_CHECKSUM_VALIDATION_CONFIG_OPTIONS = {\n    environmentVariableSelector: (env) => stringUnionSelector(env, ENV_RESPONSE_CHECKSUM_VALIDATION, ResponseChecksumValidation, SelectorType.ENV),\n    configFileSelector: (profile) => stringUnionSelector(profile, CONFIG_RESPONSE_CHECKSUM_VALIDATION, ResponseChecksumValidation, SelectorType.CONFIG),\n    default: DEFAULT_RESPONSE_CHECKSUM_VALIDATION,\n};\n","export const state = {\n    warningEmitted: false,\n};\nexport const emitWarningIfUnsupportedVersion = (version) => {\n    if (version && !state.warningEmitted && parseInt(version.substring(1, version.indexOf(\".\"))) < 18) {\n        state.warningEmitted = true;\n        process.emitWarning(`NodeDeprecationWarning: The AWS SDK for JavaScript (v3) will\nno longer support Node.js 16.x on January 6, 2025.\n\nTo continue receiving updates to AWS services, bug fixes, and security\nupdates please upgrade to a supported Node.js LTS version.\n\nMore information can be found at: https://a.co/74kJMmI`);\n    }\n};\n","export function setCredentialFeature(credentials, feature, value) {\n    if (!credentials.$source) {\n        credentials.$source = {};\n    }\n    credentials.$source[feature] = value;\n    return credentials;\n}\n","export function setFeature(context, feature, value) {\n    if (!context.__aws_sdk_context) {\n        context.__aws_sdk_context = {\n            features: {},\n        };\n    }\n    else if (!context.__aws_sdk_context.features) {\n        context.__aws_sdk_context.features = {};\n    }\n    context.__aws_sdk_context.features[feature] = value;\n}\n","import { HttpResponse } from \"@smithy/protocol-http\";\nexport const getDateHeader = (response) => HttpResponse.isInstance(response) ? response.headers?.date ?? response.headers?.Date : undefined;\n","export const getSkewCorrectedDate = (systemClockOffset) => new Date(Date.now() + systemClockOffset);\n","import { isClockSkewed } from \"./isClockSkewed\";\nexport const getUpdatedSystemClockOffset = (clockTime, currentSystemClockOffset) => {\n    const clockTimeInMs = Date.parse(clockTime);\n    if (isClockSkewed(clockTimeInMs, currentSystemClockOffset)) {\n        return clockTimeInMs - Date.now();\n    }\n    return currentSystemClockOffset;\n};\n","import { getSkewCorrectedDate } from \"./getSkewCorrectedDate\";\nexport const isClockSkewed = (clockTime, systemClockOffset) => Math.abs(getSkewCorrectedDate(systemClockOffset).getTime() - clockTime) >= 300000;\n","import { HttpRequest } from \"@smithy/protocol-http\";\nimport { getDateHeader, getSkewCorrectedDate, getUpdatedSystemClockOffset } from \"../utils\";\nconst throwSigningPropertyError = (name, property) => {\n    if (!property) {\n        throw new Error(`Property \\`${name}\\` is not resolved for AWS SDK SigV4Auth`);\n    }\n    return property;\n};\nexport const validateSigningProperties = async (signingProperties) => {\n    const context = throwSigningPropertyError(\"context\", signingProperties.context);\n    const config = throwSigningPropertyError(\"config\", signingProperties.config);\n    const authScheme = context.endpointV2?.properties?.authSchemes?.[0];\n    const signerFunction = throwSigningPropertyError(\"signer\", config.signer);\n    const signer = await signerFunction(authScheme);\n    const signingRegion = signingProperties?.signingRegion;\n    const signingRegionSet = signingProperties?.signingRegionSet;\n    const signingName = signingProperties?.signingName;\n    return {\n        config,\n        signer,\n        signingRegion,\n        signingRegionSet,\n        signingName,\n    };\n};\nexport class AwsSdkSigV4Signer {\n    async sign(httpRequest, identity, signingProperties) {\n        if (!HttpRequest.isInstance(httpRequest)) {\n            throw new Error(\"The request is not an instance of `HttpRequest` and cannot be signed\");\n        }\n        const validatedProps = await validateSigningProperties(signingProperties);\n        const { config, signer } = validatedProps;\n        let { signingRegion, signingName } = validatedProps;\n        const handlerExecutionContext = signingProperties.context;\n        if (handlerExecutionContext?.authSchemes?.length ?? 0 > 1) {\n            const [first, second] = handlerExecutionContext.authSchemes;\n            if (first?.name === \"sigv4a\" && second?.name === \"sigv4\") {\n                signingRegion = second?.signingRegion ?? signingRegion;\n                signingName = second?.signingName ?? signingName;\n            }\n        }\n        const signedRequest = await signer.sign(httpRequest, {\n            signingDate: getSkewCorrectedDate(config.systemClockOffset),\n            signingRegion: signingRegion,\n            signingService: signingName,\n        });\n        return signedRequest;\n    }\n    errorHandler(signingProperties) {\n        return (error) => {\n            const serverTime = error.ServerTime ?? getDateHeader(error.$response);\n            if (serverTime) {\n                const config = throwSigningPropertyError(\"config\", signingProperties.config);\n                const initialSystemClockOffset = config.systemClockOffset;\n                config.systemClockOffset = getUpdatedSystemClockOffset(serverTime, config.systemClockOffset);\n                const clockSkewCorrected = config.systemClockOffset !== initialSystemClockOffset;\n                if (clockSkewCorrected && error.$metadata) {\n                    error.$metadata.clockSkewCorrected = true;\n                }\n            }\n            throw error;\n        };\n    }\n    successHandler(httpResponse, signingProperties) {\n        const dateHeader = getDateHeader(httpResponse);\n        if (dateHeader) {\n            const config = throwSigningPropertyError(\"config\", signingProperties.config);\n            config.systemClockOffset = getUpdatedSystemClockOffset(dateHeader, config.systemClockOffset);\n        }\n    }\n}\nexport const AWSSDKSigV4Signer = AwsSdkSigV4Signer;\n","import { HttpRequest } from \"@smithy/protocol-http\";\nimport { getSkewCorrectedDate } from \"../utils\";\nimport { AwsSdkSigV4Signer, validateSigningProperties } from \"./AwsSdkSigV4Signer\";\nexport class AwsSdkSigV4ASigner extends AwsSdkSigV4Signer {\n    async sign(httpRequest, identity, signingProperties) {\n        if (!HttpRequest.isInstance(httpRequest)) {\n            throw new Error(\"The request is not an instance of `HttpRequest` and cannot be signed\");\n        }\n        const { config, signer, signingRegion, signingRegionSet, signingName } = await validateSigningProperties(signingProperties);\n        const configResolvedSigningRegionSet = await config.sigv4aSigningRegionSet?.();\n        const multiRegionOverride = (configResolvedSigningRegionSet ??\n            signingRegionSet ?? [signingRegion]).join(\",\");\n        const signedRequest = await signer.sign(httpRequest, {\n            signingDate: getSkewCorrectedDate(config.systemClockOffset),\n            signingRegion: multiRegionOverride,\n            signingService: signingName,\n        });\n        return signedRequest;\n    }\n}\n","import { SMITHY_CONTEXT_KEY } from \"@smithy/types\";\nexport const getSmithyContext = (context) => context[SMITHY_CONTEXT_KEY] || (context[SMITHY_CONTEXT_KEY] = {});\n","export const normalizeProvider = (input) => {\n    if (typeof input === \"function\")\n        return input;\n    const promisified = Promise.resolve(input);\n    return () => promisified;\n};\n","import { SMITHY_CONTEXT_KEY, } from \"@smithy/types\";\nimport { getSmithyContext } from \"@smithy/util-middleware\";\nfunction convertHttpAuthSchemesToMap(httpAuthSchemes) {\n    const map = new Map();\n    for (const scheme of httpAuthSchemes) {\n        map.set(scheme.schemeId, scheme);\n    }\n    return map;\n}\nexport const httpAuthSchemeMiddleware = (config, mwOptions) => (next, context) => async (args) => {\n    const options = config.httpAuthSchemeProvider(await mwOptions.httpAuthSchemeParametersProvider(config, context, args.input));\n    const authSchemes = convertHttpAuthSchemesToMap(config.httpAuthSchemes);\n    const smithyContext = getSmithyContext(context);\n    const failureReasons = [];\n    for (const option of options) {\n        const scheme = authSchemes.get(option.schemeId);\n        if (!scheme) {\n            failureReasons.push(`HttpAuthScheme \\`${option.schemeId}\\` was not enabled for this service.`);\n            continue;\n        }\n        const identityProvider = scheme.identityProvider(await mwOptions.identityProviderConfigProvider(config));\n        if (!identityProvider) {\n            failureReasons.push(`HttpAuthScheme \\`${option.schemeId}\\` did not have an IdentityProvider configured.`);\n            continue;\n        }\n        const { identityProperties = {}, signingProperties = {} } = option.propertiesExtractor?.(config, context) || {};\n        option.identityProperties = Object.assign(option.identityProperties || {}, identityProperties);\n        option.signingProperties = Object.assign(option.signingProperties || {}, signingProperties);\n        smithyContext.selectedHttpAuthScheme = {\n            httpAuthOption: option,\n            identity: await identityProvider(option.identityProperties),\n            signer: scheme.signer,\n        };\n        break;\n    }\n    if (!smithyContext.selectedHttpAuthScheme) {\n        throw new Error(failureReasons.join(\"\\n\"));\n    }\n    return next(args);\n};\n","import { httpAuthSchemeMiddleware } from \"./httpAuthSchemeMiddleware\";\nexport const httpAuthSchemeEndpointRuleSetMiddlewareOptions = {\n    step: \"serialize\",\n    tags: [\"HTTP_AUTH_SCHEME\"],\n    name: \"httpAuthSchemeMiddleware\",\n    override: true,\n    relation: \"before\",\n    toMiddleware: \"endpointV2Middleware\",\n};\nexport const getHttpAuthSchemeEndpointRuleSetPlugin = (config, { httpAuthSchemeParametersProvider, identityProviderConfigProvider, }) => ({\n    applyToStack: (clientStack) => {\n        clientStack.addRelativeTo(httpAuthSchemeMiddleware(config, {\n            httpAuthSchemeParametersProvider,\n            identityProviderConfigProvider,\n        }), httpAuthSchemeEndpointRuleSetMiddlewareOptions);\n    },\n});\n","import { deserializerMiddleware } from \"./deserializerMiddleware\";\nimport { serializerMiddleware } from \"./serializerMiddleware\";\nexport const deserializerMiddlewareOption = {\n    name: \"deserializerMiddleware\",\n    step: \"deserialize\",\n    tags: [\"DESERIALIZER\"],\n    override: true,\n};\nexport const serializerMiddlewareOption = {\n    name: \"serializerMiddleware\",\n    step: \"serialize\",\n    tags: [\"SERIALIZER\"],\n    override: true,\n};\nexport function getSerdePlugin(config, serializer, deserializer) {\n    return {\n        applyToStack: (commandStack) => {\n            commandStack.add(deserializerMiddleware(config, deserializer), deserializerMiddlewareOption);\n            commandStack.add(serializerMiddleware(config, serializer), serializerMiddlewareOption);\n        },\n    };\n}\n","export const deserializerMiddleware = (options, deserializer) => (next, context) => async (args) => {\n    const { response } = await next(args);\n    try {\n        const parsed = await deserializer(response, options);\n        return {\n            response,\n            output: parsed,\n        };\n    }\n    catch (error) {\n        Object.defineProperty(error, \"$response\", {\n            value: response,\n        });\n        if (!(\"$metadata\" in error)) {\n            const hint = `Deserialization error: to see the raw response, inspect the hidden field {error}.$response on this object.`;\n            try {\n                error.message += \"\\n  \" + hint;\n            }\n            catch (e) {\n                if (!context.logger || context.logger?.constructor?.name === \"NoOpLogger\") {\n                    console.warn(hint);\n                }\n                else {\n                    context.logger?.warn?.(hint);\n                }\n            }\n            if (typeof error.$responseBodyText !== \"undefined\") {\n                if (error.$response) {\n                    error.$response.body = error.$responseBodyText;\n                }\n            }\n        }\n        throw error;\n    }\n};\n","export const serializerMiddleware = (options, serializer) => (next, context) => async (args) => {\n    const endpoint = context.endpointV2?.url && options.urlParser\n        ? async () => options.urlParser(context.endpointV2.url)\n        : options.endpoint;\n    if (!endpoint) {\n        throw new Error(\"No valid endpoint provider available.\");\n    }\n    const request = await serializer(args.input, { ...options, endpoint });\n    return next({\n        ...args,\n        request,\n    });\n};\n","import { HttpRequest } from \"@smithy/protocol-http\";\nimport { SMITHY_CONTEXT_KEY, } from \"@smithy/types\";\nimport { getSmithyContext } from \"@smithy/util-middleware\";\nconst defaultErrorHandler = (signingProperties) => (error) => {\n    throw error;\n};\nconst defaultSuccessHandler = (httpResponse, signingProperties) => { };\nexport const httpSigningMiddleware = (config) => (next, context) => async (args) => {\n    if (!HttpRequest.isInstance(args.request)) {\n        return next(args);\n    }\n    const smithyContext = getSmithyContext(context);\n    const scheme = smithyContext.selectedHttpAuthScheme;\n    if (!scheme) {\n        throw new Error(`No HttpAuthScheme was selected: unable to sign request`);\n    }\n    const { httpAuthOption: { signingProperties = {} }, identity, signer, } = scheme;\n    const output = await next({\n        ...args,\n        request: await signer.sign(args.request, identity, signingProperties),\n    }).catch((signer.errorHandler || defaultErrorHandler)(signingProperties));\n    (signer.successHandler || defaultSuccessHandler)(output.response, signingProperties);\n    return output;\n};\n","import { httpSigningMiddleware } from \"./httpSigningMiddleware\";\nexport const httpSigningMiddlewareOptions = {\n    step: \"finalizeRequest\",\n    tags: [\"HTTP_SIGNING\"],\n    name: \"httpSigningMiddleware\",\n    aliases: [\"apiKeyMiddleware\", \"tokenMiddleware\", \"awsAuthMiddleware\"],\n    override: true,\n    relation: \"after\",\n    toMiddleware: \"retryMiddleware\",\n};\nexport const getHttpSigningPlugin = (config) => ({\n    applyToStack: (clientStack) => {\n        clientStack.addRelativeTo(httpSigningMiddleware(config), httpSigningMiddlewareOptions);\n    },\n});\n","export const normalizeProvider = (input) => {\n    if (typeof input === \"function\")\n        return input;\n    const promisified = Promise.resolve(input);\n    return () => promisified;\n};\n","export const isArrayBuffer = (arg) => (typeof ArrayBuffer === \"function\" && arg instanceof ArrayBuffer) ||\n    Object.prototype.toString.call(arg) === \"[object ArrayBuffer]\";\n","import { isArrayBuffer } from \"@smithy/is-array-buffer\";\nimport { Buffer } from \"buffer\";\nexport const fromArrayBuffer = (input, offset = 0, length = input.byteLength - offset) => {\n    if (!isArrayBuffer(input)) {\n        throw new TypeError(`The \"input\" argument must be ArrayBuffer. Received type ${typeof input} (${input})`);\n    }\n    return Buffer.from(input, offset, length);\n};\nexport const fromString = (input, encoding) => {\n    if (typeof input !== \"string\") {\n        throw new TypeError(`The \"input\" argument must be of type string. Received type ${typeof input} (${input})`);\n    }\n    return encoding ? Buffer.from(input, encoding) : Buffer.from(input);\n};\n","import { fromString } from \"@smithy/util-buffer-from\";\nconst BASE64_REGEX = /^[A-Za-z0-9+/]*={0,2}$/;\nexport const fromBase64 = (input) => {\n    if ((input.length * 3) % 4 !== 0) {\n        throw new TypeError(`Incorrect padding on base64 string.`);\n    }\n    if (!BASE64_REGEX.exec(input)) {\n        throw new TypeError(`Invalid base64 string.`);\n    }\n    const buffer = fromString(input, \"base64\");\n    return new Uint8Array(buffer.buffer, buffer.byteOffset, buffer.byteLength);\n};\n","import { fromString } from \"@smithy/util-buffer-from\";\nexport const fromUtf8 = (input) => {\n    const buf = fromString(input, \"utf8\");\n    return new Uint8Array(buf.buffer, buf.byteOffset, buf.byteLength / Uint8Array.BYTES_PER_ELEMENT);\n};\n","import { fromUtf8 } from \"./fromUtf8\";\nexport const toUint8Array = (data) => {\n    if (typeof data === \"string\") {\n        return fromUtf8(data);\n    }\n    if (ArrayBuffer.isView(data)) {\n        return new Uint8Array(data.buffer, data.byteOffset, data.byteLength / Uint8Array.BYTES_PER_ELEMENT);\n    }\n    return new Uint8Array(data);\n};\n","import { fromArrayBuffer } from \"@smithy/util-buffer-from\";\nexport const toUtf8 = (input) => {\n    if (typeof input === \"string\") {\n        return input;\n    }\n    if (typeof input !== \"object\" || typeof input.byteOffset !== \"number\" || typeof input.byteLength !== \"number\") {\n        throw new Error(\"@smithy/util-utf8: toUtf8 encoder function only accepts string | Uint8Array.\");\n    }\n    return fromArrayBuffer(input.buffer, input.byteOffset, input.byteLength).toString(\"utf8\");\n};\n","import { fromArrayBuffer } from \"@smithy/util-buffer-from\";\nimport { fromUtf8 } from \"@smithy/util-utf8\";\nexport const toBase64 = (_input) => {\n    let input;\n    if (typeof _input === \"string\") {\n        input = fromUtf8(_input);\n    }\n    else {\n        input = _input;\n    }\n    if (typeof input !== \"object\" || typeof input.byteOffset !== \"number\" || typeof input.byteLength !== \"number\") {\n        throw new Error(\"@smithy/util-base64: toBase64 encoder function only accepts string | Uint8Array.\");\n    }\n    return fromArrayBuffer(input.buffer, input.byteOffset, input.byteLength).toString(\"base64\");\n};\n","import { transformFromString, transformToString } from \"./transforms\";\nexport class Uint8ArrayBlobAdapter extends Uint8Array {\n    static fromString(source, encoding = \"utf-8\") {\n        switch (typeof source) {\n            case \"string\":\n                return transformFromString(source, encoding);\n            default:\n                throw new Error(`Unsupported conversion from ${typeof source} to Uint8ArrayBlobAdapter.`);\n        }\n    }\n    static mutate(source) {\n        Object.setPrototypeOf(source, Uint8ArrayBlobAdapter.prototype);\n        return source;\n    }\n    transformToString(encoding = \"utf-8\") {\n        return transformToString(this, encoding);\n    }\n}\n","import { fromBase64, toBase64 } from \"@smithy/util-base64\";\nimport { fromUtf8, toUtf8 } from \"@smithy/util-utf8\";\nimport { Uint8ArrayBlobAdapter } from \"./Uint8ArrayBlobAdapter\";\nexport function transformToString(payload, encoding = \"utf-8\") {\n    if (encoding === \"base64\") {\n        return toBase64(payload);\n    }\n    return toUtf8(payload);\n}\nexport function transformFromString(str, encoding) {\n    if (encoding === \"base64\") {\n        return Uint8ArrayBlobAdapter.mutate(fromBase64(str));\n    }\n    return Uint8ArrayBlobAdapter.mutate(fromUtf8(str));\n}\n","import { Readable } from \"stream\";\nexport const getAwsChunkedEncodingStream = (readableStream, options) => {\n    const { base64Encoder, bodyLengthChecker, checksumAlgorithmFn, checksumLocationName, streamHasher } = options;\n    const checksumRequired = base64Encoder !== undefined &&\n        checksumAlgorithmFn !== undefined &&\n        checksumLocationName !== undefined &&\n        streamHasher !== undefined;\n    const digest = checksumRequired ? streamHasher(checksumAlgorithmFn, readableStream) : undefined;\n    const awsChunkedEncodingStream = new Readable({ read: () => { } });\n    readableStream.on(\"data\", (data) => {\n        const length = bodyLengthChecker(data) || 0;\n        awsChunkedEncodingStream.push(`${length.toString(16)}\\r\\n`);\n        awsChunkedEncodingStream.push(data);\n        awsChunkedEncodingStream.push(\"\\r\\n\");\n    });\n    readableStream.on(\"end\", async () => {\n        awsChunkedEncodingStream.push(`0\\r\\n`);\n        if (checksumRequired) {\n            const checksum = base64Encoder(await digest);\n            awsChunkedEncodingStream.push(`${checksumLocationName}:${checksum}\\r\\n`);\n            awsChunkedEncodingStream.push(`\\r\\n`);\n        }\n        awsChunkedEncodingStream.push(null);\n    });\n    return awsChunkedEncodingStream;\n};\n","export const escapeUri = (uri) => encodeURIComponent(uri).replace(/[!'()*]/g, hexEncode);\nconst hexEncode = (c) => `%${c.charCodeAt(0).toString(16).toUpperCase()}`;\n","export const NODEJS_TIMEOUT_ERROR_CODES = [\"ECONNRESET\", \"EPIPE\", \"ETIMEDOUT\"];\n","const getTransformedHeaders = (headers) => {\n    const transformedHeaders = {};\n    for (const name of Object.keys(headers)) {\n        const headerValues = headers[name];\n        transformedHeaders[name] = Array.isArray(headerValues) ? headerValues.join(\",\") : headerValues;\n    }\n    return transformedHeaders;\n};\nexport { getTransformedHeaders };\n","export const timing = {\n    setTimeout: (cb, ms) => setTimeout(cb, ms),\n    clearTimeout: (timeoutId) => clearTimeout(timeoutId),\n};\n","import { Readable } from \"stream\";\nimport { timing } from \"./timing\";\nconst MIN_WAIT_TIME = 6000;\nexport async function writeRequestBody(httpRequest, request, maxContinueTimeoutMs = MIN_WAIT_TIME) {\n    const headers = request.headers ?? {};\n    const expect = headers[\"Expect\"] || headers[\"expect\"];\n    let timeoutId = -1;\n    let sendBody = true;\n    if (expect === \"100-continue\") {\n        sendBody = await Promise.race([\n            new Promise((resolve) => {\n                timeoutId = Number(timing.setTimeout(() => resolve(true), Math.max(MIN_WAIT_TIME, maxContinueTimeoutMs)));\n            }),\n            new Promise((resolve) => {\n                httpRequest.on(\"continue\", () => {\n                    timing.clearTimeout(timeoutId);\n                    resolve(true);\n                });\n                httpRequest.on(\"response\", () => {\n                    timing.clearTimeout(timeoutId);\n                    resolve(false);\n                });\n                httpRequest.on(\"error\", () => {\n                    timing.clearTimeout(timeoutId);\n                    resolve(false);\n                });\n            }),\n        ]);\n    }\n    if (sendBody) {\n        writeBody(httpRequest, request.body);\n    }\n}\nfunction writeBody(httpRequest, body) {\n    if (body instanceof Readable) {\n        body.pipe(httpRequest);\n        return;\n    }\n    if (body) {\n        if (Buffer.isBuffer(body) || typeof body === \"string\") {\n            httpRequest.end(body);\n            return;\n        }\n        const uint8 = body;\n        if (typeof uint8 === \"object\" &&\n            uint8.buffer &&\n            typeof uint8.byteOffset === \"number\" &&\n            typeof uint8.byteLength === \"number\") {\n            httpRequest.end(Buffer.from(uint8.buffer, uint8.byteOffset, uint8.byteLength));\n            return;\n        }\n        httpRequest.end(Buffer.from(body));\n        return;\n    }\n    httpRequest.end();\n}\n","import { HttpResponse } from \"@smithy/protocol-http\";\nimport { buildQueryString } from \"@smithy/querystring-builder\";\nimport { Agent as hAgent, request as hRequest } from \"http\";\nimport { Agent as hsAgent, request as hsRequest } from \"https\";\nimport { NODEJS_TIMEOUT_ERROR_CODES } from \"./constants\";\nimport { getTransformedHeaders } from \"./get-transformed-headers\";\nimport { setConnectionTimeout } from \"./set-connection-timeout\";\nimport { setSocketKeepAlive } from \"./set-socket-keep-alive\";\nimport { setSocketTimeout } from \"./set-socket-timeout\";\nimport { timing } from \"./timing\";\nimport { writeRequestBody } from \"./write-request-body\";\nexport const DEFAULT_REQUEST_TIMEOUT = 0;\nexport class NodeHttpHandler {\n    static create(instanceOrOptions) {\n        if (typeof instanceOrOptions?.handle === \"function\") {\n            return instanceOrOptions;\n        }\n        return new NodeHttpHandler(instanceOrOptions);\n    }\n    static checkSocketUsage(agent, socketWarningTimestamp, logger = console) {\n        const { sockets, requests, maxSockets } = agent;\n        if (typeof maxSockets !== \"number\" || maxSockets === Infinity) {\n            return socketWarningTimestamp;\n        }\n        const interval = 15000;\n        if (Date.now() - interval < socketWarningTimestamp) {\n            return socketWarningTimestamp;\n        }\n        if (sockets && requests) {\n            for (const origin in sockets) {\n                const socketsInUse = sockets[origin]?.length ?? 0;\n                const requestsEnqueued = requests[origin]?.length ?? 0;\n                if (socketsInUse >= maxSockets && requestsEnqueued >= 2 * maxSockets) {\n                    logger?.warn?.(`@smithy/node-http-handler:WARN - socket usage at capacity=${socketsInUse} and ${requestsEnqueued} additional requests are enqueued.\nSee https://docs.aws.amazon.com/sdk-for-javascript/v3/developer-guide/node-configuring-maxsockets.html\nor increase socketAcquisitionWarningTimeout=(millis) in the NodeHttpHandler config.`);\n                    return Date.now();\n                }\n            }\n        }\n        return socketWarningTimestamp;\n    }\n    constructor(options) {\n        this.socketWarningTimestamp = 0;\n        this.metadata = { handlerProtocol: \"http/1.1\" };\n        this.configProvider = new Promise((resolve, reject) => {\n            if (typeof options === \"function\") {\n                options()\n                    .then((_options) => {\n                    resolve(this.resolveDefaultConfig(_options));\n                })\n                    .catch(reject);\n            }\n            else {\n                resolve(this.resolveDefaultConfig(options));\n            }\n        });\n    }\n    resolveDefaultConfig(options) {\n        const { requestTimeout, connectionTimeout, socketTimeout, httpAgent, httpsAgent } = options || {};\n        const keepAlive = true;\n        const maxSockets = 50;\n        return {\n            connectionTimeout,\n            requestTimeout: requestTimeout ?? socketTimeout,\n            httpAgent: (() => {\n                if (httpAgent instanceof hAgent || typeof httpAgent?.destroy === \"function\") {\n                    return httpAgent;\n                }\n                return new hAgent({ keepAlive, maxSockets, ...httpAgent });\n            })(),\n            httpsAgent: (() => {\n                if (httpsAgent instanceof hsAgent || typeof httpsAgent?.destroy === \"function\") {\n                    return httpsAgent;\n                }\n                return new hsAgent({ keepAlive, maxSockets, ...httpsAgent });\n            })(),\n            logger: console,\n        };\n    }\n    destroy() {\n        this.config?.httpAgent?.destroy();\n        this.config?.httpsAgent?.destroy();\n    }\n    async handle(request, { abortSignal } = {}) {\n        if (!this.config) {\n            this.config = await this.configProvider;\n        }\n        return new Promise((_resolve, _reject) => {\n            let writeRequestBodyPromise = undefined;\n            const timeouts = [];\n            const resolve = async (arg) => {\n                await writeRequestBodyPromise;\n                timeouts.forEach(timing.clearTimeout);\n                _resolve(arg);\n            };\n            const reject = async (arg) => {\n                await writeRequestBodyPromise;\n                timeouts.forEach(timing.clearTimeout);\n                _reject(arg);\n            };\n            if (!this.config) {\n                throw new Error(\"Node HTTP request handler config is not resolved\");\n            }\n            if (abortSignal?.aborted) {\n                const abortError = new Error(\"Request aborted\");\n                abortError.name = \"AbortError\";\n                reject(abortError);\n                return;\n            }\n            const isSSL = request.protocol === \"https:\";\n            const agent = isSSL ? this.config.httpsAgent : this.config.httpAgent;\n            timeouts.push(timing.setTimeout(() => {\n                this.socketWarningTimestamp = NodeHttpHandler.checkSocketUsage(agent, this.socketWarningTimestamp, this.config.logger);\n            }, this.config.socketAcquisitionWarningTimeout ??\n                (this.config.requestTimeout ?? 2000) + (this.config.connectionTimeout ?? 1000)));\n            const queryString = buildQueryString(request.query || {});\n            let auth = undefined;\n            if (request.username != null || request.password != null) {\n                const username = request.username ?? \"\";\n                const password = request.password ?? \"\";\n                auth = `${username}:${password}`;\n            }\n            let path = request.path;\n            if (queryString) {\n                path += `?${queryString}`;\n            }\n            if (request.fragment) {\n                path += `#${request.fragment}`;\n            }\n            let hostname = request.hostname ?? \"\";\n            if (hostname[0] === \"[\" && hostname.endsWith(\"]\")) {\n                hostname = request.hostname.slice(1, -1);\n            }\n            else {\n                hostname = request.hostname;\n            }\n            const nodeHttpsOptions = {\n                headers: request.headers,\n                host: hostname,\n                method: request.method,\n                path,\n                port: request.port,\n                agent,\n                auth,\n            };\n            const requestFunc = isSSL ? hsRequest : hRequest;\n            const req = requestFunc(nodeHttpsOptions, (res) => {\n                const httpResponse = new HttpResponse({\n                    statusCode: res.statusCode || -1,\n                    reason: res.statusMessage,\n                    headers: getTransformedHeaders(res.headers),\n                    body: res,\n                });\n                resolve({ response: httpResponse });\n            });\n            req.on(\"error\", (err) => {\n                if (NODEJS_TIMEOUT_ERROR_CODES.includes(err.code)) {\n                    reject(Object.assign(err, { name: \"TimeoutError\" }));\n                }\n                else {\n                    reject(err);\n                }\n            });\n            if (abortSignal) {\n                const onAbort = () => {\n                    req.destroy();\n                    const abortError = new Error(\"Request aborted\");\n                    abortError.name = \"AbortError\";\n                    reject(abortError);\n                };\n                if (typeof abortSignal.addEventListener === \"function\") {\n                    const signal = abortSignal;\n                    signal.addEventListener(\"abort\", onAbort, { once: true });\n                    req.once(\"close\", () => signal.removeEventListener(\"abort\", onAbort));\n                }\n                else {\n                    abortSignal.onabort = onAbort;\n                }\n            }\n            timeouts.push(setConnectionTimeout(req, reject, this.config.connectionTimeout));\n            timeouts.push(setSocketTimeout(req, reject, this.config.requestTimeout));\n            const httpAgent = nodeHttpsOptions.agent;\n            if (typeof httpAgent === \"object\" && \"keepAlive\" in httpAgent) {\n                timeouts.push(setSocketKeepAlive(req, {\n                    keepAlive: httpAgent.keepAlive,\n                    keepAliveMsecs: httpAgent.keepAliveMsecs,\n                }));\n            }\n            writeRequestBodyPromise = writeRequestBody(req, request, this.config.requestTimeout).catch((e) => {\n                timeouts.forEach(timing.clearTimeout);\n                return _reject(e);\n            });\n        });\n    }\n    updateHttpClientConfig(key, value) {\n        this.config = undefined;\n        this.configProvider = this.configProvider.then((config) => {\n            return {\n                ...config,\n                [key]: value,\n            };\n        });\n    }\n    httpHandlerConfigs() {\n        return this.config ?? {};\n    }\n}\n","import { escapeUri } from \"@smithy/util-uri-escape\";\nexport function buildQueryString(query) {\n    const parts = [];\n    for (let key of Object.keys(query).sort()) {\n        const value = query[key];\n        key = escapeUri(key);\n        if (Array.isArray(value)) {\n            for (let i = 0, iLen = value.length; i < iLen; i++) {\n                parts.push(`${key}=${escapeUri(value[i])}`);\n            }\n        }\n        else {\n            let qsEntry = key;\n            if (value || typeof value === \"string\") {\n                qsEntry += `=${escapeUri(value)}`;\n            }\n            parts.push(qsEntry);\n        }\n    }\n    return parts.join(\"&\");\n}\n","import { timing } from \"./timing\";\nconst DEFER_EVENT_LISTENER_TIME = 1000;\nexport const setConnectionTimeout = (request, reject, timeoutInMs = 0) => {\n    if (!timeoutInMs) {\n        return -1;\n    }\n    const registerTimeout = (offset) => {\n        const timeoutId = timing.setTimeout(() => {\n            request.destroy();\n            reject(Object.assign(new Error(`Socket timed out without establishing a connection within ${timeoutInMs} ms`), {\n                name: \"TimeoutError\",\n            }));\n        }, timeoutInMs - offset);\n        const doWithSocket = (socket) => {\n            if (socket?.connecting) {\n                socket.on(\"connect\", () => {\n                    timing.clearTimeout(timeoutId);\n                });\n            }\n            else {\n                timing.clearTimeout(timeoutId);\n            }\n        };\n        if (request.socket) {\n            doWithSocket(request.socket);\n        }\n        else {\n            request.on(\"socket\", doWithSocket);\n        }\n    };\n    if (timeoutInMs < 2000) {\n        registerTimeout(0);\n        return 0;\n    }\n    return timing.setTimeout(registerTimeout.bind(null, DEFER_EVENT_LISTENER_TIME), DEFER_EVENT_LISTENER_TIME);\n};\n","import { DEFAULT_REQUEST_TIMEOUT } from \"./node-http-handler\";\nimport { timing } from \"./timing\";\nconst DEFER_EVENT_LISTENER_TIME = 3000;\nexport const setSocketTimeout = (request, reject, timeoutInMs = DEFAULT_REQUEST_TIMEOUT) => {\n    const registerTimeout = (offset) => {\n        const timeout = timeoutInMs - offset;\n        const onTimeout = () => {\n            request.destroy();\n            reject(Object.assign(new Error(`Connection timed out after ${timeoutInMs} ms`), { name: \"TimeoutError\" }));\n        };\n        if (request.socket) {\n            request.socket.setTimeout(timeout, onTimeout);\n        }\n        else {\n            request.setTimeout(timeout, onTimeout);\n        }\n    };\n    if (0 < timeoutInMs && timeoutInMs < 6000) {\n        registerTimeout(0);\n        return 0;\n    }\n    return timing.setTimeout(registerTimeout.bind(null, timeoutInMs === 0 ? 0 : DEFER_EVENT_LISTENER_TIME), DEFER_EVENT_LISTENER_TIME);\n};\n","import { timing } from \"./timing\";\nconst DEFER_EVENT_LISTENER_TIME = 3000;\nexport const setSocketKeepAlive = (request, { keepAlive, keepAliveMsecs }, deferTimeMs = DEFER_EVENT_LISTENER_TIME) => {\n    if (keepAlive !== true) {\n        return -1;\n    }\n    const registerListener = () => {\n        if (request.socket) {\n            request.socket.setKeepAlive(keepAlive, keepAliveMsecs || 0);\n        }\n        else {\n            request.on(\"socket\", (socket) => {\n                socket.setKeepAlive(keepAlive, keepAliveMsecs || 0);\n            });\n        }\n    };\n    if (deferTimeMs === 0) {\n        registerListener();\n        return 0;\n    }\n    return timing.setTimeout(registerListener, deferTimeMs);\n};\n","import { Writable } from \"stream\";\nexport class Collector extends Writable {\n    constructor() {\n        super(...arguments);\n        this.bufferedBytes = [];\n    }\n    _write(chunk, encoding, callback) {\n        this.bufferedBytes.push(chunk);\n        callback();\n    }\n}\n","import { Collector } from \"./collector\";\nexport const streamCollector = (stream) => {\n    if (isReadableStreamInstance(stream)) {\n        return collectReadableStream(stream);\n    }\n    return new Promise((resolve, reject) => {\n        const collector = new Collector();\n        stream.pipe(collector);\n        stream.on(\"error\", (err) => {\n            collector.end();\n            reject(err);\n        });\n        collector.on(\"error\", reject);\n        collector.on(\"finish\", function () {\n            const bytes = new Uint8Array(Buffer.concat(this.bufferedBytes));\n            resolve(bytes);\n        });\n    });\n};\nconst isReadableStreamInstance = (stream) => typeof ReadableStream === \"function\" && stream instanceof ReadableStream;\nasync function collectReadableStream(stream) {\n    const chunks = [];\n    const reader = stream.getReader();\n    let isDone = false;\n    let length = 0;\n    while (!isDone) {\n        const { done, value } = await reader.read();\n        if (value) {\n            chunks.push(value);\n            length += value.length;\n        }\n        isDone = done;\n    }\n    const collected = new Uint8Array(length);\n    let offset = 0;\n    for (const chunk of chunks) {\n        collected.set(chunk, offset);\n        offset += chunk.length;\n    }\n    return collected;\n}\n","import { fromBase64 } from \"@smithy/util-base64\";\nexport const streamCollector = async (stream) => {\n    if ((typeof Blob === \"function\" && stream instanceof Blob) || stream.constructor?.name === \"Blob\") {\n        if (Blob.prototype.arrayBuffer !== undefined) {\n            return new Uint8Array(await stream.arrayBuffer());\n        }\n        return collectBlob(stream);\n    }\n    return collectStream(stream);\n};\nasync function collectBlob(blob) {\n    const base64 = await readToBase64(blob);\n    const arrayBuffer = fromBase64(base64);\n    return new Uint8Array(arrayBuffer);\n}\nasync function collectStream(stream) {\n    const chunks = [];\n    const reader = stream.getReader();\n    let isDone = false;\n    let length = 0;\n    while (!isDone) {\n        const { done, value } = await reader.read();\n        if (value) {\n            chunks.push(value);\n            length += value.length;\n        }\n        isDone = done;\n    }\n    const collected = new Uint8Array(length);\n    let offset = 0;\n    for (const chunk of chunks) {\n        collected.set(chunk, offset);\n        offset += chunk.length;\n    }\n    return collected;\n}\nfunction readToBase64(blob) {\n    return new Promise((resolve, reject) => {\n        const reader = new FileReader();\n        reader.onloadend = () => {\n            if (reader.readyState !== 2) {\n                return reject(new Error(\"Reader aborted too early\"));\n            }\n            const result = (reader.result ?? \"\");\n            const commaIndex = result.indexOf(\",\");\n            const dataOffset = commaIndex > -1 ? commaIndex + 1 : result.length;\n            resolve(result.substring(dataOffset));\n        };\n        reader.onabort = () => reject(new Error(\"Read aborted\"));\n        reader.onerror = () => reject(reader.error);\n        reader.readAsDataURL(blob);\n    });\n}\n","const SHORT_TO_HEX = {};\nconst HEX_TO_SHORT = {};\nfor (let i = 0; i < 256; i++) {\n    let encodedByte = i.toString(16).toLowerCase();\n    if (encodedByte.length === 1) {\n        encodedByte = `0${encodedByte}`;\n    }\n    SHORT_TO_HEX[i] = encodedByte;\n    HEX_TO_SHORT[encodedByte] = i;\n}\nexport function fromHex(encoded) {\n    if (encoded.length % 2 !== 0) {\n        throw new Error(\"Hex encoded strings must have an even number length\");\n    }\n    const out = new Uint8Array(encoded.length / 2);\n    for (let i = 0; i < encoded.length; i += 2) {\n        const encodedByte = encoded.slice(i, i + 2).toLowerCase();\n        if (encodedByte in HEX_TO_SHORT) {\n            out[i / 2] = HEX_TO_SHORT[encodedByte];\n        }\n        else {\n            throw new Error(`Cannot decode unrecognized sequence ${encodedByte} as hexadecimal`);\n        }\n    }\n    return out;\n}\nexport function toHex(bytes) {\n    let out = \"\";\n    for (let i = 0; i < bytes.byteLength; i++) {\n        out += SHORT_TO_HEX[bytes[i]];\n    }\n    return out;\n}\n","export const isReadableStream = (stream) => typeof ReadableStream === \"function\" &&\n    (stream?.constructor?.name === ReadableStream.name || stream instanceof ReadableStream);\nexport const isBlob = (blob) => {\n    return typeof Blob === \"function\" && (blob?.constructor?.name === Blob.name || blob instanceof Blob);\n};\n","import { streamCollector } from \"@smithy/fetch-http-handler\";\nimport { toBase64 } from \"@smithy/util-base64\";\nimport { toHex } from \"@smithy/util-hex-encoding\";\nimport { toUtf8 } from \"@smithy/util-utf8\";\nimport { isReadableStream } from \"./stream-type-check\";\nconst ERR_MSG_STREAM_HAS_BEEN_TRANSFORMED = \"The stream has already been transformed.\";\nexport const sdkStreamMixin = (stream) => {\n    if (!isBlobInstance(stream) && !isReadableStream(stream)) {\n        const name = stream?.__proto__?.constructor?.name || stream;\n        throw new Error(`Unexpected stream implementation, expect Blob or ReadableStream, got ${name}`);\n    }\n    let transformed = false;\n    const transformToByteArray = async () => {\n        if (transformed) {\n            throw new Error(ERR_MSG_STREAM_HAS_BEEN_TRANSFORMED);\n        }\n        transformed = true;\n        return await streamCollector(stream);\n    };\n    const blobToWebStream = (blob) => {\n        if (typeof blob.stream !== \"function\") {\n            throw new Error(\"Cannot transform payload Blob to web stream. Please make sure the Blob.stream() is polyfilled.\\n\" +\n                \"If you are using React Native, this API is not yet supported, see: https://react-native.canny.io/feature-requests/p/fetch-streaming-body\");\n        }\n        return blob.stream();\n    };\n    return Object.assign(stream, {\n        transformToByteArray: transformToByteArray,\n        transformToString: async (encoding) => {\n            const buf = await transformToByteArray();\n            if (encoding === \"base64\") {\n                return toBase64(buf);\n            }\n            else if (encoding === \"hex\") {\n                return toHex(buf);\n            }\n            else if (encoding === undefined || encoding === \"utf8\" || encoding === \"utf-8\") {\n                return toUtf8(buf);\n            }\n            else if (typeof TextDecoder === \"function\") {\n                return new TextDecoder(encoding).decode(buf);\n            }\n            else {\n                throw new Error(\"TextDecoder is not available, please make sure polyfill is provided.\");\n            }\n        },\n        transformToWebStream: () => {\n            if (transformed) {\n                throw new Error(ERR_MSG_STREAM_HAS_BEEN_TRANSFORMED);\n            }\n            transformed = true;\n            if (isBlobInstance(stream)) {\n                return blobToWebStream(stream);\n            }\n            else if (isReadableStream(stream)) {\n                return stream;\n            }\n            else {\n                throw new Error(`Cannot transform payload to web stream, got ${stream}`);\n            }\n        },\n    });\n};\nconst isBlobInstance = (stream) => typeof Blob === \"function\" && stream instanceof Blob;\n","import { streamCollector } from \"@smithy/node-http-handler\";\nimport { fromArrayBuffer } from \"@smithy/util-buffer-from\";\nimport { Readable } from \"stream\";\nimport { sdkStreamMixin as sdkStreamMixinReadableStream } from \"./sdk-stream-mixin.browser\";\nconst ERR_MSG_STREAM_HAS_BEEN_TRANSFORMED = \"The stream has already been transformed.\";\nexport const sdkStreamMixin = (stream) => {\n    if (!(stream instanceof Readable)) {\n        try {\n            return sdkStreamMixinReadableStream(stream);\n        }\n        catch (e) {\n            const name = stream?.__proto__?.constructor?.name || stream;\n            throw new Error(`Unexpected stream implementation, expect Stream.Readable instance, got ${name}`);\n        }\n    }\n    let transformed = false;\n    const transformToByteArray = async () => {\n        if (transformed) {\n            throw new Error(ERR_MSG_STREAM_HAS_BEEN_TRANSFORMED);\n        }\n        transformed = true;\n        return await streamCollector(stream);\n    };\n    return Object.assign(stream, {\n        transformToByteArray,\n        transformToString: async (encoding) => {\n            const buf = await transformToByteArray();\n            if (encoding === undefined || Buffer.isEncoding(encoding)) {\n                return fromArrayBuffer(buf.buffer, buf.byteOffset, buf.byteLength).toString(encoding);\n            }\n            else {\n                const decoder = new TextDecoder(encoding);\n                return decoder.decode(buf);\n            }\n        },\n        transformToWebStream: () => {\n            if (transformed) {\n                throw new Error(ERR_MSG_STREAM_HAS_BEEN_TRANSFORMED);\n            }\n            if (stream.readableFlowing !== null) {\n                throw new Error(\"The stream has been consumed by other callbacks.\");\n            }\n            if (typeof Readable.toWeb !== \"function\") {\n                throw new Error(\"Readable.toWeb() is not supported. Please ensure a polyfill is available.\");\n            }\n            transformed = true;\n            return Readable.toWeb(stream);\n        },\n    });\n};\n","import { PassThrough } from \"stream\";\nimport { splitStream as splitWebStream } from \"./splitStream.browser\";\nimport { isBlob, isReadableStream } from \"./stream-type-check\";\nexport async function splitStream(stream) {\n    if (isReadableStream(stream) || isBlob(stream)) {\n        return splitWebStream(stream);\n    }\n    const stream1 = new PassThrough();\n    const stream2 = new PassThrough();\n    stream.pipe(stream1);\n    stream.pipe(stream2);\n    return [stream1, stream2];\n}\n","export async function splitStream(stream) {\n    if (typeof stream.stream === \"function\") {\n        stream = stream.stream();\n    }\n    const readableStream = stream;\n    return readableStream.tee();\n}\n","import { Writable } from \"stream\";\nimport { headStream as headWebStream } from \"./headStream.browser\";\nimport { isReadableStream } from \"./stream-type-check\";\nexport const headStream = (stream, bytes) => {\n    if (isReadableStream(stream)) {\n        return headWebStream(stream, bytes);\n    }\n    return new Promise((resolve, reject) => {\n        const collector = new Collector();\n        collector.limit = bytes;\n        stream.pipe(collector);\n        stream.on(\"error\", (err) => {\n            collector.end();\n            reject(err);\n        });\n        collector.on(\"error\", reject);\n        collector.on(\"finish\", function () {\n            const bytes = new Uint8Array(Buffer.concat(this.buffers));\n            resolve(bytes);\n        });\n    });\n};\nclass Collector extends Writable {\n    constructor() {\n        super(...arguments);\n        this.buffers = [];\n        this.limit = Infinity;\n        this.bytesBuffered = 0;\n    }\n    _write(chunk, encoding, callback) {\n        this.buffers.push(chunk);\n        this.bytesBuffered += chunk.byteLength ?? 0;\n        if (this.bytesBuffered >= this.limit) {\n            const excess = this.bytesBuffered - this.limit;\n            const tailBuffer = this.buffers[this.buffers.length - 1];\n            this.buffers[this.buffers.length - 1] = tailBuffer.subarray(0, tailBuffer.byteLength - excess);\n            this.emit(\"finish\");\n        }\n        callback();\n    }\n}\n","export async function headStream(stream, bytes) {\n    let byteLengthCounter = 0;\n    const chunks = [];\n    const reader = stream.getReader();\n    let isDone = false;\n    while (!isDone) {\n        const { done, value } = await reader.read();\n        if (value) {\n            chunks.push(value);\n            byteLengthCounter += value?.byteLength ?? 0;\n        }\n        if (byteLengthCounter >= bytes) {\n            break;\n        }\n        isDone = done;\n    }\n    reader.releaseLock();\n    const collected = new Uint8Array(Math.min(bytes, byteLengthCounter));\n    let offset = 0;\n    for (const chunk of chunks) {\n        if (chunk.byteLength > collected.byteLength - offset) {\n            collected.set(chunk.subarray(0, collected.byteLength - offset), offset);\n            break;\n        }\n        else {\n            collected.set(chunk, offset);\n        }\n        offset += chunk.length;\n    }\n    return collected;\n}\n","import { toBase64 } from \"@smithy/util-base64\";\nimport { Duplex } from \"stream\";\nexport class ChecksumStream extends Duplex {\n    constructor({ expectedChecksum, checksum, source, checksumSourceLocation, base64Encoder, }) {\n        super();\n        if (typeof source.pipe === \"function\") {\n            this.source = source;\n        }\n        else {\n            throw new Error(`@smithy/util-stream: unsupported source type ${source?.constructor?.name ?? source} in ChecksumStream.`);\n        }\n        this.base64Encoder = base64Encoder ?? toBase64;\n        this.expectedChecksum = expectedChecksum;\n        this.checksum = checksum;\n        this.checksumSourceLocation = checksumSourceLocation;\n        this.source.pipe(this);\n    }\n    _read(size) { }\n    _write(chunk, encoding, callback) {\n        try {\n            this.checksum.update(chunk);\n            this.push(chunk);\n        }\n        catch (e) {\n            return callback(e);\n        }\n        return callback();\n    }\n    async _final(callback) {\n        try {\n            const digest = await this.checksum.digest();\n            const received = this.base64Encoder(digest);\n            if (this.expectedChecksum !== received) {\n                return callback(new Error(`Checksum mismatch: expected \"${this.expectedChecksum}\" but received \"${received}\"` +\n                    ` in response header \"${this.checksumSourceLocation}\".`));\n            }\n        }\n        catch (e) {\n            return callback(e);\n        }\n        this.push(null);\n        return callback();\n    }\n}\n","const ReadableStreamRef = typeof ReadableStream === \"function\" ? ReadableStream : function () { };\nexport class ChecksumStream extends ReadableStreamRef {\n}\n","import { isReadableStream } from \"../stream-type-check\";\nimport { ChecksumStream } from \"./ChecksumStream\";\nimport { createChecksumStream as createChecksumStreamWeb } from \"./createChecksumStream.browser\";\nexport function createChecksumStream(init) {\n    if (typeof ReadableStream === \"function\" && isReadableStream(init.source)) {\n        return createChecksumStreamWeb(init);\n    }\n    return new ChecksumStream(init);\n}\n","import { toBase64 } from \"@smithy/util-base64\";\nimport { isReadableStream } from \"../stream-type-check\";\nimport { ChecksumStream } from \"./ChecksumStream.browser\";\nexport const createChecksumStream = ({ expectedChecksum, checksum, source, checksumSourceLocation, base64Encoder, }) => {\n    if (!isReadableStream(source)) {\n        throw new Error(`@smithy/util-stream: unsupported source type ${source?.constructor?.name ?? source} in ChecksumStream.`);\n    }\n    const encoder = base64Encoder ?? toBase64;\n    if (typeof TransformStream !== \"function\") {\n        throw new Error(\"@smithy/util-stream: unable to instantiate ChecksumStream because API unavailable: ReadableStream/TransformStream.\");\n    }\n    const transform = new TransformStream({\n        start() { },\n        async transform(chunk, controller) {\n            checksum.update(chunk);\n            controller.enqueue(chunk);\n        },\n        async flush(controller) {\n            const digest = await checksum.digest();\n            const received = encoder(digest);\n            if (expectedChecksum !== received) {\n                const error = new Error(`Checksum mismatch: expected \"${expectedChecksum}\" but received \"${received}\"` +\n                    ` in response header \"${checksumSourceLocation}\".`);\n                controller.error(error);\n            }\n            else {\n                controller.terminate();\n            }\n        },\n    });\n    source.pipeThrough(transform);\n    const readable = transform.readable;\n    Object.setPrototypeOf(readable, ChecksumStream.prototype);\n    return readable;\n};\n","import { Uint8ArrayBlobAdapter } from \"@smithy/util-stream\";\nexport const collectBody = async (streamBody = new Uint8Array(), context) => {\n    if (streamBody instanceof Uint8Array) {\n        return Uint8ArrayBlobAdapter.mutate(streamBody);\n    }\n    if (!streamBody) {\n        return Uint8ArrayBlobAdapter.mutate(new Uint8Array());\n    }\n    const fromContext = context.streamCollector(streamBody);\n    return Uint8ArrayBlobAdapter.mutate(await fromContext);\n};\n","export function extendedEncodeURIComponent(str) {\n    return encodeURIComponent(str).replace(/[!'()*]/g, function (c) {\n        return \"%\" + c.charCodeAt(0).toString(16).toUpperCase();\n    });\n}\n","import { HttpRequest } from \"@smithy/protocol-http\";\nimport { resolvedPath } from \"./resolve-path\";\nexport function requestBuilder(input, context) {\n    return new RequestBuilder(input, context);\n}\nexport class RequestBuilder {\n    constructor(input, context) {\n        this.input = input;\n        this.context = context;\n        this.query = {};\n        this.method = \"\";\n        this.headers = {};\n        this.path = \"\";\n        this.body = null;\n        this.hostname = \"\";\n        this.resolvePathStack = [];\n    }\n    async build() {\n        const { hostname, protocol = \"https\", port, path: basePath } = await this.context.endpoint();\n        this.path = basePath;\n        for (const resolvePath of this.resolvePathStack) {\n            resolvePath(this.path);\n        }\n        return new HttpRequest({\n            protocol,\n            hostname: this.hostname || hostname,\n            port,\n            method: this.method,\n            path: this.path,\n            query: this.query,\n            body: this.body,\n            headers: this.headers,\n        });\n    }\n    hn(hostname) {\n        this.hostname = hostname;\n        return this;\n    }\n    bp(uriLabel) {\n        this.resolvePathStack.push((basePath) => {\n            this.path = `${basePath?.endsWith(\"/\") ? basePath.slice(0, -1) : basePath || \"\"}` + uriLabel;\n        });\n        return this;\n    }\n    p(memberName, labelValueProvider, uriLabel, isGreedyLabel) {\n        this.resolvePathStack.push((path) => {\n            this.path = resolvedPath(path, this.input, memberName, labelValueProvider, uriLabel, isGreedyLabel);\n        });\n        return this;\n    }\n    h(headers) {\n        this.headers = headers;\n        return this;\n    }\n    q(query) {\n        this.query = query;\n        return this;\n    }\n    b(body) {\n        this.body = body;\n        return this;\n    }\n    m(method) {\n        this.method = method;\n        return this;\n    }\n}\n","import { extendedEncodeURIComponent } from \"./extended-encode-uri-component\";\nexport const resolvedPath = (resolvedPath, input, memberName, labelValueProvider, uriLabel, isGreedyLabel) => {\n    if (input != null && input[memberName] !== undefined) {\n        const labelValue = labelValueProvider();\n        if (labelValue.length <= 0) {\n            throw new Error(\"Empty value provided for input HTTP label: \" + memberName + \".\");\n        }\n        resolvedPath = resolvedPath.replace(uriLabel, isGreedyLabel\n            ? labelValue\n                .split(\"/\")\n                .map((segment) => extendedEncodeURIComponent(segment))\n                .join(\"/\")\n            : extendedEncodeURIComponent(labelValue));\n    }\n    else {\n        throw new Error(\"No value provided for input HTTP label: \" + memberName + \".\");\n    }\n    return resolvedPath;\n};\n","export class DefaultIdentityProviderConfig {\n    constructor(config) {\n        this.authSchemes = new Map();\n        for (const [key, value] of Object.entries(config)) {\n            if (value !== undefined) {\n                this.authSchemes.set(key, value);\n            }\n        }\n    }\n    getIdentityProvider(schemeId) {\n        return this.authSchemes.get(schemeId);\n    }\n}\n","export class NoAuthSigner {\n    async sign(httpRequest, identity, signingProperties) {\n        return httpRequest;\n    }\n}\n","export const createIsIdentityExpiredFunction = (expirationMs) => (identity) => doesIdentityRequireRefresh(identity) && identity.expiration.getTime() - Date.now() < expirationMs;\nexport const EXPIRATION_MS = 300000;\nexport const isIdentityExpired = createIsIdentityExpiredFunction(EXPIRATION_MS);\nexport const doesIdentityRequireRefresh = (identity) => identity.expiration !== undefined;\nexport const memoizeIdentityProvider = (provider, isExpired, requiresRefresh) => {\n    if (provider === undefined) {\n        return undefined;\n    }\n    const normalizedProvider = typeof provider !== \"function\" ? async () => Promise.resolve(provider) : provider;\n    let resolved;\n    let pending;\n    let hasResult;\n    let isConstant = false;\n    const coalesceProvider = async (options) => {\n        if (!pending) {\n            pending = normalizedProvider(options);\n        }\n        try {\n            resolved = await pending;\n            hasResult = true;\n            isConstant = false;\n        }\n        finally {\n            pending = undefined;\n        }\n        return resolved;\n    };\n    if (isExpired === undefined) {\n        return async (options) => {\n            if (!hasResult || options?.forceRefresh) {\n                resolved = await coalesceProvider(options);\n            }\n            return resolved;\n        };\n    }\n    return async (options) => {\n        if (!hasResult || options?.forceRefresh) {\n            resolved = await coalesceProvider(options);\n        }\n        if (isConstant) {\n            return resolved;\n        }\n        if (!requiresRefresh(resolved)) {\n            isConstant = true;\n            return resolved;\n        }\n        if (isExpired(resolved)) {\n            await coalesceProvider(options);\n            return resolved;\n        }\n        return resolved;\n    };\n};\n","export class ProviderError extends Error {\n    constructor(message, options = true) {\n        let logger;\n        let tryNextLink = true;\n        if (typeof options === \"boolean\") {\n            logger = undefined;\n            tryNextLink = options;\n        }\n        else if (options != null && typeof options === \"object\") {\n            logger = options.logger;\n            tryNextLink = options.tryNextLink ?? true;\n        }\n        super(message);\n        this.name = \"ProviderError\";\n        this.tryNextLink = tryNextLink;\n        Object.setPrototypeOf(this, ProviderError.prototype);\n        logger?.debug?.(`@smithy/property-provider ${tryNextLink ? \"->\" : \"(!)\"} ${message}`);\n    }\n    static from(error, options = true) {\n        return Object.assign(new this(error.message, options), error);\n    }\n}\n","import { ProviderError } from \"./ProviderError\";\nexport class CredentialsProviderError extends ProviderError {\n    constructor(message, options = true) {\n        super(message, options);\n        this.name = \"CredentialsProviderError\";\n        Object.setPrototypeOf(this, CredentialsProviderError.prototype);\n    }\n}\n","import { ProviderError } from \"./ProviderError\";\nexport class TokenProviderError extends ProviderError {\n    constructor(message, options = true) {\n        super(message, options);\n        this.name = \"TokenProviderError\";\n        Object.setPrototypeOf(this, TokenProviderError.prototype);\n    }\n}\n","import { ProviderError } from \"./ProviderError\";\nexport const chain = (...providers) => async () => {\n    if (providers.length === 0) {\n        throw new ProviderError(\"No providers in chain\");\n    }\n    let lastProviderError;\n    for (const provider of providers) {\n        try {\n            const credentials = await provider();\n            return credentials;\n        }\n        catch (err) {\n            lastProviderError = err;\n            if (err?.tryNextLink) {\n                continue;\n            }\n            throw err;\n        }\n    }\n    throw lastProviderError;\n};\n","export const memoize = (provider, isExpired, requiresRefresh) => {\n    let resolved;\n    let pending;\n    let hasResult;\n    let isConstant = false;\n    const coalesceProvider = async () => {\n        if (!pending) {\n            pending = provider();\n        }\n        try {\n            resolved = await pending;\n            hasResult = true;\n            isConstant = false;\n        }\n        finally {\n            pending = undefined;\n        }\n        return resolved;\n    };\n    if (isExpired === undefined) {\n        return async (options) => {\n            if (!hasResult || options?.forceRefresh) {\n                resolved = await coalesceProvider();\n            }\n            return resolved;\n        };\n    }\n    return async (options) => {\n        if (!hasResult || options?.forceRefresh) {\n            resolved = await coalesceProvider();\n        }\n        if (isConstant) {\n            return resolved;\n        }\n        if (requiresRefresh && !requiresRefresh(resolved)) {\n            isConstant = true;\n            return resolved;\n        }\n        if (isExpired(resolved)) {\n            await coalesceProvider();\n            return resolved;\n        }\n        return resolved;\n    };\n};\n","import { normalizeProvider } from \"@smithy/core\";\nimport { ProviderError } from \"@smithy/property-provider\";\nexport const resolveAwsSdkSigV4AConfig = (config) => {\n    config.sigv4aSigningRegionSet = normalizeProvider(config.sigv4aSigningRegionSet);\n    return config;\n};\nexport const NODE_SIGV4A_CONFIG_OPTIONS = {\n    environmentVariableSelector(env) {\n        if (env.AWS_SIGV4A_SIGNING_REGION_SET) {\n            return env.AWS_SIGV4A_SIGNING_REGION_SET.split(\",\").map((_) => _.trim());\n        }\n        throw new ProviderError(\"AWS_SIGV4A_SIGNING_REGION_SET not set in env.\", {\n            tryNextLink: true,\n        });\n    },\n    configFileSelector(profile) {\n        if (profile.sigv4a_signing_region_set) {\n            return (profile.sigv4a_signing_region_set ?? \"\").split(\",\").map((_) => _.trim());\n        }\n        throw new ProviderError(\"sigv4a_signing_region_set not set in profile.\", {\n            tryNextLink: true,\n        });\n    },\n    default: undefined,\n};\n","export const ALGORITHM_QUERY_PARAM = \"X-Amz-Algorithm\";\nexport const CREDENTIAL_QUERY_PARAM = \"X-Amz-Credential\";\nexport const AMZ_DATE_QUERY_PARAM = \"X-Amz-Date\";\nexport const SIGNED_HEADERS_QUERY_PARAM = \"X-Amz-SignedHeaders\";\nexport const EXPIRES_QUERY_PARAM = \"X-Amz-Expires\";\nexport const SIGNATURE_QUERY_PARAM = \"X-Amz-Signature\";\nexport const TOKEN_QUERY_PARAM = \"X-Amz-Security-Token\";\nexport const REGION_SET_PARAM = \"X-Amz-Region-Set\";\nexport const AUTH_HEADER = \"authorization\";\nexport const AMZ_DATE_HEADER = AMZ_DATE_QUERY_PARAM.toLowerCase();\nexport const DATE_HEADER = \"date\";\nexport const GENERATED_HEADERS = [AUTH_HEADER, AMZ_DATE_HEADER, DATE_HEADER];\nexport const SIGNATURE_HEADER = SIGNATURE_QUERY_PARAM.toLowerCase();\nexport const SHA256_HEADER = \"x-amz-content-sha256\";\nexport const TOKEN_HEADER = TOKEN_QUERY_PARAM.toLowerCase();\nexport const HOST_HEADER = \"host\";\nexport const ALWAYS_UNSIGNABLE_HEADERS = {\n    authorization: true,\n    \"cache-control\": true,\n    connection: true,\n    expect: true,\n    from: true,\n    \"keep-alive\": true,\n    \"max-forwards\": true,\n    pragma: true,\n    referer: true,\n    te: true,\n    trailer: true,\n    \"transfer-encoding\": true,\n    upgrade: true,\n    \"user-agent\": true,\n    \"x-amzn-trace-id\": true,\n};\nexport const PROXY_HEADER_PATTERN = /^proxy-/;\nexport const SEC_HEADER_PATTERN = /^sec-/;\nexport const UNSIGNABLE_PATTERNS = [/^proxy-/i, /^sec-/i];\nexport const ALGORITHM_IDENTIFIER = \"AWS4-HMAC-SHA256\";\nexport const ALGORITHM_IDENTIFIER_V4A = \"AWS4-ECDSA-P256-SHA256\";\nexport const EVENT_ALGORITHM_IDENTIFIER = \"AWS4-HMAC-SHA256-PAYLOAD\";\nexport const UNSIGNED_PAYLOAD = \"UNSIGNED-PAYLOAD\";\nexport const MAX_CACHE_SIZE = 50;\nexport const KEY_TYPE_IDENTIFIER = \"aws4_request\";\nexport const MAX_PRESIGNED_TTL = 60 * 60 * 24 * 7;\n","import { toHex } from \"@smithy/util-hex-encoding\";\nimport { toUint8Array } from \"@smithy/util-utf8\";\nimport { KEY_TYPE_IDENTIFIER, MAX_CACHE_SIZE } from \"./constants\";\nconst signingKeyCache = {};\nconst cacheQueue = [];\nexport const createScope = (shortDate, region, service) => `${shortDate}/${region}/${service}/${KEY_TYPE_IDENTIFIER}`;\nexport const getSigningKey = async (sha256Constructor, credentials, shortDate, region, service) => {\n    const credsHash = await hmac(sha256Constructor, credentials.secretAccessKey, credentials.accessKeyId);\n    const cacheKey = `${shortDate}:${region}:${service}:${toHex(credsHash)}:${credentials.sessionToken}`;\n    if (cacheKey in signingKeyCache) {\n        return signingKeyCache[cacheKey];\n    }\n    cacheQueue.push(cacheKey);\n    while (cacheQueue.length > MAX_CACHE_SIZE) {\n        delete signingKeyCache[cacheQueue.shift()];\n    }\n    let key = `AWS4${credentials.secretAccessKey}`;\n    for (const signable of [shortDate, region, service, KEY_TYPE_IDENTIFIER]) {\n        key = await hmac(sha256Constructor, key, signable);\n    }\n    return (signingKeyCache[cacheKey] = key);\n};\nexport const clearCredentialCache = () => {\n    cacheQueue.length = 0;\n    Object.keys(signingKeyCache).forEach((cacheKey) => {\n        delete signingKeyCache[cacheKey];\n    });\n};\nconst hmac = (ctor, secret, data) => {\n    const hash = new ctor(secret);\n    hash.update(toUint8Array(data));\n    return hash.digest();\n};\n","import { ALWAYS_UNSIGNABLE_HEADERS, PROXY_HEADER_PATTERN, SEC_HEADER_PATTERN } from \"./constants\";\nexport const getCanonicalHeaders = ({ headers }, unsignableHeaders, signableHeaders) => {\n    const canonical = {};\n    for (const headerName of Object.keys(headers).sort()) {\n        if (headers[headerName] == undefined) {\n            continue;\n        }\n        const canonicalHeaderName = headerName.toLowerCase();\n        if (canonicalHeaderName in ALWAYS_UNSIGNABLE_HEADERS ||\n            unsignableHeaders?.has(canonicalHeaderName) ||\n            PROXY_HEADER_PATTERN.test(canonicalHeaderName) ||\n            SEC_HEADER_PATTERN.test(canonicalHeaderName)) {\n            if (!signableHeaders || (signableHeaders && !signableHeaders.has(canonicalHeaderName))) {\n                continue;\n            }\n        }\n        canonical[canonicalHeaderName] = headers[headerName].trim().replace(/\\s+/g, \" \");\n    }\n    return canonical;\n};\n","import { isArrayBuffer } from \"@smithy/is-array-buffer\";\nimport { toHex } from \"@smithy/util-hex-encoding\";\nimport { toUint8Array } from \"@smithy/util-utf8\";\nimport { SHA256_HEADER, UNSIGNED_PAYLOAD } from \"./constants\";\nexport const getPayloadHash = async ({ headers, body }, hashConstructor) => {\n    for (const headerName of Object.keys(headers)) {\n        if (headerName.toLowerCase() === SHA256_HEADER) {\n            return headers[headerName];\n        }\n    }\n    if (body == undefined) {\n        return \"e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855\";\n    }\n    else if (typeof body === \"string\" || ArrayBuffer.isView(body) || isArrayBuffer(body)) {\n        const hashCtor = new hashConstructor();\n        hashCtor.update(toUint8Array(body));\n        return toHex(await hashCtor.digest());\n    }\n    return UNSIGNED_PAYLOAD;\n};\n","import { fromHex, toHex } from \"@smithy/util-hex-encoding\";\nimport { fromUtf8 } from \"@smithy/util-utf8\";\nexport class HeaderFormatter {\n    format(headers) {\n        const chunks = [];\n        for (const headerName of Object.keys(headers)) {\n            const bytes = fromUtf8(headerName);\n            chunks.push(Uint8Array.from([bytes.byteLength]), bytes, this.formatHeaderValue(headers[headerName]));\n        }\n        const out = new Uint8Array(chunks.reduce((carry, bytes) => carry + bytes.byteLength, 0));\n        let position = 0;\n        for (const chunk of chunks) {\n            out.set(chunk, position);\n            position += chunk.byteLength;\n        }\n        return out;\n    }\n    formatHeaderValue(header) {\n        switch (header.type) {\n            case \"boolean\":\n                return Uint8Array.from([header.value ? 0 : 1]);\n            case \"byte\":\n                return Uint8Array.from([2, header.value]);\n            case \"short\":\n                const shortView = new DataView(new ArrayBuffer(3));\n                shortView.setUint8(0, 3);\n                shortView.setInt16(1, header.value, false);\n                return new Uint8Array(shortView.buffer);\n            case \"integer\":\n                const intView = new DataView(new ArrayBuffer(5));\n                intView.setUint8(0, 4);\n                intView.setInt32(1, header.value, false);\n                return new Uint8Array(intView.buffer);\n            case \"long\":\n                const longBytes = new Uint8Array(9);\n                longBytes[0] = 5;\n                longBytes.set(header.value.bytes, 1);\n                return longBytes;\n            case \"binary\":\n                const binView = new DataView(new ArrayBuffer(3 + header.value.byteLength));\n                binView.setUint8(0, 6);\n                binView.setUint16(1, header.value.byteLength, false);\n                const binBytes = new Uint8Array(binView.buffer);\n                binBytes.set(header.value, 3);\n                return binBytes;\n            case \"string\":\n                const utf8Bytes = fromUtf8(header.value);\n                const strView = new DataView(new ArrayBuffer(3 + utf8Bytes.byteLength));\n                strView.setUint8(0, 7);\n                strView.setUint16(1, utf8Bytes.byteLength, false);\n                const strBytes = new Uint8Array(strView.buffer);\n                strBytes.set(utf8Bytes, 3);\n                return strBytes;\n            case \"timestamp\":\n                const tsBytes = new Uint8Array(9);\n                tsBytes[0] = 8;\n                tsBytes.set(Int64.fromNumber(header.value.valueOf()).bytes, 1);\n                return tsBytes;\n            case \"uuid\":\n                if (!UUID_PATTERN.test(header.value)) {\n                    throw new Error(`Invalid UUID received: ${header.value}`);\n                }\n                const uuidBytes = new Uint8Array(17);\n                uuidBytes[0] = 9;\n                uuidBytes.set(fromHex(header.value.replace(/\\-/g, \"\")), 1);\n                return uuidBytes;\n        }\n    }\n}\nvar HEADER_VALUE_TYPE;\n(function (HEADER_VALUE_TYPE) {\n    HEADER_VALUE_TYPE[HEADER_VALUE_TYPE[\"boolTrue\"] = 0] = \"boolTrue\";\n    HEADER_VALUE_TYPE[HEADER_VALUE_TYPE[\"boolFalse\"] = 1] = \"boolFalse\";\n    HEADER_VALUE_TYPE[HEADER_VALUE_TYPE[\"byte\"] = 2] = \"byte\";\n    HEADER_VALUE_TYPE[HEADER_VALUE_TYPE[\"short\"] = 3] = \"short\";\n    HEADER_VALUE_TYPE[HEADER_VALUE_TYPE[\"integer\"] = 4] = \"integer\";\n    HEADER_VALUE_TYPE[HEADER_VALUE_TYPE[\"long\"] = 5] = \"long\";\n    HEADER_VALUE_TYPE[HEADER_VALUE_TYPE[\"byteArray\"] = 6] = \"byteArray\";\n    HEADER_VALUE_TYPE[HEADER_VALUE_TYPE[\"string\"] = 7] = \"string\";\n    HEADER_VALUE_TYPE[HEADER_VALUE_TYPE[\"timestamp\"] = 8] = \"timestamp\";\n    HEADER_VALUE_TYPE[HEADER_VALUE_TYPE[\"uuid\"] = 9] = \"uuid\";\n})(HEADER_VALUE_TYPE || (HEADER_VALUE_TYPE = {}));\nconst UUID_PATTERN = /^[a-f0-9]{8}-[a-f0-9]{4}-[a-f0-9]{4}-[a-f0-9]{4}-[a-f0-9]{12}$/;\nexport class Int64 {\n    constructor(bytes) {\n        this.bytes = bytes;\n        if (bytes.byteLength !== 8) {\n            throw new Error(\"Int64 buffers must be exactly 8 bytes\");\n        }\n    }\n    static fromNumber(number) {\n        if (number > 9223372036854776000 || number < -9223372036854776000) {\n            throw new Error(`${number} is too large (or, if negative, too small) to represent as an Int64`);\n        }\n        const bytes = new Uint8Array(8);\n        for (let i = 7, remaining = Math.abs(Math.round(number)); i > -1 && remaining > 0; i--, remaining /= 256) {\n            bytes[i] = remaining;\n        }\n        if (number < 0) {\n            negate(bytes);\n        }\n        return new Int64(bytes);\n    }\n    valueOf() {\n        const bytes = this.bytes.slice(0);\n        const negative = bytes[0] & 0b10000000;\n        if (negative) {\n            negate(bytes);\n        }\n        return parseInt(toHex(bytes), 16) * (negative ? -1 : 1);\n    }\n    toString() {\n        return String(this.valueOf());\n    }\n}\nfunction negate(bytes) {\n    for (let i = 0; i < 8; i++) {\n        bytes[i] ^= 0xff;\n    }\n    for (let i = 7; i > -1; i--) {\n        bytes[i]++;\n        if (bytes[i] !== 0)\n            break;\n    }\n}\n","export const hasHeader = (soughtHeader, headers) => {\n    soughtHeader = soughtHeader.toLowerCase();\n    for (const headerName of Object.keys(headers)) {\n        if (soughtHeader === headerName.toLowerCase()) {\n            return true;\n        }\n    }\n    return false;\n};\nexport const getHeaderValue = (soughtHeader, headers) => {\n    soughtHeader = soughtHeader.toLowerCase();\n    for (const headerName of Object.keys(headers)) {\n        if (soughtHeader === headerName.toLowerCase()) {\n            return headers[headerName];\n        }\n    }\n    return undefined;\n};\nexport const deleteHeader = (soughtHeader, headers) => {\n    soughtHeader = soughtHeader.toLowerCase();\n    for (const headerName of Object.keys(headers)) {\n        if (soughtHeader === headerName.toLowerCase()) {\n            delete headers[headerName];\n        }\n    }\n};\n","import { HttpRequest } from \"@smithy/protocol-http\";\nimport { GENERATED_HEADERS } from \"./constants\";\nexport const prepareRequest = (request) => {\n    request = HttpRequest.clone(request);\n    for (const headerName of Object.keys(request.headers)) {\n        if (GENERATED_HEADERS.indexOf(headerName.toLowerCase()) > -1) {\n            delete request.headers[headerName];\n        }\n    }\n    return request;\n};\n","export const iso8601 = (time) => toDate(time)\n    .toISOString()\n    .replace(/\\.\\d{3}Z$/, \"Z\");\nexport const toDate = (time) => {\n    if (typeof time === \"number\") {\n        return new Date(time * 1000);\n    }\n    if (typeof time === \"string\") {\n        if (Number(time)) {\n            return new Date(Number(time) * 1000);\n        }\n        return new Date(time);\n    }\n    return time;\n};\n","import { toHex } from \"@smithy/util-hex-encoding\";\nimport { normalizeProvider } from \"@smithy/util-middleware\";\nimport { escapeUri } from \"@smithy/util-uri-escape\";\nimport { toUint8Array } from \"@smithy/util-utf8\";\nimport { ALGORITHM_IDENTIFIER, ALGORITHM_QUERY_PARAM, AMZ_DATE_HEADER, AMZ_DATE_QUERY_PARAM, AUTH_HEADER, CREDENTIAL_QUERY_PARAM, EVENT_ALGORITHM_IDENTIFIER, EXPIRES_QUERY_PARAM, MAX_PRESIGNED_TTL, SHA256_HEADER, SIGNATURE_QUERY_PARAM, SIGNED_HEADERS_QUERY_PARAM, TOKEN_HEADER, TOKEN_QUERY_PARAM, } from \"./constants\";\nimport { createScope, getSigningKey } from \"./credentialDerivation\";\nimport { getCanonicalHeaders } from \"./getCanonicalHeaders\";\nimport { getCanonicalQuery } from \"./getCanonicalQuery\";\nimport { getPayloadHash } from \"./getPayloadHash\";\nimport { HeaderFormatter } from \"./HeaderFormatter\";\nimport { hasHeader } from \"./headerUtil\";\nimport { moveHeadersToQuery } from \"./moveHeadersToQuery\";\nimport { prepareRequest } from \"./prepareRequest\";\nimport { iso8601 } from \"./utilDate\";\nexport class SignatureV4 {\n    constructor({ applyChecksum, credentials, region, service, sha256, uriEscapePath = true, }) {\n        this.headerFormatter = new HeaderFormatter();\n        this.service = service;\n        this.sha256 = sha256;\n        this.uriEscapePath = uriEscapePath;\n        this.applyChecksum = typeof applyChecksum === \"boolean\" ? applyChecksum : true;\n        this.regionProvider = normalizeProvider(region);\n        this.credentialProvider = normalizeProvider(credentials);\n    }\n    async presign(originalRequest, options = {}) {\n        const { signingDate = new Date(), expiresIn = 3600, unsignableHeaders, unhoistableHeaders, signableHeaders, hoistableHeaders, signingRegion, signingService, } = options;\n        const credentials = await this.credentialProvider();\n        this.validateResolvedCredentials(credentials);\n        const region = signingRegion ?? (await this.regionProvider());\n        const { longDate, shortDate } = formatDate(signingDate);\n        if (expiresIn > MAX_PRESIGNED_TTL) {\n            return Promise.reject(\"Signature version 4 presigned URLs\" + \" must have an expiration date less than one week in\" + \" the future\");\n        }\n        const scope = createScope(shortDate, region, signingService ?? this.service);\n        const request = moveHeadersToQuery(prepareRequest(originalRequest), { unhoistableHeaders, hoistableHeaders });\n        if (credentials.sessionToken) {\n            request.query[TOKEN_QUERY_PARAM] = credentials.sessionToken;\n        }\n        request.query[ALGORITHM_QUERY_PARAM] = ALGORITHM_IDENTIFIER;\n        request.query[CREDENTIAL_QUERY_PARAM] = `${credentials.accessKeyId}/${scope}`;\n        request.query[AMZ_DATE_QUERY_PARAM] = longDate;\n        request.query[EXPIRES_QUERY_PARAM] = expiresIn.toString(10);\n        const canonicalHeaders = getCanonicalHeaders(request, unsignableHeaders, signableHeaders);\n        request.query[SIGNED_HEADERS_QUERY_PARAM] = getCanonicalHeaderList(canonicalHeaders);\n        request.query[SIGNATURE_QUERY_PARAM] = await this.getSignature(longDate, scope, this.getSigningKey(credentials, region, shortDate, signingService), this.createCanonicalRequest(request, canonicalHeaders, await getPayloadHash(originalRequest, this.sha256)));\n        return request;\n    }\n    async sign(toSign, options) {\n        if (typeof toSign === \"string\") {\n            return this.signString(toSign, options);\n        }\n        else if (toSign.headers && toSign.payload) {\n            return this.signEvent(toSign, options);\n        }\n        else if (toSign.message) {\n            return this.signMessage(toSign, options);\n        }\n        else {\n            return this.signRequest(toSign, options);\n        }\n    }\n    async signEvent({ headers, payload }, { signingDate = new Date(), priorSignature, signingRegion, signingService }) {\n        const region = signingRegion ?? (await this.regionProvider());\n        const { shortDate, longDate } = formatDate(signingDate);\n        const scope = createScope(shortDate, region, signingService ?? this.service);\n        const hashedPayload = await getPayloadHash({ headers: {}, body: payload }, this.sha256);\n        const hash = new this.sha256();\n        hash.update(headers);\n        const hashedHeaders = toHex(await hash.digest());\n        const stringToSign = [\n            EVENT_ALGORITHM_IDENTIFIER,\n            longDate,\n            scope,\n            priorSignature,\n            hashedHeaders,\n            hashedPayload,\n        ].join(\"\\n\");\n        return this.signString(stringToSign, { signingDate, signingRegion: region, signingService });\n    }\n    async signMessage(signableMessage, { signingDate = new Date(), signingRegion, signingService }) {\n        const promise = this.signEvent({\n            headers: this.headerFormatter.format(signableMessage.message.headers),\n            payload: signableMessage.message.body,\n        }, {\n            signingDate,\n            signingRegion,\n            signingService,\n            priorSignature: signableMessage.priorSignature,\n        });\n        return promise.then((signature) => {\n            return { message: signableMessage.message, signature };\n        });\n    }\n    async signString(stringToSign, { signingDate = new Date(), signingRegion, signingService } = {}) {\n        const credentials = await this.credentialProvider();\n        this.validateResolvedCredentials(credentials);\n        const region = signingRegion ?? (await this.regionProvider());\n        const { shortDate } = formatDate(signingDate);\n        const hash = new this.sha256(await this.getSigningKey(credentials, region, shortDate, signingService));\n        hash.update(toUint8Array(stringToSign));\n        return toHex(await hash.digest());\n    }\n    async signRequest(requestToSign, { signingDate = new Date(), signableHeaders, unsignableHeaders, signingRegion, signingService, } = {}) {\n        const credentials = await this.credentialProvider();\n        this.validateResolvedCredentials(credentials);\n        const region = signingRegion ?? (await this.regionProvider());\n        const request = prepareRequest(requestToSign);\n        const { longDate, shortDate } = formatDate(signingDate);\n        const scope = createScope(shortDate, region, signingService ?? this.service);\n        request.headers[AMZ_DATE_HEADER] = longDate;\n        if (credentials.sessionToken) {\n            request.headers[TOKEN_HEADER] = credentials.sessionToken;\n        }\n        const payloadHash = await getPayloadHash(request, this.sha256);\n        if (!hasHeader(SHA256_HEADER, request.headers) && this.applyChecksum) {\n            request.headers[SHA256_HEADER] = payloadHash;\n        }\n        const canonicalHeaders = getCanonicalHeaders(request, unsignableHeaders, signableHeaders);\n        const signature = await this.getSignature(longDate, scope, this.getSigningKey(credentials, region, shortDate, signingService), this.createCanonicalRequest(request, canonicalHeaders, payloadHash));\n        request.headers[AUTH_HEADER] =\n            `${ALGORITHM_IDENTIFIER} ` +\n                `Credential=${credentials.accessKeyId}/${scope}, ` +\n                `SignedHeaders=${getCanonicalHeaderList(canonicalHeaders)}, ` +\n                `Signature=${signature}`;\n        return request;\n    }\n    createCanonicalRequest(request, canonicalHeaders, payloadHash) {\n        const sortedHeaders = Object.keys(canonicalHeaders).sort();\n        return `${request.method}\n${this.getCanonicalPath(request)}\n${getCanonicalQuery(request)}\n${sortedHeaders.map((name) => `${name}:${canonicalHeaders[name]}`).join(\"\\n\")}\n\n${sortedHeaders.join(\";\")}\n${payloadHash}`;\n    }\n    async createStringToSign(longDate, credentialScope, canonicalRequest) {\n        const hash = new this.sha256();\n        hash.update(toUint8Array(canonicalRequest));\n        const hashedRequest = await hash.digest();\n        return `${ALGORITHM_IDENTIFIER}\n${longDate}\n${credentialScope}\n${toHex(hashedRequest)}`;\n    }\n    getCanonicalPath({ path }) {\n        if (this.uriEscapePath) {\n            const normalizedPathSegments = [];\n            for (const pathSegment of path.split(\"/\")) {\n                if (pathSegment?.length === 0)\n                    continue;\n                if (pathSegment === \".\")\n                    continue;\n                if (pathSegment === \"..\") {\n                    normalizedPathSegments.pop();\n                }\n                else {\n                    normalizedPathSegments.push(pathSegment);\n                }\n            }\n            const normalizedPath = `${path?.startsWith(\"/\") ? \"/\" : \"\"}${normalizedPathSegments.join(\"/\")}${normalizedPathSegments.length > 0 && path?.endsWith(\"/\") ? \"/\" : \"\"}`;\n            const doubleEncoded = escapeUri(normalizedPath);\n            return doubleEncoded.replace(/%2F/g, \"/\");\n        }\n        return path;\n    }\n    async getSignature(longDate, credentialScope, keyPromise, canonicalRequest) {\n        const stringToSign = await this.createStringToSign(longDate, credentialScope, canonicalRequest);\n        const hash = new this.sha256(await keyPromise);\n        hash.update(toUint8Array(stringToSign));\n        return toHex(await hash.digest());\n    }\n    getSigningKey(credentials, region, shortDate, service) {\n        return getSigningKey(this.sha256, credentials, shortDate, region, service || this.service);\n    }\n    validateResolvedCredentials(credentials) {\n        if (typeof credentials !== \"object\" ||\n            typeof credentials.accessKeyId !== \"string\" ||\n            typeof credentials.secretAccessKey !== \"string\") {\n            throw new Error(\"Resolved credential object is not valid\");\n        }\n    }\n}\nconst formatDate = (now) => {\n    const longDate = iso8601(now).replace(/[\\-:]/g, \"\");\n    return {\n        longDate,\n        shortDate: longDate.slice(0, 8),\n    };\n};\nconst getCanonicalHeaderList = (headers) => Object.keys(headers).sort().join(\";\");\n","import { HttpRequest } from \"@smithy/protocol-http\";\nexport const moveHeadersToQuery = (request, options = {}) => {\n    const { headers, query = {} } = HttpRequest.clone(request);\n    for (const name of Object.keys(headers)) {\n        const lname = name.toLowerCase();\n        if ((lname.slice(0, 6) === \"x-amz-\" && !options.unhoistableHeaders?.has(lname)) ||\n            options.hoistableHeaders?.has(lname)) {\n            query[name] = headers[name];\n            delete headers[name];\n        }\n    }\n    return {\n        ...request,\n        headers,\n        query,\n    };\n};\n","import { escapeUri } from \"@smithy/util-uri-escape\";\nimport { SIGNATURE_HEADER } from \"./constants\";\nexport const getCanonicalQuery = ({ query = {} }) => {\n    const keys = [];\n    const serialized = {};\n    for (const key of Object.keys(query)) {\n        if (key.toLowerCase() === SIGNATURE_HEADER) {\n            continue;\n        }\n        const encodedKey = escapeUri(key);\n        keys.push(encodedKey);\n        const value = query[key];\n        if (typeof value === \"string\") {\n            serialized[encodedKey] = `${encodedKey}=${escapeUri(value)}`;\n        }\n        else if (Array.isArray(value)) {\n            serialized[encodedKey] = value\n                .slice(0)\n                .reduce((encoded, value) => encoded.concat([`${encodedKey}=${escapeUri(value)}`]), [])\n                .sort()\n                .join(\"&\");\n        }\n    }\n    return keys\n        .sort()\n        .map((key) => serialized[key])\n        .filter((serialized) => serialized)\n        .join(\"&\");\n};\n","import { setCredentialFeature } from \"@aws-sdk/core/client\";\nimport { doesIdentityRequireRefresh, isIdentityExpired, memoizeIdentityProvider, normalizeProvider, } from \"@smithy/core\";\nimport { SignatureV4 } from \"@smithy/signature-v4\";\nexport const resolveAwsSdkSigV4Config = (config) => {\n    let isUserSupplied = false;\n    let credentialsProvider;\n    if (config.credentials) {\n        isUserSupplied = true;\n        credentialsProvider = memoizeIdentityProvider(config.credentials, isIdentityExpired, doesIdentityRequireRefresh);\n    }\n    if (!credentialsProvider) {\n        if (config.credentialDefaultProvider) {\n            credentialsProvider = normalizeProvider(config.credentialDefaultProvider(Object.assign({}, config, {\n                parentClientConfig: config,\n            })));\n        }\n        else {\n            credentialsProvider = async () => {\n                throw new Error(\"`credentials` is missing\");\n            };\n        }\n    }\n    const boundCredentialsProvider = async () => credentialsProvider({ callerClientConfig: config });\n    const { signingEscapePath = true, systemClockOffset = config.systemClockOffset || 0, sha256, } = config;\n    let signer;\n    if (config.signer) {\n        signer = normalizeProvider(config.signer);\n    }\n    else if (config.regionInfoProvider) {\n        signer = () => normalizeProvider(config.region)()\n            .then(async (region) => [\n            (await config.regionInfoProvider(region, {\n                useFipsEndpoint: await config.useFipsEndpoint(),\n                useDualstackEndpoint: await config.useDualstackEndpoint(),\n            })) || {},\n            region,\n        ])\n            .then(([regionInfo, region]) => {\n            const { signingRegion, signingService } = regionInfo;\n            config.signingRegion = config.signingRegion || signingRegion || region;\n            config.signingName = config.signingName || signingService || config.serviceId;\n            const params = {\n                ...config,\n                credentials: boundCredentialsProvider,\n                region: config.signingRegion,\n                service: config.signingName,\n                sha256,\n                uriEscapePath: signingEscapePath,\n            };\n            const SignerCtor = config.signerConstructor || SignatureV4;\n            return new SignerCtor(params);\n        });\n    }\n    else {\n        signer = async (authScheme) => {\n            authScheme = Object.assign({}, {\n                name: \"sigv4\",\n                signingName: config.signingName || config.defaultSigningName,\n                signingRegion: await normalizeProvider(config.region)(),\n                properties: {},\n            }, authScheme);\n            const signingRegion = authScheme.signingRegion;\n            const signingService = authScheme.signingName;\n            config.signingRegion = config.signingRegion || signingRegion;\n            config.signingName = config.signingName || signingService || config.serviceId;\n            const params = {\n                ...config,\n                credentials: boundCredentialsProvider,\n                region: config.signingRegion,\n                service: config.signingName,\n                sha256,\n                uriEscapePath: signingEscapePath,\n            };\n            const SignerCtor = config.signerConstructor || SignatureV4;\n            return new SignerCtor(params);\n        };\n    }\n    return {\n        ...config,\n        systemClockOffset,\n        signingEscapePath,\n        credentials: isUserSupplied\n            ? async () => boundCredentialsProvider().then((creds) => setCredentialFeature(creds, \"CREDENTIALS_CODE\", \"e\"))\n            : boundCredentialsProvider,\n        signer,\n    };\n};\nexport const resolveAWSSDKSigV4Config = resolveAwsSdkSigV4Config;\n","const getAllAliases = (name, aliases) => {\n    const _aliases = [];\n    if (name) {\n        _aliases.push(name);\n    }\n    if (aliases) {\n        for (const alias of aliases) {\n            _aliases.push(alias);\n        }\n    }\n    return _aliases;\n};\nconst getMiddlewareNameWithAliases = (name, aliases) => {\n    return `${name || \"anonymous\"}${aliases && aliases.length > 0 ? ` (a.k.a. ${aliases.join(\",\")})` : \"\"}`;\n};\nexport const constructStack = () => {\n    let absoluteEntries = [];\n    let relativeEntries = [];\n    let identifyOnResolve = false;\n    const entriesNameSet = new Set();\n    const sort = (entries) => entries.sort((a, b) => stepWeights[b.step] - stepWeights[a.step] ||\n        priorityWeights[b.priority || \"normal\"] - priorityWeights[a.priority || \"normal\"]);\n    const removeByName = (toRemove) => {\n        let isRemoved = false;\n        const filterCb = (entry) => {\n            const aliases = getAllAliases(entry.name, entry.aliases);\n            if (aliases.includes(toRemove)) {\n                isRemoved = true;\n                for (const alias of aliases) {\n                    entriesNameSet.delete(alias);\n                }\n                return false;\n            }\n            return true;\n        };\n        absoluteEntries = absoluteEntries.filter(filterCb);\n        relativeEntries = relativeEntries.filter(filterCb);\n        return isRemoved;\n    };\n    const removeByReference = (toRemove) => {\n        let isRemoved = false;\n        const filterCb = (entry) => {\n            if (entry.middleware === toRemove) {\n                isRemoved = true;\n                for (const alias of getAllAliases(entry.name, entry.aliases)) {\n                    entriesNameSet.delete(alias);\n                }\n                return false;\n            }\n            return true;\n        };\n        absoluteEntries = absoluteEntries.filter(filterCb);\n        relativeEntries = relativeEntries.filter(filterCb);\n        return isRemoved;\n    };\n    const cloneTo = (toStack) => {\n        absoluteEntries.forEach((entry) => {\n            toStack.add(entry.middleware, { ...entry });\n        });\n        relativeEntries.forEach((entry) => {\n            toStack.addRelativeTo(entry.middleware, { ...entry });\n        });\n        toStack.identifyOnResolve?.(stack.identifyOnResolve());\n        return toStack;\n    };\n    const expandRelativeMiddlewareList = (from) => {\n        const expandedMiddlewareList = [];\n        from.before.forEach((entry) => {\n            if (entry.before.length === 0 && entry.after.length === 0) {\n                expandedMiddlewareList.push(entry);\n            }\n            else {\n                expandedMiddlewareList.push(...expandRelativeMiddlewareList(entry));\n            }\n        });\n        expandedMiddlewareList.push(from);\n        from.after.reverse().forEach((entry) => {\n            if (entry.before.length === 0 && entry.after.length === 0) {\n                expandedMiddlewareList.push(entry);\n            }\n            else {\n                expandedMiddlewareList.push(...expandRelativeMiddlewareList(entry));\n            }\n        });\n        return expandedMiddlewareList;\n    };\n    const getMiddlewareList = (debug = false) => {\n        const normalizedAbsoluteEntries = [];\n        const normalizedRelativeEntries = [];\n        const normalizedEntriesNameMap = {};\n        absoluteEntries.forEach((entry) => {\n            const normalizedEntry = {\n                ...entry,\n                before: [],\n                after: [],\n            };\n            for (const alias of getAllAliases(normalizedEntry.name, normalizedEntry.aliases)) {\n                normalizedEntriesNameMap[alias] = normalizedEntry;\n            }\n            normalizedAbsoluteEntries.push(normalizedEntry);\n        });\n        relativeEntries.forEach((entry) => {\n            const normalizedEntry = {\n                ...entry,\n                before: [],\n                after: [],\n            };\n            for (const alias of getAllAliases(normalizedEntry.name, normalizedEntry.aliases)) {\n                normalizedEntriesNameMap[alias] = normalizedEntry;\n            }\n            normalizedRelativeEntries.push(normalizedEntry);\n        });\n        normalizedRelativeEntries.forEach((entry) => {\n            if (entry.toMiddleware) {\n                const toMiddleware = normalizedEntriesNameMap[entry.toMiddleware];\n                if (toMiddleware === undefined) {\n                    if (debug) {\n                        return;\n                    }\n                    throw new Error(`${entry.toMiddleware} is not found when adding ` +\n                        `${getMiddlewareNameWithAliases(entry.name, entry.aliases)} ` +\n                        `middleware ${entry.relation} ${entry.toMiddleware}`);\n                }\n                if (entry.relation === \"after\") {\n                    toMiddleware.after.push(entry);\n                }\n                if (entry.relation === \"before\") {\n                    toMiddleware.before.push(entry);\n                }\n            }\n        });\n        const mainChain = sort(normalizedAbsoluteEntries)\n            .map(expandRelativeMiddlewareList)\n            .reduce((wholeList, expandedMiddlewareList) => {\n            wholeList.push(...expandedMiddlewareList);\n            return wholeList;\n        }, []);\n        return mainChain;\n    };\n    const stack = {\n        add: (middleware, options = {}) => {\n            const { name, override, aliases: _aliases } = options;\n            const entry = {\n                step: \"initialize\",\n                priority: \"normal\",\n                middleware,\n                ...options,\n            };\n            const aliases = getAllAliases(name, _aliases);\n            if (aliases.length > 0) {\n                if (aliases.some((alias) => entriesNameSet.has(alias))) {\n                    if (!override)\n                        throw new Error(`Duplicate middleware name '${getMiddlewareNameWithAliases(name, _aliases)}'`);\n                    for (const alias of aliases) {\n                        const toOverrideIndex = absoluteEntries.findIndex((entry) => entry.name === alias || entry.aliases?.some((a) => a === alias));\n                        if (toOverrideIndex === -1) {\n                            continue;\n                        }\n                        const toOverride = absoluteEntries[toOverrideIndex];\n                        if (toOverride.step !== entry.step || entry.priority !== toOverride.priority) {\n                            throw new Error(`\"${getMiddlewareNameWithAliases(toOverride.name, toOverride.aliases)}\" middleware with ` +\n                                `${toOverride.priority} priority in ${toOverride.step} step cannot ` +\n                                `be overridden by \"${getMiddlewareNameWithAliases(name, _aliases)}\" middleware with ` +\n                                `${entry.priority} priority in ${entry.step} step.`);\n                        }\n                        absoluteEntries.splice(toOverrideIndex, 1);\n                    }\n                }\n                for (const alias of aliases) {\n                    entriesNameSet.add(alias);\n                }\n            }\n            absoluteEntries.push(entry);\n        },\n        addRelativeTo: (middleware, options) => {\n            const { name, override, aliases: _aliases } = options;\n            const entry = {\n                middleware,\n                ...options,\n            };\n            const aliases = getAllAliases(name, _aliases);\n            if (aliases.length > 0) {\n                if (aliases.some((alias) => entriesNameSet.has(alias))) {\n                    if (!override)\n                        throw new Error(`Duplicate middleware name '${getMiddlewareNameWithAliases(name, _aliases)}'`);\n                    for (const alias of aliases) {\n                        const toOverrideIndex = relativeEntries.findIndex((entry) => entry.name === alias || entry.aliases?.some((a) => a === alias));\n                        if (toOverrideIndex === -1) {\n                            continue;\n                        }\n                        const toOverride = relativeEntries[toOverrideIndex];\n                        if (toOverride.toMiddleware !== entry.toMiddleware || toOverride.relation !== entry.relation) {\n                            throw new Error(`\"${getMiddlewareNameWithAliases(toOverride.name, toOverride.aliases)}\" middleware ` +\n                                `${toOverride.relation} \"${toOverride.toMiddleware}\" middleware cannot be overridden ` +\n                                `by \"${getMiddlewareNameWithAliases(name, _aliases)}\" middleware ${entry.relation} ` +\n                                `\"${entry.toMiddleware}\" middleware.`);\n                        }\n                        relativeEntries.splice(toOverrideIndex, 1);\n                    }\n                }\n                for (const alias of aliases) {\n                    entriesNameSet.add(alias);\n                }\n            }\n            relativeEntries.push(entry);\n        },\n        clone: () => cloneTo(constructStack()),\n        use: (plugin) => {\n            plugin.applyToStack(stack);\n        },\n        remove: (toRemove) => {\n            if (typeof toRemove === \"string\")\n                return removeByName(toRemove);\n            else\n                return removeByReference(toRemove);\n        },\n        removeByTag: (toRemove) => {\n            let isRemoved = false;\n            const filterCb = (entry) => {\n                const { tags, name, aliases: _aliases } = entry;\n                if (tags && tags.includes(toRemove)) {\n                    const aliases = getAllAliases(name, _aliases);\n                    for (const alias of aliases) {\n                        entriesNameSet.delete(alias);\n                    }\n                    isRemoved = true;\n                    return false;\n                }\n                return true;\n            };\n            absoluteEntries = absoluteEntries.filter(filterCb);\n            relativeEntries = relativeEntries.filter(filterCb);\n            return isRemoved;\n        },\n        concat: (from) => {\n            const cloned = cloneTo(constructStack());\n            cloned.use(from);\n            cloned.identifyOnResolve(identifyOnResolve || cloned.identifyOnResolve() || (from.identifyOnResolve?.() ?? false));\n            return cloned;\n        },\n        applyToStack: cloneTo,\n        identify: () => {\n            return getMiddlewareList(true).map((mw) => {\n                const step = mw.step ??\n                    mw.relation +\n                        \" \" +\n                        mw.toMiddleware;\n                return getMiddlewareNameWithAliases(mw.name, mw.aliases) + \" - \" + step;\n            });\n        },\n        identifyOnResolve(toggle) {\n            if (typeof toggle === \"boolean\")\n                identifyOnResolve = toggle;\n            return identifyOnResolve;\n        },\n        resolve: (handler, context) => {\n            for (const middleware of getMiddlewareList()\n                .map((entry) => entry.middleware)\n                .reverse()) {\n                handler = middleware(handler, context);\n            }\n            if (identifyOnResolve) {\n                console.log(stack.identify());\n            }\n            return handler;\n        },\n    };\n    return stack;\n};\nconst stepWeights = {\n    initialize: 5,\n    serialize: 4,\n    build: 3,\n    finalizeRequest: 2,\n    deserialize: 1,\n};\nconst priorityWeights = {\n    high: 3,\n    normal: 2,\n    low: 1,\n};\n","import { constructStack } from \"@smithy/middleware-stack\";\nexport class Client {\n    constructor(config) {\n        this.config = config;\n        this.middlewareStack = constructStack();\n    }\n    send(command, optionsOrCb, cb) {\n        const options = typeof optionsOrCb !== \"function\" ? optionsOrCb : undefined;\n        const callback = typeof optionsOrCb === \"function\" ? optionsOrCb : cb;\n        const useHandlerCache = options === undefined && this.config.cacheMiddleware === true;\n        let handler;\n        if (useHandlerCache) {\n            if (!this.handlers) {\n                this.handlers = new WeakMap();\n            }\n            const handlers = this.handlers;\n            if (handlers.has(command.constructor)) {\n                handler = handlers.get(command.constructor);\n            }\n            else {\n                handler = command.resolveMiddleware(this.middlewareStack, this.config, options);\n                handlers.set(command.constructor, handler);\n            }\n        }\n        else {\n            delete this.handlers;\n            handler = command.resolveMiddleware(this.middlewareStack, this.config, options);\n        }\n        if (callback) {\n            handler(command)\n                .then((result) => callback(null, result.output), (err) => callback(err))\n                .catch(() => { });\n        }\n        else {\n            return handler(command).then((result) => result.output);\n        }\n    }\n    destroy() {\n        this.config?.requestHandler?.destroy?.();\n        delete this.handlers;\n    }\n}\n","import { constructStack } from \"@smithy/middleware-stack\";\nimport { SMITHY_CONTEXT_KEY } from \"@smithy/types\";\nexport class Command {\n    constructor() {\n        this.middlewareStack = constructStack();\n    }\n    static classBuilder() {\n        return new ClassBuilder();\n    }\n    resolveMiddlewareWithContext(clientStack, configuration, options, { middlewareFn, clientName, commandName, inputFilterSensitiveLog, outputFilterSensitiveLog, smithyContext, additionalContext, CommandCtor, }) {\n        for (const mw of middlewareFn.bind(this)(CommandCtor, clientStack, configuration, options)) {\n            this.middlewareStack.use(mw);\n        }\n        const stack = clientStack.concat(this.middlewareStack);\n        const { logger } = configuration;\n        const handlerExecutionContext = {\n            logger,\n            clientName,\n            commandName,\n            inputFilterSensitiveLog,\n            outputFilterSensitiveLog,\n            [SMITHY_CONTEXT_KEY]: {\n                commandInstance: this,\n                ...smithyContext,\n            },\n            ...additionalContext,\n        };\n        const { requestHandler } = configuration;\n        return stack.resolve((request) => requestHandler.handle(request.request, options || {}), handlerExecutionContext);\n    }\n}\nclass ClassBuilder {\n    constructor() {\n        this._init = () => { };\n        this._ep = {};\n        this._middlewareFn = () => [];\n        this._commandName = \"\";\n        this._clientName = \"\";\n        this._additionalContext = {};\n        this._smithyContext = {};\n        this._inputFilterSensitiveLog = (_) => _;\n        this._outputFilterSensitiveLog = (_) => _;\n        this._serializer = null;\n        this._deserializer = null;\n    }\n    init(cb) {\n        this._init = cb;\n    }\n    ep(endpointParameterInstructions) {\n        this._ep = endpointParameterInstructions;\n        return this;\n    }\n    m(middlewareSupplier) {\n        this._middlewareFn = middlewareSupplier;\n        return this;\n    }\n    s(service, operation, smithyContext = {}) {\n        this._smithyContext = {\n            service,\n            operation,\n            ...smithyContext,\n        };\n        return this;\n    }\n    c(additionalContext = {}) {\n        this._additionalContext = additionalContext;\n        return this;\n    }\n    n(clientName, commandName) {\n        this._clientName = clientName;\n        this._commandName = commandName;\n        return this;\n    }\n    f(inputFilter = (_) => _, outputFilter = (_) => _) {\n        this._inputFilterSensitiveLog = inputFilter;\n        this._outputFilterSensitiveLog = outputFilter;\n        return this;\n    }\n    ser(serializer) {\n        this._serializer = serializer;\n        return this;\n    }\n    de(deserializer) {\n        this._deserializer = deserializer;\n        return this;\n    }\n    build() {\n        const closure = this;\n        let CommandRef;\n        return (CommandRef = class extends Command {\n            static getEndpointParameterInstructions() {\n                return closure._ep;\n            }\n            constructor(...[input]) {\n                super();\n                this.serialize = closure._serializer;\n                this.deserialize = closure._deserializer;\n                this.input = input ?? {};\n                closure._init(this);\n            }\n            resolveMiddleware(stack, configuration, options) {\n                return this.resolveMiddlewareWithContext(stack, configuration, options, {\n                    CommandCtor: CommandRef,\n                    middlewareFn: closure._middlewareFn,\n                    clientName: closure._clientName,\n                    commandName: closure._commandName,\n                    inputFilterSensitiveLog: closure._inputFilterSensitiveLog,\n                    outputFilterSensitiveLog: closure._outputFilterSensitiveLog,\n                    smithyContext: closure._smithyContext,\n                    additionalContext: closure._additionalContext,\n                });\n            }\n        });\n    }\n}\n","export const SENSITIVE_STRING = \"***SensitiveInformation***\";\n","export const createAggregatedClient = (commands, Client) => {\n    for (const command of Object.keys(commands)) {\n        const CommandCtor = commands[command];\n        const methodImpl = async function (args, optionsOrCb, cb) {\n            const command = new CommandCtor(args);\n            if (typeof optionsOrCb === \"function\") {\n                this.send(command, optionsOrCb);\n            }\n            else if (typeof cb === \"function\") {\n                if (typeof optionsOrCb !== \"object\")\n                    throw new Error(`Expected http options but got ${typeof optionsOrCb}`);\n                this.send(command, optionsOrCb || {}, cb);\n            }\n            else {\n                return this.send(command, optionsOrCb);\n            }\n        };\n        const methodName = (command[0].toLowerCase() + command.slice(1)).replace(/Command$/, \"\");\n        Client.prototype[methodName] = methodImpl;\n    }\n};\n","export const parseBoolean = (value) => {\n    switch (value) {\n        case \"true\":\n            return true;\n        case \"false\":\n            return false;\n        default:\n            throw new Error(`Unable to parse boolean value \"${value}\"`);\n    }\n};\nexport const expectBoolean = (value) => {\n    if (value === null || value === undefined) {\n        return undefined;\n    }\n    if (typeof value === \"number\") {\n        if (value === 0 || value === 1) {\n            logger.warn(stackTraceWarning(`Expected boolean, got ${typeof value}: ${value}`));\n        }\n        if (value === 0) {\n            return false;\n        }\n        if (value === 1) {\n            return true;\n        }\n    }\n    if (typeof value === \"string\") {\n        const lower = value.toLowerCase();\n        if (lower === \"false\" || lower === \"true\") {\n            logger.warn(stackTraceWarning(`Expected boolean, got ${typeof value}: ${value}`));\n        }\n        if (lower === \"false\") {\n            return false;\n        }\n        if (lower === \"true\") {\n            return true;\n        }\n    }\n    if (typeof value === \"boolean\") {\n        return value;\n    }\n    throw new TypeError(`Expected boolean, got ${typeof value}: ${value}`);\n};\nexport const expectNumber = (value) => {\n    if (value === null || value === undefined) {\n        return undefined;\n    }\n    if (typeof value === \"string\") {\n        const parsed = parseFloat(value);\n        if (!Number.isNaN(parsed)) {\n            if (String(parsed) !== String(value)) {\n                logger.warn(stackTraceWarning(`Expected number but observed string: ${value}`));\n            }\n            return parsed;\n        }\n    }\n    if (typeof value === \"number\") {\n        return value;\n    }\n    throw new TypeError(`Expected number, got ${typeof value}: ${value}`);\n};\nconst MAX_FLOAT = Math.ceil(2 ** 127 * (2 - 2 ** -23));\nexport const expectFloat32 = (value) => {\n    const expected = expectNumber(value);\n    if (expected !== undefined && !Number.isNaN(expected) && expected !== Infinity && expected !== -Infinity) {\n        if (Math.abs(expected) > MAX_FLOAT) {\n            throw new TypeError(`Expected 32-bit float, got ${value}`);\n        }\n    }\n    return expected;\n};\nexport const expectLong = (value) => {\n    if (value === null || value === undefined) {\n        return undefined;\n    }\n    if (Number.isInteger(value) && !Number.isNaN(value)) {\n        return value;\n    }\n    throw new TypeError(`Expected integer, got ${typeof value}: ${value}`);\n};\nexport const expectInt = expectLong;\nexport const expectInt32 = (value) => expectSizedInt(value, 32);\nexport const expectShort = (value) => expectSizedInt(value, 16);\nexport const expectByte = (value) => expectSizedInt(value, 8);\nconst expectSizedInt = (value, size) => {\n    const expected = expectLong(value);\n    if (expected !== undefined && castInt(expected, size) !== expected) {\n        throw new TypeError(`Expected ${size}-bit integer, got ${value}`);\n    }\n    return expected;\n};\nconst castInt = (value, size) => {\n    switch (size) {\n        case 32:\n            return Int32Array.of(value)[0];\n        case 16:\n            return Int16Array.of(value)[0];\n        case 8:\n            return Int8Array.of(value)[0];\n    }\n};\nexport const expectNonNull = (value, location) => {\n    if (value === null || value === undefined) {\n        if (location) {\n            throw new TypeError(`Expected a non-null value for ${location}`);\n        }\n        throw new TypeError(\"Expected a non-null value\");\n    }\n    return value;\n};\nexport const expectObject = (value) => {\n    if (value === null || value === undefined) {\n        return undefined;\n    }\n    if (typeof value === \"object\" && !Array.isArray(value)) {\n        return value;\n    }\n    const receivedType = Array.isArray(value) ? \"array\" : typeof value;\n    throw new TypeError(`Expected object, got ${receivedType}: ${value}`);\n};\nexport const expectString = (value) => {\n    if (value === null || value === undefined) {\n        return undefined;\n    }\n    if (typeof value === \"string\") {\n        return value;\n    }\n    if ([\"boolean\", \"number\", \"bigint\"].includes(typeof value)) {\n        logger.warn(stackTraceWarning(`Expected string, got ${typeof value}: ${value}`));\n        return String(value);\n    }\n    throw new TypeError(`Expected string, got ${typeof value}: ${value}`);\n};\nexport const expectUnion = (value) => {\n    if (value === null || value === undefined) {\n        return undefined;\n    }\n    const asObject = expectObject(value);\n    const setKeys = Object.entries(asObject)\n        .filter(([, v]) => v != null)\n        .map(([k]) => k);\n    if (setKeys.length === 0) {\n        throw new TypeError(`Unions must have exactly one non-null member. None were found.`);\n    }\n    if (setKeys.length > 1) {\n        throw new TypeError(`Unions must have exactly one non-null member. Keys ${setKeys} were not null.`);\n    }\n    return asObject;\n};\nexport const strictParseDouble = (value) => {\n    if (typeof value == \"string\") {\n        return expectNumber(parseNumber(value));\n    }\n    return expectNumber(value);\n};\nexport const strictParseFloat = strictParseDouble;\nexport const strictParseFloat32 = (value) => {\n    if (typeof value == \"string\") {\n        return expectFloat32(parseNumber(value));\n    }\n    return expectFloat32(value);\n};\nconst NUMBER_REGEX = /(-?(?:0|[1-9]\\d*)(?:\\.\\d+)?(?:[eE][+-]?\\d+)?)|(-?Infinity)|(NaN)/g;\nconst parseNumber = (value) => {\n    const matches = value.match(NUMBER_REGEX);\n    if (matches === null || matches[0].length !== value.length) {\n        throw new TypeError(`Expected real number, got implicit NaN`);\n    }\n    return parseFloat(value);\n};\nexport const limitedParseDouble = (value) => {\n    if (typeof value == \"string\") {\n        return parseFloatString(value);\n    }\n    return expectNumber(value);\n};\nexport const handleFloat = limitedParseDouble;\nexport const limitedParseFloat = limitedParseDouble;\nexport const limitedParseFloat32 = (value) => {\n    if (typeof value == \"string\") {\n        return parseFloatString(value);\n    }\n    return expectFloat32(value);\n};\nconst parseFloatString = (value) => {\n    switch (value) {\n        case \"NaN\":\n            return NaN;\n        case \"Infinity\":\n            return Infinity;\n        case \"-Infinity\":\n            return -Infinity;\n        default:\n            throw new Error(`Unable to parse float value: ${value}`);\n    }\n};\nexport const strictParseLong = (value) => {\n    if (typeof value === \"string\") {\n        return expectLong(parseNumber(value));\n    }\n    return expectLong(value);\n};\nexport const strictParseInt = strictParseLong;\nexport const strictParseInt32 = (value) => {\n    if (typeof value === \"string\") {\n        return expectInt32(parseNumber(value));\n    }\n    return expectInt32(value);\n};\nexport const strictParseShort = (value) => {\n    if (typeof value === \"string\") {\n        return expectShort(parseNumber(value));\n    }\n    return expectShort(value);\n};\nexport const strictParseByte = (value) => {\n    if (typeof value === \"string\") {\n        return expectByte(parseNumber(value));\n    }\n    return expectByte(value);\n};\nconst stackTraceWarning = (message) => {\n    return String(new TypeError(message).stack || message)\n        .split(\"\\n\")\n        .slice(0, 5)\n        .filter((s) => !s.includes(\"stackTraceWarning\"))\n        .join(\"\\n\");\n};\nexport const logger = {\n    warn: console.warn,\n};\n","import { strictParseByte, strictParseDouble, strictParseFloat32, strictParseShort } from \"./parse-utils\";\nconst DAYS = [\"Sun\", \"Mon\", \"Tue\", \"Wed\", \"Thu\", \"Fri\", \"Sat\"];\nconst MONTHS = [\"Jan\", \"Feb\", \"Mar\", \"Apr\", \"May\", \"Jun\", \"Jul\", \"Aug\", \"Sep\", \"Oct\", \"Nov\", \"Dec\"];\nexport function dateToUtcString(date) {\n    const year = date.getUTCFullYear();\n    const month = date.getUTCMonth();\n    const dayOfWeek = date.getUTCDay();\n    const dayOfMonthInt = date.getUTCDate();\n    const hoursInt = date.getUTCHours();\n    const minutesInt = date.getUTCMinutes();\n    const secondsInt = date.getUTCSeconds();\n    const dayOfMonthString = dayOfMonthInt < 10 ? `0${dayOfMonthInt}` : `${dayOfMonthInt}`;\n    const hoursString = hoursInt < 10 ? `0${hoursInt}` : `${hoursInt}`;\n    const minutesString = minutesInt < 10 ? `0${minutesInt}` : `${minutesInt}`;\n    const secondsString = secondsInt < 10 ? `0${secondsInt}` : `${secondsInt}`;\n    return `${DAYS[dayOfWeek]}, ${dayOfMonthString} ${MONTHS[month]} ${year} ${hoursString}:${minutesString}:${secondsString} GMT`;\n}\nconst RFC3339 = new RegExp(/^(\\d{4})-(\\d{2})-(\\d{2})[tT](\\d{2}):(\\d{2}):(\\d{2})(?:\\.(\\d+))?[zZ]$/);\nexport const parseRfc3339DateTime = (value) => {\n    if (value === null || value === undefined) {\n        return undefined;\n    }\n    if (typeof value !== \"string\") {\n        throw new TypeError(\"RFC-3339 date-times must be expressed as strings\");\n    }\n    const match = RFC3339.exec(value);\n    if (!match) {\n        throw new TypeError(\"Invalid RFC-3339 date-time value\");\n    }\n    const [_, yearStr, monthStr, dayStr, hours, minutes, seconds, fractionalMilliseconds] = match;\n    const year = strictParseShort(stripLeadingZeroes(yearStr));\n    const month = parseDateValue(monthStr, \"month\", 1, 12);\n    const day = parseDateValue(dayStr, \"day\", 1, 31);\n    return buildDate(year, month, day, { hours, minutes, seconds, fractionalMilliseconds });\n};\nconst RFC3339_WITH_OFFSET = new RegExp(/^(\\d{4})-(\\d{2})-(\\d{2})[tT](\\d{2}):(\\d{2}):(\\d{2})(?:\\.(\\d+))?(([-+]\\d{2}\\:\\d{2})|[zZ])$/);\nexport const parseRfc3339DateTimeWithOffset = (value) => {\n    if (value === null || value === undefined) {\n        return undefined;\n    }\n    if (typeof value !== \"string\") {\n        throw new TypeError(\"RFC-3339 date-times must be expressed as strings\");\n    }\n    const match = RFC3339_WITH_OFFSET.exec(value);\n    if (!match) {\n        throw new TypeError(\"Invalid RFC-3339 date-time value\");\n    }\n    const [_, yearStr, monthStr, dayStr, hours, minutes, seconds, fractionalMilliseconds, offsetStr] = match;\n    const year = strictParseShort(stripLeadingZeroes(yearStr));\n    const month = parseDateValue(monthStr, \"month\", 1, 12);\n    const day = parseDateValue(dayStr, \"day\", 1, 31);\n    const date = buildDate(year, month, day, { hours, minutes, seconds, fractionalMilliseconds });\n    if (offsetStr.toUpperCase() != \"Z\") {\n        date.setTime(date.getTime() - parseOffsetToMilliseconds(offsetStr));\n    }\n    return date;\n};\nconst IMF_FIXDATE = new RegExp(/^(?:Mon|Tue|Wed|Thu|Fri|Sat|Sun), (\\d{2}) (Jan|Feb|Mar|Apr|May|Jun|Jul|Aug|Sep|Oct|Nov|Dec) (\\d{4}) (\\d{1,2}):(\\d{2}):(\\d{2})(?:\\.(\\d+))? GMT$/);\nconst RFC_850_DATE = new RegExp(/^(?:Monday|Tuesday|Wednesday|Thursday|Friday|Saturday|Sunday), (\\d{2})-(Jan|Feb|Mar|Apr|May|Jun|Jul|Aug|Sep|Oct|Nov|Dec)-(\\d{2}) (\\d{1,2}):(\\d{2}):(\\d{2})(?:\\.(\\d+))? GMT$/);\nconst ASC_TIME = new RegExp(/^(?:Mon|Tue|Wed|Thu|Fri|Sat|Sun) (Jan|Feb|Mar|Apr|May|Jun|Jul|Aug|Sep|Oct|Nov|Dec) ( [1-9]|\\d{2}) (\\d{1,2}):(\\d{2}):(\\d{2})(?:\\.(\\d+))? (\\d{4})$/);\nexport const parseRfc7231DateTime = (value) => {\n    if (value === null || value === undefined) {\n        return undefined;\n    }\n    if (typeof value !== \"string\") {\n        throw new TypeError(\"RFC-7231 date-times must be expressed as strings\");\n    }\n    let match = IMF_FIXDATE.exec(value);\n    if (match) {\n        const [_, dayStr, monthStr, yearStr, hours, minutes, seconds, fractionalMilliseconds] = match;\n        return buildDate(strictParseShort(stripLeadingZeroes(yearStr)), parseMonthByShortName(monthStr), parseDateValue(dayStr, \"day\", 1, 31), { hours, minutes, seconds, fractionalMilliseconds });\n    }\n    match = RFC_850_DATE.exec(value);\n    if (match) {\n        const [_, dayStr, monthStr, yearStr, hours, minutes, seconds, fractionalMilliseconds] = match;\n        return adjustRfc850Year(buildDate(parseTwoDigitYear(yearStr), parseMonthByShortName(monthStr), parseDateValue(dayStr, \"day\", 1, 31), {\n            hours,\n            minutes,\n            seconds,\n            fractionalMilliseconds,\n        }));\n    }\n    match = ASC_TIME.exec(value);\n    if (match) {\n        const [_, monthStr, dayStr, hours, minutes, seconds, fractionalMilliseconds, yearStr] = match;\n        return buildDate(strictParseShort(stripLeadingZeroes(yearStr)), parseMonthByShortName(monthStr), parseDateValue(dayStr.trimLeft(), \"day\", 1, 31), { hours, minutes, seconds, fractionalMilliseconds });\n    }\n    throw new TypeError(\"Invalid RFC-7231 date-time value\");\n};\nexport const parseEpochTimestamp = (value) => {\n    if (value === null || value === undefined) {\n        return undefined;\n    }\n    let valueAsDouble;\n    if (typeof value === \"number\") {\n        valueAsDouble = value;\n    }\n    else if (typeof value === \"string\") {\n        valueAsDouble = strictParseDouble(value);\n    }\n    else if (typeof value === \"object\" && value.tag === 1) {\n        valueAsDouble = value.value;\n    }\n    else {\n        throw new TypeError(\"Epoch timestamps must be expressed as floating point numbers or their string representation\");\n    }\n    if (Number.isNaN(valueAsDouble) || valueAsDouble === Infinity || valueAsDouble === -Infinity) {\n        throw new TypeError(\"Epoch timestamps must be valid, non-Infinite, non-NaN numerics\");\n    }\n    return new Date(Math.round(valueAsDouble * 1000));\n};\nconst buildDate = (year, month, day, time) => {\n    const adjustedMonth = month - 1;\n    validateDayOfMonth(year, adjustedMonth, day);\n    return new Date(Date.UTC(year, adjustedMonth, day, parseDateValue(time.hours, \"hour\", 0, 23), parseDateValue(time.minutes, \"minute\", 0, 59), parseDateValue(time.seconds, \"seconds\", 0, 60), parseMilliseconds(time.fractionalMilliseconds)));\n};\nconst parseTwoDigitYear = (value) => {\n    const thisYear = new Date().getUTCFullYear();\n    const valueInThisCentury = Math.floor(thisYear / 100) * 100 + strictParseShort(stripLeadingZeroes(value));\n    if (valueInThisCentury < thisYear) {\n        return valueInThisCentury + 100;\n    }\n    return valueInThisCentury;\n};\nconst FIFTY_YEARS_IN_MILLIS = 50 * 365 * 24 * 60 * 60 * 1000;\nconst adjustRfc850Year = (input) => {\n    if (input.getTime() - new Date().getTime() > FIFTY_YEARS_IN_MILLIS) {\n        return new Date(Date.UTC(input.getUTCFullYear() - 100, input.getUTCMonth(), input.getUTCDate(), input.getUTCHours(), input.getUTCMinutes(), input.getUTCSeconds(), input.getUTCMilliseconds()));\n    }\n    return input;\n};\nconst parseMonthByShortName = (value) => {\n    const monthIdx = MONTHS.indexOf(value);\n    if (monthIdx < 0) {\n        throw new TypeError(`Invalid month: ${value}`);\n    }\n    return monthIdx + 1;\n};\nconst DAYS_IN_MONTH = [31, 28, 31, 30, 31, 30, 31, 31, 30, 31, 30, 31];\nconst validateDayOfMonth = (year, month, day) => {\n    let maxDays = DAYS_IN_MONTH[month];\n    if (month === 1 && isLeapYear(year)) {\n        maxDays = 29;\n    }\n    if (day > maxDays) {\n        throw new TypeError(`Invalid day for ${MONTHS[month]} in ${year}: ${day}`);\n    }\n};\nconst isLeapYear = (year) => {\n    return year % 4 === 0 && (year % 100 !== 0 || year % 400 === 0);\n};\nconst parseDateValue = (value, type, lower, upper) => {\n    const dateVal = strictParseByte(stripLeadingZeroes(value));\n    if (dateVal < lower || dateVal > upper) {\n        throw new TypeError(`${type} must be between ${lower} and ${upper}, inclusive`);\n    }\n    return dateVal;\n};\nconst parseMilliseconds = (value) => {\n    if (value === null || value === undefined) {\n        return 0;\n    }\n    return strictParseFloat32(\"0.\" + value) * 1000;\n};\nconst parseOffsetToMilliseconds = (value) => {\n    const directionStr = value[0];\n    let direction = 1;\n    if (directionStr == \"+\") {\n        direction = 1;\n    }\n    else if (directionStr == \"-\") {\n        direction = -1;\n    }\n    else {\n        throw new TypeError(`Offset direction, ${directionStr}, must be \"+\" or \"-\"`);\n    }\n    const hour = Number(value.substring(1, 3));\n    const minute = Number(value.substring(4, 6));\n    return direction * (hour * 60 + minute) * 60 * 1000;\n};\nconst stripLeadingZeroes = (value) => {\n    let idx = 0;\n    while (idx < value.length - 1 && value.charAt(idx) === \"0\") {\n        idx++;\n    }\n    if (idx === 0) {\n        return value;\n    }\n    return value.slice(idx);\n};\n","export class ServiceException extends Error {\n    constructor(options) {\n        super(options.message);\n        Object.setPrototypeOf(this, Object.getPrototypeOf(this).constructor.prototype);\n        this.name = options.name;\n        this.$fault = options.$fault;\n        this.$metadata = options.$metadata;\n    }\n    static isInstance(value) {\n        if (!value)\n            return false;\n        const candidate = value;\n        return (ServiceException.prototype.isPrototypeOf(candidate) ||\n            (Boolean(candidate.$fault) &&\n                Boolean(candidate.$metadata) &&\n                (candidate.$fault === \"client\" || candidate.$fault === \"server\")));\n    }\n    static [Symbol.hasInstance](instance) {\n        if (!instance)\n            return false;\n        const candidate = instance;\n        if (this === ServiceException) {\n            return ServiceException.isInstance(instance);\n        }\n        if (ServiceException.isInstance(instance)) {\n            if (candidate.name && this.name) {\n                return this.prototype.isPrototypeOf(instance) || candidate.name === this.name;\n            }\n            return this.prototype.isPrototypeOf(instance);\n        }\n        return false;\n    }\n}\nexport const decorateServiceException = (exception, additions = {}) => {\n    Object.entries(additions)\n        .filter(([, v]) => v !== undefined)\n        .forEach(([k, v]) => {\n        if (exception[k] == undefined || exception[k] === \"\") {\n            exception[k] = v;\n        }\n    });\n    const message = exception.message || exception.Message || \"UnknownError\";\n    exception.message = message;\n    delete exception.Message;\n    return exception;\n};\n","import { decorateServiceException } from \"./exceptions\";\nexport const throwDefaultError = ({ output, parsedBody, exceptionCtor, errorCode }) => {\n    const $metadata = deserializeMetadata(output);\n    const statusCode = $metadata.httpStatusCode ? $metadata.httpStatusCode + \"\" : undefined;\n    const response = new exceptionCtor({\n        name: parsedBody?.code || parsedBody?.Code || errorCode || statusCode || \"UnknownError\",\n        $fault: \"client\",\n        $metadata,\n    });\n    throw decorateServiceException(response, parsedBody);\n};\nexport const withBaseException = (ExceptionCtor) => {\n    return ({ output, parsedBody, errorCode }) => {\n        throwDefaultError({ output, parsedBody, exceptionCtor: ExceptionCtor, errorCode });\n    };\n};\nconst deserializeMetadata = (output) => ({\n    httpStatusCode: output.statusCode,\n    requestId: output.headers[\"x-amzn-requestid\"] ?? output.headers[\"x-amzn-request-id\"] ?? output.headers[\"x-amz-request-id\"],\n    extendedRequestId: output.headers[\"x-amz-id-2\"],\n    cfId: output.headers[\"x-amz-cf-id\"],\n});\n","export const loadConfigsForDefaultMode = (mode) => {\n    switch (mode) {\n        case \"standard\":\n            return {\n                retryMode: \"standard\",\n                connectionTimeout: 3100,\n            };\n        case \"in-region\":\n            return {\n                retryMode: \"standard\",\n                connectionTimeout: 1100,\n            };\n        case \"cross-region\":\n            return {\n                retryMode: \"standard\",\n                connectionTimeout: 3100,\n            };\n        case \"mobile\":\n            return {\n                retryMode: \"standard\",\n                connectionTimeout: 30000,\n            };\n        default:\n            return {};\n    }\n};\n","let warningEmitted = false;\nexport const emitWarningIfUnsupportedVersion = (version) => {\n    if (version && !warningEmitted && parseInt(version.substring(1, version.indexOf(\".\"))) < 16) {\n        warningEmitted = true;\n    }\n};\n","import { AlgorithmId } from \"@smithy/types\";\nexport { AlgorithmId };\nexport const getChecksumConfiguration = (runtimeConfig) => {\n    const checksumAlgorithms = [];\n    for (const id in AlgorithmId) {\n        const algorithmId = AlgorithmId[id];\n        if (runtimeConfig[algorithmId] === undefined) {\n            continue;\n        }\n        checksumAlgorithms.push({\n            algorithmId: () => algorithmId,\n            checksumConstructor: () => runtimeConfig[algorithmId],\n        });\n    }\n    return {\n        _checksumAlgorithms: checksumAlgorithms,\n        addChecksumAlgorithm(algo) {\n            this._checksumAlgorithms.push(algo);\n        },\n        checksumAlgorithms() {\n            return this._checksumAlgorithms;\n        },\n    };\n};\nexport const resolveChecksumRuntimeConfig = (clientConfig) => {\n    const runtimeConfig = {};\n    clientConfig.checksumAlgorithms().forEach((checksumAlgorithm) => {\n        runtimeConfig[checksumAlgorithm.algorithmId()] = checksumAlgorithm.checksumConstructor();\n    });\n    return runtimeConfig;\n};\n","export const getRetryConfiguration = (runtimeConfig) => {\n    let _retryStrategy = runtimeConfig.retryStrategy;\n    return {\n        setRetryStrategy(retryStrategy) {\n            _retryStrategy = retryStrategy;\n        },\n        retryStrategy() {\n            return _retryStrategy;\n        },\n    };\n};\nexport const resolveRetryRuntimeConfig = (retryStrategyConfiguration) => {\n    const runtimeConfig = {};\n    runtimeConfig.retryStrategy = retryStrategyConfiguration.retryStrategy();\n    return runtimeConfig;\n};\n","import { getChecksumConfiguration, resolveChecksumRuntimeConfig } from \"./checksum\";\nimport { getRetryConfiguration, resolveRetryRuntimeConfig } from \"./retry\";\nexport const getDefaultExtensionConfiguration = (runtimeConfig) => {\n    return {\n        ...getChecksumConfiguration(runtimeConfig),\n        ...getRetryConfiguration(runtimeConfig),\n    };\n};\nexport const getDefaultClientConfiguration = getDefaultExtensionConfiguration;\nexport const resolveDefaultRuntimeConfig = (config) => {\n    return {\n        ...resolveChecksumRuntimeConfig(config),\n        ...resolveRetryRuntimeConfig(config),\n    };\n};\n","export const getValueFromTextNode = (obj) => {\n    const textNodeName = \"#text\";\n    for (const key in obj) {\n        if (obj.hasOwnProperty(key) && obj[key][textNodeName] !== undefined) {\n            obj[key] = obj[key][textNodeName];\n        }\n        else if (typeof obj[key] === \"object\" && obj[key] !== null) {\n            obj[key] = getValueFromTextNode(obj[key]);\n        }\n    }\n    return obj;\n};\n","export const isSerializableHeaderValue = (value) => {\n    return value != null;\n};\n","export class NoOpLogger {\n    trace() { }\n    debug() { }\n    info() { }\n    warn() { }\n    error() { }\n}\n","export function map(arg0, arg1, arg2) {\n    let target;\n    let filter;\n    let instructions;\n    if (typeof arg1 === \"undefined\" && typeof arg2 === \"undefined\") {\n        target = {};\n        instructions = arg0;\n    }\n    else {\n        target = arg0;\n        if (typeof arg1 === \"function\") {\n            filter = arg1;\n            instructions = arg2;\n            return mapWithFilter(target, filter, instructions);\n        }\n        else {\n            instructions = arg1;\n        }\n    }\n    for (const key of Object.keys(instructions)) {\n        if (!Array.isArray(instructions[key])) {\n            target[key] = instructions[key];\n            continue;\n        }\n        applyInstruction(target, null, instructions, key);\n    }\n    return target;\n}\nexport const convertMap = (target) => {\n    const output = {};\n    for (const [k, v] of Object.entries(target || {})) {\n        output[k] = [, v];\n    }\n    return output;\n};\nexport const take = (source, instructions) => {\n    const out = {};\n    for (const key in instructions) {\n        applyInstruction(out, source, instructions, key);\n    }\n    return out;\n};\nconst mapWithFilter = (target, filter, instructions) => {\n    return map(target, Object.entries(instructions).reduce((_instructions, [key, value]) => {\n        if (Array.isArray(value)) {\n            _instructions[key] = value;\n        }\n        else {\n            if (typeof value === \"function\") {\n                _instructions[key] = [filter, value()];\n            }\n            else {\n                _instructions[key] = [filter, value];\n            }\n        }\n        return _instructions;\n    }, {}));\n};\nconst applyInstruction = (target, source, instructions, targetKey) => {\n    if (source !== null) {\n        let instruction = instructions[targetKey];\n        if (typeof instruction === \"function\") {\n            instruction = [, instruction];\n        }\n        const [filter = nonNullish, valueFn = pass, sourceKey = targetKey] = instruction;\n        if ((typeof filter === \"function\" && filter(source[sourceKey])) || (typeof filter !== \"function\" && !!filter)) {\n            target[targetKey] = valueFn(source[sourceKey]);\n        }\n        return;\n    }\n    let [filter, value] = instructions[targetKey];\n    if (typeof value === \"function\") {\n        let _value;\n        const defaultFilterPassed = filter === undefined && (_value = value()) != null;\n        const customFilterPassed = (typeof filter === \"function\" && !!filter(void 0)) || (typeof filter !== \"function\" && !!filter);\n        if (defaultFilterPassed) {\n            target[targetKey] = _value;\n        }\n        else if (customFilterPassed) {\n            target[targetKey] = value();\n        }\n    }\n    else {\n        const defaultFilterPassed = filter === undefined && value != null;\n        const customFilterPassed = (typeof filter === \"function\" && !!filter(value)) || (typeof filter !== \"function\" && !!filter);\n        if (defaultFilterPassed || customFilterPassed) {\n            target[targetKey] = value;\n        }\n    }\n};\nconst nonNullish = (_) => _ != null;\nconst pass = (_) => _;\n","export const _json = (obj) => {\n    if (obj == null) {\n        return {};\n    }\n    if (Array.isArray(obj)) {\n        return obj.filter((_) => _ != null).map(_json);\n    }\n    if (typeof obj === \"object\") {\n        const target = {};\n        for (const key of Object.keys(obj)) {\n            if (obj[key] == null) {\n                continue;\n            }\n            target[key] = _json(obj[key]);\n        }\n        return target;\n    }\n    return obj;\n};\n","import { collectBody } from \"@smithy/smithy-client\";\nexport const collectBodyString = (streamBody, context) => collectBody(streamBody, context).then((body) => context.utf8Encoder(body));\n","import { collectBodyString } from \"../common\";\nexport const parseJsonBody = (streamBody, context) => collectBodyString(streamBody, context).then((encoded) => {\n    if (encoded.length) {\n        try {\n            return JSON.parse(encoded);\n        }\n        catch (e) {\n            if (e?.name === \"SyntaxError\") {\n                Object.defineProperty(e, \"$responseBodyText\", {\n                    value: encoded,\n                });\n            }\n            throw e;\n        }\n    }\n    return {};\n});\nexport const parseJsonErrorBody = async (errorBody, context) => {\n    const value = await parseJsonBody(errorBody, context);\n    value.message = value.message ?? value.Message;\n    return value;\n};\nexport const loadRestJsonErrorCode = (output, data) => {\n    const findKey = (object, key) => Object.keys(object).find((k) => k.toLowerCase() === key.toLowerCase());\n    const sanitizeErrorCode = (rawValue) => {\n        let cleanValue = rawValue;\n        if (typeof cleanValue === \"number\") {\n            cleanValue = cleanValue.toString();\n        }\n        if (cleanValue.indexOf(\",\") >= 0) {\n            cleanValue = cleanValue.split(\",\")[0];\n        }\n        if (cleanValue.indexOf(\":\") >= 0) {\n            cleanValue = cleanValue.split(\":\")[0];\n        }\n        if (cleanValue.indexOf(\"#\") >= 0) {\n            cleanValue = cleanValue.split(\"#\")[1];\n        }\n        return cleanValue;\n    };\n    const headerKey = findKey(output.headers, \"x-amzn-errortype\");\n    if (headerKey !== undefined) {\n        return sanitizeErrorCode(output.headers[headerKey]);\n    }\n    if (data.code !== undefined) {\n        return sanitizeErrorCode(data.code);\n    }\n    if (data[\"__type\"] !== undefined) {\n        return sanitizeErrorCode(data[\"__type\"]);\n    }\n};\n","'use strict';\n\nconst nameStartChar = ':A-Za-z_\\\\u00C0-\\\\u00D6\\\\u00D8-\\\\u00F6\\\\u00F8-\\\\u02FF\\\\u0370-\\\\u037D\\\\u037F-\\\\u1FFF\\\\u200C-\\\\u200D\\\\u2070-\\\\u218F\\\\u2C00-\\\\u2FEF\\\\u3001-\\\\uD7FF\\\\uF900-\\\\uFDCF\\\\uFDF0-\\\\uFFFD';\nconst nameChar = nameStartChar + '\\\\-.\\\\d\\\\u00B7\\\\u0300-\\\\u036F\\\\u203F-\\\\u2040';\nconst nameRegexp = '[' + nameStartChar + '][' + nameChar + ']*'\nconst regexName = new RegExp('^' + nameRegexp + '$');\n\nconst getAllMatches = function(string, regex) {\n  const matches = [];\n  let match = regex.exec(string);\n  while (match) {\n    const allmatches = [];\n    allmatches.startIndex = regex.lastIndex - match[0].length;\n    const len = match.length;\n    for (let index = 0; index < len; index++) {\n      allmatches.push(match[index]);\n    }\n    matches.push(allmatches);\n    match = regex.exec(string);\n  }\n  return matches;\n};\n\nconst isName = function(string) {\n  const match = regexName.exec(string);\n  return !(match === null || typeof match === 'undefined');\n};\n\nexports.isExist = function(v) {\n  return typeof v !== 'undefined';\n};\n\nexports.isEmptyObject = function(obj) {\n  return Object.keys(obj).length === 0;\n};\n\n/**\n * Copy all the properties of a into b.\n * @param {*} target\n * @param {*} a\n */\nexports.merge = function(target, a, arrayMode) {\n  if (a) {\n    const keys = Object.keys(a); // will return an array of own properties\n    const len = keys.length; //don't make it inline\n    for (let i = 0; i < len; i++) {\n      if (arrayMode === 'strict') {\n        target[keys[i]] = [ a[keys[i]] ];\n      } else {\n        target[keys[i]] = a[keys[i]];\n      }\n    }\n  }\n};\n/* exports.merge =function (b,a){\n  return Object.assign(b,a);\n} */\n\nexports.getValue = function(v) {\n  if (exports.isExist(v)) {\n    return v;\n  } else {\n    return '';\n  }\n};\n\n// const fakeCall = function(a) {return a;};\n// const fakeCallNoReturn = function() {};\n\nexports.isName = isName;\nexports.getAllMatches = getAllMatches;\nexports.nameRegexp = nameRegexp;\n","'use strict';\n\nconst util = require('./util');\n\nconst defaultOptions = {\n  allowBooleanAttributes: false, //A tag can have attributes without any value\n  unpairedTags: []\n};\n\n//const tagsPattern = new RegExp(\"<\\\\/?([\\\\w:\\\\-_\\.]+)\\\\s*\\/?>\",\"g\");\nexports.validate = function (xmlData, options) {\n  options = Object.assign({}, defaultOptions, options);\n\n  //xmlData = xmlData.replace(/(\\r\\n|\\n|\\r)/gm,\"\");//make it single line\n  //xmlData = xmlData.replace(/(^\\s*<\\?xml.*?\\?>)/g,\"\");//Remove XML starting tag\n  //xmlData = xmlData.replace(/(<!DOCTYPE[\\s\\w\\\"\\.\\/\\-\\:]+(\\[.*\\])*\\s*>)/g,\"\");//Remove DOCTYPE\n  const tags = [];\n  let tagFound = false;\n\n  //indicates that the root tag has been closed (aka. depth 0 has been reached)\n  let reachedRoot = false;\n\n  if (xmlData[0] === '\\ufeff') {\n    // check for byte order mark (BOM)\n    xmlData = xmlData.substr(1);\n  }\n  \n  for (let i = 0; i < xmlData.length; i++) {\n\n    if (xmlData[i] === '<' && xmlData[i+1] === '?') {\n      i+=2;\n      i = readPI(xmlData,i);\n      if (i.err) return i;\n    }else if (xmlData[i] === '<') {\n      //starting of tag\n      //read until you reach to '>' avoiding any '>' in attribute value\n      let tagStartPos = i;\n      i++;\n      \n      if (xmlData[i] === '!') {\n        i = readCommentAndCDATA(xmlData, i);\n        continue;\n      } else {\n        let closingTag = false;\n        if (xmlData[i] === '/') {\n          //closing tag\n          closingTag = true;\n          i++;\n        }\n        //read tagname\n        let tagName = '';\n        for (; i < xmlData.length &&\n          xmlData[i] !== '>' &&\n          xmlData[i] !== ' ' &&\n          xmlData[i] !== '\\t' &&\n          xmlData[i] !== '\\n' &&\n          xmlData[i] !== '\\r'; i++\n        ) {\n          tagName += xmlData[i];\n        }\n        tagName = tagName.trim();\n        //console.log(tagName);\n\n        if (tagName[tagName.length - 1] === '/') {\n          //self closing tag without attributes\n          tagName = tagName.substring(0, tagName.length - 1);\n          //continue;\n          i--;\n        }\n        if (!validateTagName(tagName)) {\n          let msg;\n          if (tagName.trim().length === 0) {\n            msg = \"Invalid space after '<'.\";\n          } else {\n            msg = \"Tag '\"+tagName+\"' is an invalid name.\";\n          }\n          return getErrorObject('InvalidTag', msg, getLineNumberForPosition(xmlData, i));\n        }\n\n        const result = readAttributeStr(xmlData, i);\n        if (result === false) {\n          return getErrorObject('InvalidAttr', \"Attributes for '\"+tagName+\"' have open quote.\", getLineNumberForPosition(xmlData, i));\n        }\n        let attrStr = result.value;\n        i = result.index;\n\n        if (attrStr[attrStr.length - 1] === '/') {\n          //self closing tag\n          const attrStrStart = i - attrStr.length;\n          attrStr = attrStr.substring(0, attrStr.length - 1);\n          const isValid = validateAttributeString(attrStr, options);\n          if (isValid === true) {\n            tagFound = true;\n            //continue; //text may presents after self closing tag\n          } else {\n            //the result from the nested function returns the position of the error within the attribute\n            //in order to get the 'true' error line, we need to calculate the position where the attribute begins (i - attrStr.length) and then add the position within the attribute\n            //this gives us the absolute index in the entire xml, which we can use to find the line at last\n            return getErrorObject(isValid.err.code, isValid.err.msg, getLineNumberForPosition(xmlData, attrStrStart + isValid.err.line));\n          }\n        } else if (closingTag) {\n          if (!result.tagClosed) {\n            return getErrorObject('InvalidTag', \"Closing tag '\"+tagName+\"' doesn't have proper closing.\", getLineNumberForPosition(xmlData, i));\n          } else if (attrStr.trim().length > 0) {\n            return getErrorObject('InvalidTag', \"Closing tag '\"+tagName+\"' can't have attributes or invalid starting.\", getLineNumberForPosition(xmlData, tagStartPos));\n          } else if (tags.length === 0) {\n            return getErrorObject('InvalidTag', \"Closing tag '\"+tagName+\"' has not been opened.\", getLineNumberForPosition(xmlData, tagStartPos));\n          } else {\n            const otg = tags.pop();\n            if (tagName !== otg.tagName) {\n              let openPos = getLineNumberForPosition(xmlData, otg.tagStartPos);\n              return getErrorObject('InvalidTag',\n                \"Expected closing tag '\"+otg.tagName+\"' (opened in line \"+openPos.line+\", col \"+openPos.col+\") instead of closing tag '\"+tagName+\"'.\",\n                getLineNumberForPosition(xmlData, tagStartPos));\n            }\n\n            //when there are no more tags, we reached the root level.\n            if (tags.length == 0) {\n              reachedRoot = true;\n            }\n          }\n        } else {\n          const isValid = validateAttributeString(attrStr, options);\n          if (isValid !== true) {\n            //the result from the nested function returns the position of the error within the attribute\n            //in order to get the 'true' error line, we need to calculate the position where the attribute begins (i - attrStr.length) and then add the position within the attribute\n            //this gives us the absolute index in the entire xml, which we can use to find the line at last\n            return getErrorObject(isValid.err.code, isValid.err.msg, getLineNumberForPosition(xmlData, i - attrStr.length + isValid.err.line));\n          }\n\n          //if the root level has been reached before ...\n          if (reachedRoot === true) {\n            return getErrorObject('InvalidXml', 'Multiple possible root nodes found.', getLineNumberForPosition(xmlData, i));\n          } else if(options.unpairedTags.indexOf(tagName) !== -1){\n            //don't push into stack\n          } else {\n            tags.push({tagName, tagStartPos});\n          }\n          tagFound = true;\n        }\n\n        //skip tag text value\n        //It may include comments and CDATA value\n        for (i++; i < xmlData.length; i++) {\n          if (xmlData[i] === '<') {\n            if (xmlData[i + 1] === '!') {\n              //comment or CADATA\n              i++;\n              i = readCommentAndCDATA(xmlData, i);\n              continue;\n            } else if (xmlData[i+1] === '?') {\n              i = readPI(xmlData, ++i);\n              if (i.err) return i;\n            } else{\n              break;\n            }\n          } else if (xmlData[i] === '&') {\n            const afterAmp = validateAmpersand(xmlData, i);\n            if (afterAmp == -1)\n              return getErrorObject('InvalidChar', \"char '&' is not expected.\", getLineNumberForPosition(xmlData, i));\n            i = afterAmp;\n          }else{\n            if (reachedRoot === true && !isWhiteSpace(xmlData[i])) {\n              return getErrorObject('InvalidXml', \"Extra text at the end\", getLineNumberForPosition(xmlData, i));\n            }\n          }\n        } //end of reading tag text value\n        if (xmlData[i] === '<') {\n          i--;\n        }\n      }\n    } else {\n      if ( isWhiteSpace(xmlData[i])) {\n        continue;\n      }\n      return getErrorObject('InvalidChar', \"char '\"+xmlData[i]+\"' is not expected.\", getLineNumberForPosition(xmlData, i));\n    }\n  }\n\n  if (!tagFound) {\n    return getErrorObject('InvalidXml', 'Start tag expected.', 1);\n  }else if (tags.length == 1) {\n      return getErrorObject('InvalidTag', \"Unclosed tag '\"+tags[0].tagName+\"'.\", getLineNumberForPosition(xmlData, tags[0].tagStartPos));\n  }else if (tags.length > 0) {\n      return getErrorObject('InvalidXml', \"Invalid '\"+\n          JSON.stringify(tags.map(t => t.tagName), null, 4).replace(/\\r?\\n/g, '')+\n          \"' found.\", {line: 1, col: 1});\n  }\n\n  return true;\n};\n\nfunction isWhiteSpace(char){\n  return char === ' ' || char === '\\t' || char === '\\n'  || char === '\\r';\n}\n/**\n * Read Processing insstructions and skip\n * @param {*} xmlData\n * @param {*} i\n */\nfunction readPI(xmlData, i) {\n  const start = i;\n  for (; i < xmlData.length; i++) {\n    if (xmlData[i] == '?' || xmlData[i] == ' ') {\n      //tagname\n      const tagname = xmlData.substr(start, i - start);\n      if (i > 5 && tagname === 'xml') {\n        return getErrorObject('InvalidXml', 'XML declaration allowed only at the start of the document.', getLineNumberForPosition(xmlData, i));\n      } else if (xmlData[i] == '?' && xmlData[i + 1] == '>') {\n        //check if valid attribut string\n        i++;\n        break;\n      } else {\n        continue;\n      }\n    }\n  }\n  return i;\n}\n\nfunction readCommentAndCDATA(xmlData, i) {\n  if (xmlData.length > i + 5 && xmlData[i + 1] === '-' && xmlData[i + 2] === '-') {\n    //comment\n    for (i += 3; i < xmlData.length; i++) {\n      if (xmlData[i] === '-' && xmlData[i + 1] === '-' && xmlData[i + 2] === '>') {\n        i += 2;\n        break;\n      }\n    }\n  } else if (\n    xmlData.length > i + 8 &&\n    xmlData[i + 1] === 'D' &&\n    xmlData[i + 2] === 'O' &&\n    xmlData[i + 3] === 'C' &&\n    xmlData[i + 4] === 'T' &&\n    xmlData[i + 5] === 'Y' &&\n    xmlData[i + 6] === 'P' &&\n    xmlData[i + 7] === 'E'\n  ) {\n    let angleBracketsCount = 1;\n    for (i += 8; i < xmlData.length; i++) {\n      if (xmlData[i] === '<') {\n        angleBracketsCount++;\n      } else if (xmlData[i] === '>') {\n        angleBracketsCount--;\n        if (angleBracketsCount === 0) {\n          break;\n        }\n      }\n    }\n  } else if (\n    xmlData.length > i + 9 &&\n    xmlData[i + 1] === '[' &&\n    xmlData[i + 2] === 'C' &&\n    xmlData[i + 3] === 'D' &&\n    xmlData[i + 4] === 'A' &&\n    xmlData[i + 5] === 'T' &&\n    xmlData[i + 6] === 'A' &&\n    xmlData[i + 7] === '['\n  ) {\n    for (i += 8; i < xmlData.length; i++) {\n      if (xmlData[i] === ']' && xmlData[i + 1] === ']' && xmlData[i + 2] === '>') {\n        i += 2;\n        break;\n      }\n    }\n  }\n\n  return i;\n}\n\nconst doubleQuote = '\"';\nconst singleQuote = \"'\";\n\n/**\n * Keep reading xmlData until '<' is found outside the attribute value.\n * @param {string} xmlData\n * @param {number} i\n */\nfunction readAttributeStr(xmlData, i) {\n  let attrStr = '';\n  let startChar = '';\n  let tagClosed = false;\n  for (; i < xmlData.length; i++) {\n    if (xmlData[i] === doubleQuote || xmlData[i] === singleQuote) {\n      if (startChar === '') {\n        startChar = xmlData[i];\n      } else if (startChar !== xmlData[i]) {\n        //if vaue is enclosed with double quote then single quotes are allowed inside the value and vice versa\n      } else {\n        startChar = '';\n      }\n    } else if (xmlData[i] === '>') {\n      if (startChar === '') {\n        tagClosed = true;\n        break;\n      }\n    }\n    attrStr += xmlData[i];\n  }\n  if (startChar !== '') {\n    return false;\n  }\n\n  return {\n    value: attrStr,\n    index: i,\n    tagClosed: tagClosed\n  };\n}\n\n/**\n * Select all the attributes whether valid or invalid.\n */\nconst validAttrStrRegxp = new RegExp('(\\\\s*)([^\\\\s=]+)(\\\\s*=)?(\\\\s*([\\'\"])(([\\\\s\\\\S])*?)\\\\5)?', 'g');\n\n//attr, =\"sd\", a=\"amit's\", a=\"sd\"b=\"saf\", ab  cd=\"\"\n\nfunction validateAttributeString(attrStr, options) {\n  //console.log(\"start:\"+attrStr+\":end\");\n\n  //if(attrStr.trim().length === 0) return true; //empty string\n\n  const matches = util.getAllMatches(attrStr, validAttrStrRegxp);\n  const attrNames = {};\n\n  for (let i = 0; i < matches.length; i++) {\n    if (matches[i][1].length === 0) {\n      //nospace before attribute name: a=\"sd\"b=\"saf\"\n      return getErrorObject('InvalidAttr', \"Attribute '\"+matches[i][2]+\"' has no space in starting.\", getPositionFromMatch(matches[i]))\n    } else if (matches[i][3] !== undefined && matches[i][4] === undefined) {\n      return getErrorObject('InvalidAttr', \"Attribute '\"+matches[i][2]+\"' is without value.\", getPositionFromMatch(matches[i]));\n    } else if (matches[i][3] === undefined && !options.allowBooleanAttributes) {\n      //independent attribute: ab\n      return getErrorObject('InvalidAttr', \"boolean attribute '\"+matches[i][2]+\"' is not allowed.\", getPositionFromMatch(matches[i]));\n    }\n    /* else if(matches[i][6] === undefined){//attribute without value: ab=\n                    return { err: { code:\"InvalidAttr\",msg:\"attribute \" + matches[i][2] + \" has no value assigned.\"}};\n                } */\n    const attrName = matches[i][2];\n    if (!validateAttrName(attrName)) {\n      return getErrorObject('InvalidAttr', \"Attribute '\"+attrName+\"' is an invalid name.\", getPositionFromMatch(matches[i]));\n    }\n    if (!attrNames.hasOwnProperty(attrName)) {\n      //check for duplicate attribute.\n      attrNames[attrName] = 1;\n    } else {\n      return getErrorObject('InvalidAttr', \"Attribute '\"+attrName+\"' is repeated.\", getPositionFromMatch(matches[i]));\n    }\n  }\n\n  return true;\n}\n\nfunction validateNumberAmpersand(xmlData, i) {\n  let re = /\\d/;\n  if (xmlData[i] === 'x') {\n    i++;\n    re = /[\\da-fA-F]/;\n  }\n  for (; i < xmlData.length; i++) {\n    if (xmlData[i] === ';')\n      return i;\n    if (!xmlData[i].match(re))\n      break;\n  }\n  return -1;\n}\n\nfunction validateAmpersand(xmlData, i) {\n  // https://www.w3.org/TR/xml/#dt-charref\n  i++;\n  if (xmlData[i] === ';')\n    return -1;\n  if (xmlData[i] === '#') {\n    i++;\n    return validateNumberAmpersand(xmlData, i);\n  }\n  let count = 0;\n  for (; i < xmlData.length; i++, count++) {\n    if (xmlData[i].match(/\\w/) && count < 20)\n      continue;\n    if (xmlData[i] === ';')\n      break;\n    return -1;\n  }\n  return i;\n}\n\nfunction getErrorObject(code, message, lineNumber) {\n  return {\n    err: {\n      code: code,\n      msg: message,\n      line: lineNumber.line || lineNumber,\n      col: lineNumber.col,\n    },\n  };\n}\n\nfunction validateAttrName(attrName) {\n  return util.isName(attrName);\n}\n\n// const startsWithXML = /^xml/i;\n\nfunction validateTagName(tagname) {\n  return util.isName(tagname) /* && !tagname.match(startsWithXML) */;\n}\n\n//this function returns the line number for the character at the given index\nfunction getLineNumberForPosition(xmlData, index) {\n  const lines = xmlData.substring(0, index).split(/\\r?\\n/);\n  return {\n    line: lines.length,\n\n    // column number is last line's length + 1, because column numbering starts at 1:\n    col: lines[lines.length - 1].length + 1\n  };\n}\n\n//this function returns the position of the first character of match within attrStr\nfunction getPositionFromMatch(match) {\n  return match.startIndex + match[1].length;\n}\n","\nconst defaultOptions = {\n    preserveOrder: false,\n    attributeNamePrefix: '@_',\n    attributesGroupName: false,\n    textNodeName: '#text',\n    ignoreAttributes: true,\n    removeNSPrefix: false, // remove NS from tag name or attribute name if true\n    allowBooleanAttributes: false, //a tag can have attributes without any value\n    //ignoreRootElement : false,\n    parseTagValue: true,\n    parseAttributeValue: false,\n    trimValues: true, //Trim string values of tag and attributes\n    cdataPropName: false,\n    numberParseOptions: {\n      hex: true,\n      leadingZeros: true,\n      eNotation: true\n    },\n    tagValueProcessor: function(tagName, val) {\n      return val;\n    },\n    attributeValueProcessor: function(attrName, val) {\n      return val;\n    },\n    stopNodes: [], //nested tags will not be parsed even for errors\n    alwaysCreateTextNode: false,\n    isArray: () => false,\n    commentPropName: false,\n    unpairedTags: [],\n    processEntities: true,\n    htmlEntities: false,\n    ignoreDeclaration: false,\n    ignorePiTags: false,\n    transformTagName: false,\n    transformAttributeName: false,\n    updateTag: function(tagName, jPath, attrs){\n      return tagName\n    },\n    // skipEmptyListItem: false\n};\n   \nconst buildOptions = function(options) {\n    return Object.assign({}, defaultOptions, options);\n};\n\nexports.buildOptions = buildOptions;\nexports.defaultOptions = defaultOptions;","'use strict';\n\nclass XmlNode{\n  constructor(tagname) {\n    this.tagname = tagname;\n    this.child = []; //nested tags, text, cdata, comments in order\n    this[\":@\"] = {}; //attributes map\n  }\n  add(key,val){\n    // this.child.push( {name : key, val: val, isCdata: isCdata });\n    if(key === \"__proto__\") key = \"#__proto__\";\n    this.child.push( {[key]: val });\n  }\n  addChild(node) {\n    if(node.tagname === \"__proto__\") node.tagname = \"#__proto__\";\n    if(node[\":@\"] && Object.keys(node[\":@\"]).length > 0){\n      this.child.push( { [node.tagname]: node.child, [\":@\"]: node[\":@\"] });\n    }else{\n      this.child.push( { [node.tagname]: node.child });\n    }\n  };\n};\n\n\nmodule.exports = XmlNode;","const util = require('../util');\n\n//TODO: handle comments\nfunction readDocType(xmlData, i){\n    \n    const entities = {};\n    if( xmlData[i + 3] === 'O' &&\n         xmlData[i + 4] === 'C' &&\n         xmlData[i + 5] === 'T' &&\n         xmlData[i + 6] === 'Y' &&\n         xmlData[i + 7] === 'P' &&\n         xmlData[i + 8] === 'E')\n    {    \n        i = i+9;\n        let angleBracketsCount = 1;\n        let hasBody = false, comment = false;\n        let exp = \"\";\n        for(;i<xmlData.length;i++){\n            if (xmlData[i] === '<' && !comment) { //Determine the tag type\n                if( hasBody && isEntity(xmlData, i)){\n                    i += 7; \n                    [entityName, val,i] = readEntityExp(xmlData,i+1);\n                    if(val.indexOf(\"&\") === -1) //Parameter entities are not supported\n                        entities[ validateEntityName(entityName) ] = {\n                            regx : RegExp( `&${entityName};`,\"g\"),\n                            val: val\n                        };\n                }\n                else if( hasBody && isElement(xmlData, i))  i += 8;//Not supported\n                else if( hasBody && isAttlist(xmlData, i))  i += 8;//Not supported\n                else if( hasBody && isNotation(xmlData, i)) i += 9;//Not supported\n                else if( isComment)                         comment = true;\n                else                                        throw new Error(\"Invalid DOCTYPE\");\n\n                angleBracketsCount++;\n                exp = \"\";\n            } else if (xmlData[i] === '>') { //Read tag content\n                if(comment){\n                    if( xmlData[i - 1] === \"-\" && xmlData[i - 2] === \"-\"){\n                        comment = false;\n                        angleBracketsCount--;\n                    }\n                }else{\n                    angleBracketsCount--;\n                }\n                if (angleBracketsCount === 0) {\n                  break;\n                }\n            }else if( xmlData[i] === '['){\n                hasBody = true;\n            }else{\n                exp += xmlData[i];\n            }\n        }\n        if(angleBracketsCount !== 0){\n            throw new Error(`Unclosed DOCTYPE`);\n        }\n    }else{\n        throw new Error(`Invalid Tag instead of DOCTYPE`);\n    }\n    return {entities, i};\n}\n\nfunction readEntityExp(xmlData,i){\n    //External entities are not supported\n    //    <!ENTITY ext SYSTEM \"http://normal-website.com\" >\n\n    //Parameter entities are not supported\n    //    <!ENTITY entityname \"&anotherElement;\">\n\n    //Internal entities are supported\n    //    <!ENTITY entityname \"replacement text\">\n    \n    //read EntityName\n    let entityName = \"\";\n    for (; i < xmlData.length && (xmlData[i] !== \"'\" && xmlData[i] !== '\"' ); i++) {\n        // if(xmlData[i] === \" \") continue;\n        // else \n        entityName += xmlData[i];\n    }\n    entityName = entityName.trim();\n    if(entityName.indexOf(\" \") !== -1) throw new Error(\"External entites are not supported\");\n\n    //read Entity Value\n    const startChar = xmlData[i++];\n    let val = \"\"\n    for (; i < xmlData.length && xmlData[i] !== startChar ; i++) {\n        val += xmlData[i];\n    }\n    return [entityName, val, i];\n}\n\nfunction isComment(xmlData, i){\n    if(xmlData[i+1] === '!' &&\n    xmlData[i+2] === '-' &&\n    xmlData[i+3] === '-') return true\n    return false\n}\nfunction isEntity(xmlData, i){\n    if(xmlData[i+1] === '!' &&\n    xmlData[i+2] === 'E' &&\n    xmlData[i+3] === 'N' &&\n    xmlData[i+4] === 'T' &&\n    xmlData[i+5] === 'I' &&\n    xmlData[i+6] === 'T' &&\n    xmlData[i+7] === 'Y') return true\n    return false\n}\nfunction isElement(xmlData, i){\n    if(xmlData[i+1] === '!' &&\n    xmlData[i+2] === 'E' &&\n    xmlData[i+3] === 'L' &&\n    xmlData[i+4] === 'E' &&\n    xmlData[i+5] === 'M' &&\n    xmlData[i+6] === 'E' &&\n    xmlData[i+7] === 'N' &&\n    xmlData[i+8] === 'T') return true\n    return false\n}\n\nfunction isAttlist(xmlData, i){\n    if(xmlData[i+1] === '!' &&\n    xmlData[i+2] === 'A' &&\n    xmlData[i+3] === 'T' &&\n    xmlData[i+4] === 'T' &&\n    xmlData[i+5] === 'L' &&\n    xmlData[i+6] === 'I' &&\n    xmlData[i+7] === 'S' &&\n    xmlData[i+8] === 'T') return true\n    return false\n}\nfunction isNotation(xmlData, i){\n    if(xmlData[i+1] === '!' &&\n    xmlData[i+2] === 'N' &&\n    xmlData[i+3] === 'O' &&\n    xmlData[i+4] === 'T' &&\n    xmlData[i+5] === 'A' &&\n    xmlData[i+6] === 'T' &&\n    xmlData[i+7] === 'I' &&\n    xmlData[i+8] === 'O' &&\n    xmlData[i+9] === 'N') return true\n    return false\n}\n\nfunction validateEntityName(name){\n    if (util.isName(name))\n\treturn name;\n    else\n        throw new Error(`Invalid entity name ${name}`);\n}\n\nmodule.exports = readDocType;\n","const hexRegex = /^[-+]?0x[a-fA-F0-9]+$/;\nconst numRegex = /^([\\-\\+])?(0*)(\\.[0-9]+([eE]\\-?[0-9]+)?|[0-9]+(\\.[0-9]+([eE]\\-?[0-9]+)?)?)$/;\n// const octRegex = /0x[a-z0-9]+/;\n// const binRegex = /0x[a-z0-9]+/;\n\n\n//polyfill\nif (!Number.parseInt && window.parseInt) {\n    Number.parseInt = window.parseInt;\n}\nif (!Number.parseFloat && window.parseFloat) {\n    Number.parseFloat = window.parseFloat;\n}\n\n  \nconst consider = {\n    hex :  true,\n    leadingZeros: true,\n    decimalPoint: \"\\.\",\n    eNotation: true\n    //skipLike: /regex/\n};\n\nfunction toNumber(str, options = {}){\n    // const options = Object.assign({}, consider);\n    // if(opt.leadingZeros === false){\n    //     options.leadingZeros = false;\n    // }else if(opt.hex === false){\n    //     options.hex = false;\n    // }\n\n    options = Object.assign({}, consider, options );\n    if(!str || typeof str !== \"string\" ) return str;\n    \n    let trimmedStr  = str.trim();\n    // if(trimmedStr === \"0.0\") return 0;\n    // else if(trimmedStr === \"+0.0\") return 0;\n    // else if(trimmedStr === \"-0.0\") return -0;\n\n    if(options.skipLike !== undefined && options.skipLike.test(trimmedStr)) return str;\n    else if (options.hex && hexRegex.test(trimmedStr)) {\n        return Number.parseInt(trimmedStr, 16);\n    // } else if (options.parseOct && octRegex.test(str)) {\n    //     return Number.parseInt(val, 8);\n    // }else if (options.parseBin && binRegex.test(str)) {\n    //     return Number.parseInt(val, 2);\n    }else{\n        //separate negative sign, leading zeros, and rest number\n        const match = numRegex.exec(trimmedStr);\n        if(match){\n            const sign = match[1];\n            const leadingZeros = match[2];\n            let numTrimmedByZeros = trimZeros(match[3]); //complete num without leading zeros\n            //trim ending zeros for floating number\n            \n            const eNotation = match[4] || match[6];\n            if(!options.leadingZeros && leadingZeros.length > 0 && sign && trimmedStr[2] !== \".\") return str; //-0123\n            else if(!options.leadingZeros && leadingZeros.length > 0 && !sign && trimmedStr[1] !== \".\") return str; //0123\n            else{//no leading zeros or leading zeros are allowed\n                const num = Number(trimmedStr);\n                const numStr = \"\" + num;\n                if(numStr.search(/[eE]/) !== -1){ //given number is long and parsed to eNotation\n                    if(options.eNotation) return num;\n                    else return str;\n                }else if(eNotation){ //given number has enotation\n                    if(options.eNotation) return num;\n                    else return str;\n                }else if(trimmedStr.indexOf(\".\") !== -1){ //floating number\n                    // const decimalPart = match[5].substr(1);\n                    // const intPart = trimmedStr.substr(0,trimmedStr.indexOf(\".\"));\n\n                    \n                    // const p = numStr.indexOf(\".\");\n                    // const givenIntPart = numStr.substr(0,p);\n                    // const givenDecPart = numStr.substr(p+1);\n                    if(numStr === \"0\" && (numTrimmedByZeros === \"\") ) return num; //0.0\n                    else if(numStr === numTrimmedByZeros) return num; //0.456. 0.79000\n                    else if( sign && numStr === \"-\"+numTrimmedByZeros) return num;\n                    else return str;\n                }\n                \n                if(leadingZeros){\n                    // if(numTrimmedByZeros === numStr){\n                    //     if(options.leadingZeros) return num;\n                    //     else return str;\n                    // }else return str;\n                    if(numTrimmedByZeros === numStr) return num;\n                    else if(sign+numTrimmedByZeros === numStr) return num;\n                    else return str;\n                }\n\n                if(trimmedStr === numStr) return num;\n                else if(trimmedStr === sign+numStr) return num;\n                // else{\n                //     //number with +/- sign\n                //     trimmedStr.test(/[-+][0-9]);\n\n                // }\n                return str;\n            }\n            // else if(!eNotation && trimmedStr && trimmedStr !== Number(trimmedStr) ) return str;\n            \n        }else{ //non-numeric string\n            return str;\n        }\n    }\n}\n\n/**\n * \n * @param {string} numStr without leading zeros\n * @returns \n */\nfunction trimZeros(numStr){\n    if(numStr && numStr.indexOf(\".\") !== -1){//float\n        numStr = numStr.replace(/0+$/, \"\"); //remove ending zeros\n        if(numStr === \".\")  numStr = \"0\";\n        else if(numStr[0] === \".\")  numStr = \"0\"+numStr;\n        else if(numStr[numStr.length-1] === \".\")  numStr = numStr.substr(0,numStr.length-1);\n        return numStr;\n    }\n    return numStr;\n}\nmodule.exports = toNumber\n","'use strict';\n///@ts-check\n\nconst util = require('../util');\nconst xmlNode = require('./xmlNode');\nconst readDocType = require(\"./DocTypeReader\");\nconst toNumber = require(\"strnum\");\n\n// const regx =\n//   '<((!\\\\[CDATA\\\\[([\\\\s\\\\S]*?)(]]>))|((NAME:)?(NAME))([^>]*)>|((\\\\/)(NAME)\\\\s*>))([^<]*)'\n//   .replace(/NAME/g, util.nameRegexp);\n\n//const tagsRegx = new RegExp(\"<(\\\\/?[\\\\w:\\\\-\\._]+)([^>]*)>(\\\\s*\"+cdataRegx+\")*([^<]+)?\",\"g\");\n//const tagsRegx = new RegExp(\"<(\\\\/?)((\\\\w*:)?([\\\\w:\\\\-\\._]+))([^>]*)>([^<]*)(\"+cdataRegx+\"([^<]*))*([^<]+)?\",\"g\");\n\nclass OrderedObjParser{\n  constructor(options){\n    this.options = options;\n    this.currentNode = null;\n    this.tagsNodeStack = [];\n    this.docTypeEntities = {};\n    this.lastEntities = {\n      \"apos\" : { regex: /&(apos|#39|#x27);/g, val : \"'\"},\n      \"gt\" : { regex: /&(gt|#62|#x3E);/g, val : \">\"},\n      \"lt\" : { regex: /&(lt|#60|#x3C);/g, val : \"<\"},\n      \"quot\" : { regex: /&(quot|#34|#x22);/g, val : \"\\\"\"},\n    };\n    this.ampEntity = { regex: /&(amp|#38|#x26);/g, val : \"&\"};\n    this.htmlEntities = {\n      \"space\": { regex: /&(nbsp|#160);/g, val: \" \" },\n      // \"lt\" : { regex: /&(lt|#60);/g, val: \"<\" },\n      // \"gt\" : { regex: /&(gt|#62);/g, val: \">\" },\n      // \"amp\" : { regex: /&(amp|#38);/g, val: \"&\" },\n      // \"quot\" : { regex: /&(quot|#34);/g, val: \"\\\"\" },\n      // \"apos\" : { regex: /&(apos|#39);/g, val: \"'\" },\n      \"cent\" : { regex: /&(cent|#162);/g, val: \"¢\" },\n      \"pound\" : { regex: /&(pound|#163);/g, val: \"£\" },\n      \"yen\" : { regex: /&(yen|#165);/g, val: \"¥\" },\n      \"euro\" : { regex: /&(euro|#8364);/g, val: \"€\" },\n      \"copyright\" : { regex: /&(copy|#169);/g, val: \"©\" },\n      \"reg\" : { regex: /&(reg|#174);/g, val: \"®\" },\n      \"inr\" : { regex: /&(inr|#8377);/g, val: \"₹\" },\n      \"num_dec\": { regex: /&#([0-9]{1,7});/g, val : (_, str) => String.fromCharCode(Number.parseInt(str, 10)) },\n      \"num_hex\": { regex: /&#x([0-9a-fA-F]{1,6});/g, val : (_, str) => String.fromCharCode(Number.parseInt(str, 16)) },\n    };\n    this.addExternalEntities = addExternalEntities;\n    this.parseXml = parseXml;\n    this.parseTextData = parseTextData;\n    this.resolveNameSpace = resolveNameSpace;\n    this.buildAttributesMap = buildAttributesMap;\n    this.isItStopNode = isItStopNode;\n    this.replaceEntitiesValue = replaceEntitiesValue;\n    this.readStopNodeData = readStopNodeData;\n    this.saveTextToParentTag = saveTextToParentTag;\n    this.addChild = addChild;\n  }\n\n}\n\nfunction addExternalEntities(externalEntities){\n  const entKeys = Object.keys(externalEntities);\n  for (let i = 0; i < entKeys.length; i++) {\n    const ent = entKeys[i];\n    this.lastEntities[ent] = {\n       regex: new RegExp(\"&\"+ent+\";\",\"g\"),\n       val : externalEntities[ent]\n    }\n  }\n}\n\n/**\n * @param {string} val\n * @param {string} tagName\n * @param {string} jPath\n * @param {boolean} dontTrim\n * @param {boolean} hasAttributes\n * @param {boolean} isLeafNode\n * @param {boolean} escapeEntities\n */\nfunction parseTextData(val, tagName, jPath, dontTrim, hasAttributes, isLeafNode, escapeEntities) {\n  if (val !== undefined) {\n    if (this.options.trimValues && !dontTrim) {\n      val = val.trim();\n    }\n    if(val.length > 0){\n      if(!escapeEntities) val = this.replaceEntitiesValue(val);\n      \n      const newval = this.options.tagValueProcessor(tagName, val, jPath, hasAttributes, isLeafNode);\n      if(newval === null || newval === undefined){\n        //don't parse\n        return val;\n      }else if(typeof newval !== typeof val || newval !== val){\n        //overwrite\n        return newval;\n      }else if(this.options.trimValues){\n        return parseValue(val, this.options.parseTagValue, this.options.numberParseOptions);\n      }else{\n        const trimmedVal = val.trim();\n        if(trimmedVal === val){\n          return parseValue(val, this.options.parseTagValue, this.options.numberParseOptions);\n        }else{\n          return val;\n        }\n      }\n    }\n  }\n}\n\nfunction resolveNameSpace(tagname) {\n  if (this.options.removeNSPrefix) {\n    const tags = tagname.split(':');\n    const prefix = tagname.charAt(0) === '/' ? '/' : '';\n    if (tags[0] === 'xmlns') {\n      return '';\n    }\n    if (tags.length === 2) {\n      tagname = prefix + tags[1];\n    }\n  }\n  return tagname;\n}\n\n//TODO: change regex to capture NS\n//const attrsRegx = new RegExp(\"([\\\\w\\\\-\\\\.\\\\:]+)\\\\s*=\\\\s*(['\\\"])((.|\\n)*?)\\\\2\",\"gm\");\nconst attrsRegx = new RegExp('([^\\\\s=]+)\\\\s*(=\\\\s*([\\'\"])([\\\\s\\\\S]*?)\\\\3)?', 'gm');\n\nfunction buildAttributesMap(attrStr, jPath, tagName) {\n  if (!this.options.ignoreAttributes && typeof attrStr === 'string') {\n    // attrStr = attrStr.replace(/\\r?\\n/g, ' ');\n    //attrStr = attrStr || attrStr.trim();\n\n    const matches = util.getAllMatches(attrStr, attrsRegx);\n    const len = matches.length; //don't make it inline\n    const attrs = {};\n    for (let i = 0; i < len; i++) {\n      const attrName = this.resolveNameSpace(matches[i][1]);\n      let oldVal = matches[i][4];\n      let aName = this.options.attributeNamePrefix + attrName;\n      if (attrName.length) {\n        if (this.options.transformAttributeName) {\n          aName = this.options.transformAttributeName(aName);\n        }\n        if(aName === \"__proto__\") aName  = \"#__proto__\";\n        if (oldVal !== undefined) {\n          if (this.options.trimValues) {\n            oldVal = oldVal.trim();\n          }\n          oldVal = this.replaceEntitiesValue(oldVal);\n          const newVal = this.options.attributeValueProcessor(attrName, oldVal, jPath);\n          if(newVal === null || newVal === undefined){\n            //don't parse\n            attrs[aName] = oldVal;\n          }else if(typeof newVal !== typeof oldVal || newVal !== oldVal){\n            //overwrite\n            attrs[aName] = newVal;\n          }else{\n            //parse\n            attrs[aName] = parseValue(\n              oldVal,\n              this.options.parseAttributeValue,\n              this.options.numberParseOptions\n            );\n          }\n        } else if (this.options.allowBooleanAttributes) {\n          attrs[aName] = true;\n        }\n      }\n    }\n    if (!Object.keys(attrs).length) {\n      return;\n    }\n    if (this.options.attributesGroupName) {\n      const attrCollection = {};\n      attrCollection[this.options.attributesGroupName] = attrs;\n      return attrCollection;\n    }\n    return attrs\n  }\n}\n\nconst parseXml = function(xmlData) {\n  xmlData = xmlData.replace(/\\r\\n?/g, \"\\n\"); //TODO: remove this line\n  const xmlObj = new xmlNode('!xml');\n  let currentNode = xmlObj;\n  let textData = \"\";\n  let jPath = \"\";\n  for(let i=0; i< xmlData.length; i++){//for each char in XML data\n    const ch = xmlData[i];\n    if(ch === '<'){\n      // const nextIndex = i+1;\n      // const _2ndChar = xmlData[nextIndex];\n      if( xmlData[i+1] === '/') {//Closing Tag\n        const closeIndex = findClosingIndex(xmlData, \">\", i, \"Closing Tag is not closed.\")\n        let tagName = xmlData.substring(i+2,closeIndex).trim();\n\n        if(this.options.removeNSPrefix){\n          const colonIndex = tagName.indexOf(\":\");\n          if(colonIndex !== -1){\n            tagName = tagName.substr(colonIndex+1);\n          }\n        }\n\n        if(this.options.transformTagName) {\n          tagName = this.options.transformTagName(tagName);\n        }\n\n        if(currentNode){\n          textData = this.saveTextToParentTag(textData, currentNode, jPath);\n        }\n\n        //check if last tag of nested tag was unpaired tag\n        const lastTagName = jPath.substring(jPath.lastIndexOf(\".\")+1);\n        if(tagName && this.options.unpairedTags.indexOf(tagName) !== -1 ){\n          throw new Error(`Unpaired tag can not be used as closing tag: </${tagName}>`);\n        }\n        let propIndex = 0\n        if(lastTagName && this.options.unpairedTags.indexOf(lastTagName) !== -1 ){\n          propIndex = jPath.lastIndexOf('.', jPath.lastIndexOf('.')-1)\n          this.tagsNodeStack.pop();\n        }else{\n          propIndex = jPath.lastIndexOf(\".\");\n        }\n        jPath = jPath.substring(0, propIndex);\n\n        currentNode = this.tagsNodeStack.pop();//avoid recursion, set the parent tag scope\n        textData = \"\";\n        i = closeIndex;\n      } else if( xmlData[i+1] === '?') {\n\n        let tagData = readTagExp(xmlData,i, false, \"?>\");\n        if(!tagData) throw new Error(\"Pi Tag is not closed.\");\n\n        textData = this.saveTextToParentTag(textData, currentNode, jPath);\n        if( (this.options.ignoreDeclaration && tagData.tagName === \"?xml\") || this.options.ignorePiTags){\n\n        }else{\n  \n          const childNode = new xmlNode(tagData.tagName);\n          childNode.add(this.options.textNodeName, \"\");\n          \n          if(tagData.tagName !== tagData.tagExp && tagData.attrExpPresent){\n            childNode[\":@\"] = this.buildAttributesMap(tagData.tagExp, jPath, tagData.tagName);\n          }\n          this.addChild(currentNode, childNode, jPath)\n\n        }\n\n\n        i = tagData.closeIndex + 1;\n      } else if(xmlData.substr(i + 1, 3) === '!--') {\n        const endIndex = findClosingIndex(xmlData, \"-->\", i+4, \"Comment is not closed.\")\n        if(this.options.commentPropName){\n          const comment = xmlData.substring(i + 4, endIndex - 2);\n\n          textData = this.saveTextToParentTag(textData, currentNode, jPath);\n\n          currentNode.add(this.options.commentPropName, [ { [this.options.textNodeName] : comment } ]);\n        }\n        i = endIndex;\n      } else if( xmlData.substr(i + 1, 2) === '!D') {\n        const result = readDocType(xmlData, i);\n        this.docTypeEntities = result.entities;\n        i = result.i;\n      }else if(xmlData.substr(i + 1, 2) === '![') {\n        const closeIndex = findClosingIndex(xmlData, \"]]>\", i, \"CDATA is not closed.\") - 2;\n        const tagExp = xmlData.substring(i + 9,closeIndex);\n\n        textData = this.saveTextToParentTag(textData, currentNode, jPath);\n\n        let val = this.parseTextData(tagExp, currentNode.tagname, jPath, true, false, true, true);\n        if(val == undefined) val = \"\";\n\n        //cdata should be set even if it is 0 length string\n        if(this.options.cdataPropName){\n          currentNode.add(this.options.cdataPropName, [ { [this.options.textNodeName] : tagExp } ]);\n        }else{\n          currentNode.add(this.options.textNodeName, val);\n        }\n        \n        i = closeIndex + 2;\n      }else {//Opening tag\n        let result = readTagExp(xmlData,i, this.options.removeNSPrefix);\n        let tagName= result.tagName;\n        const rawTagName = result.rawTagName;\n        let tagExp = result.tagExp;\n        let attrExpPresent = result.attrExpPresent;\n        let closeIndex = result.closeIndex;\n\n        if (this.options.transformTagName) {\n          tagName = this.options.transformTagName(tagName);\n        }\n        \n        //save text as child node\n        if (currentNode && textData) {\n          if(currentNode.tagname !== '!xml'){\n            //when nested tag is found\n            textData = this.saveTextToParentTag(textData, currentNode, jPath, false);\n          }\n        }\n\n        //check if last tag was unpaired tag\n        const lastTag = currentNode;\n        if(lastTag && this.options.unpairedTags.indexOf(lastTag.tagname) !== -1 ){\n          currentNode = this.tagsNodeStack.pop();\n          jPath = jPath.substring(0, jPath.lastIndexOf(\".\"));\n        }\n        if(tagName !== xmlObj.tagname){\n          jPath += jPath ? \".\" + tagName : tagName;\n        }\n        if (this.isItStopNode(this.options.stopNodes, jPath, tagName)) {\n          let tagContent = \"\";\n          //self-closing tag\n          if(tagExp.length > 0 && tagExp.lastIndexOf(\"/\") === tagExp.length - 1){\n            if(tagName[tagName.length - 1] === \"/\"){ //remove trailing '/'\n              tagName = tagName.substr(0, tagName.length - 1);\n              jPath = jPath.substr(0, jPath.length - 1);\n              tagExp = tagName;\n            }else{\n              tagExp = tagExp.substr(0, tagExp.length - 1);\n            }\n            i = result.closeIndex;\n          }\n          //unpaired tag\n          else if(this.options.unpairedTags.indexOf(tagName) !== -1){\n            \n            i = result.closeIndex;\n          }\n          //normal tag\n          else{\n            //read until closing tag is found\n            const result = this.readStopNodeData(xmlData, rawTagName, closeIndex + 1);\n            if(!result) throw new Error(`Unexpected end of ${rawTagName}`);\n            i = result.i;\n            tagContent = result.tagContent;\n          }\n\n          const childNode = new xmlNode(tagName);\n          if(tagName !== tagExp && attrExpPresent){\n            childNode[\":@\"] = this.buildAttributesMap(tagExp, jPath, tagName);\n          }\n          if(tagContent) {\n            tagContent = this.parseTextData(tagContent, tagName, jPath, true, attrExpPresent, true, true);\n          }\n          \n          jPath = jPath.substr(0, jPath.lastIndexOf(\".\"));\n          childNode.add(this.options.textNodeName, tagContent);\n          \n          this.addChild(currentNode, childNode, jPath)\n        }else{\n  //selfClosing tag\n          if(tagExp.length > 0 && tagExp.lastIndexOf(\"/\") === tagExp.length - 1){\n            if(tagName[tagName.length - 1] === \"/\"){ //remove trailing '/'\n              tagName = tagName.substr(0, tagName.length - 1);\n              jPath = jPath.substr(0, jPath.length - 1);\n              tagExp = tagName;\n            }else{\n              tagExp = tagExp.substr(0, tagExp.length - 1);\n            }\n            \n            if(this.options.transformTagName) {\n              tagName = this.options.transformTagName(tagName);\n            }\n\n            const childNode = new xmlNode(tagName);\n            if(tagName !== tagExp && attrExpPresent){\n              childNode[\":@\"] = this.buildAttributesMap(tagExp, jPath, tagName);\n            }\n            this.addChild(currentNode, childNode, jPath)\n            jPath = jPath.substr(0, jPath.lastIndexOf(\".\"));\n          }\n    //opening tag\n          else{\n            const childNode = new xmlNode( tagName);\n            this.tagsNodeStack.push(currentNode);\n            \n            if(tagName !== tagExp && attrExpPresent){\n              childNode[\":@\"] = this.buildAttributesMap(tagExp, jPath, tagName);\n            }\n            this.addChild(currentNode, childNode, jPath)\n            currentNode = childNode;\n          }\n          textData = \"\";\n          i = closeIndex;\n        }\n      }\n    }else{\n      textData += xmlData[i];\n    }\n  }\n  return xmlObj.child;\n}\n\nfunction addChild(currentNode, childNode, jPath){\n  const result = this.options.updateTag(childNode.tagname, jPath, childNode[\":@\"])\n  if(result === false){\n  }else if(typeof result === \"string\"){\n    childNode.tagname = result\n    currentNode.addChild(childNode);\n  }else{\n    currentNode.addChild(childNode);\n  }\n}\n\nconst replaceEntitiesValue = function(val){\n\n  if(this.options.processEntities){\n    for(let entityName in this.docTypeEntities){\n      const entity = this.docTypeEntities[entityName];\n      val = val.replace( entity.regx, entity.val);\n    }\n    for(let entityName in this.lastEntities){\n      const entity = this.lastEntities[entityName];\n      val = val.replace( entity.regex, entity.val);\n    }\n    if(this.options.htmlEntities){\n      for(let entityName in this.htmlEntities){\n        const entity = this.htmlEntities[entityName];\n        val = val.replace( entity.regex, entity.val);\n      }\n    }\n    val = val.replace( this.ampEntity.regex, this.ampEntity.val);\n  }\n  return val;\n}\nfunction saveTextToParentTag(textData, currentNode, jPath, isLeafNode) {\n  if (textData) { //store previously collected data as textNode\n    if(isLeafNode === undefined) isLeafNode = Object.keys(currentNode.child).length === 0\n    \n    textData = this.parseTextData(textData,\n      currentNode.tagname,\n      jPath,\n      false,\n      currentNode[\":@\"] ? Object.keys(currentNode[\":@\"]).length !== 0 : false,\n      isLeafNode);\n\n    if (textData !== undefined && textData !== \"\")\n      currentNode.add(this.options.textNodeName, textData);\n    textData = \"\";\n  }\n  return textData;\n}\n\n//TODO: use jPath to simplify the logic\n/**\n * \n * @param {string[]} stopNodes \n * @param {string} jPath\n * @param {string} currentTagName \n */\nfunction isItStopNode(stopNodes, jPath, currentTagName){\n  const allNodesExp = \"*.\" + currentTagName;\n  for (const stopNodePath in stopNodes) {\n    const stopNodeExp = stopNodes[stopNodePath];\n    if( allNodesExp === stopNodeExp || jPath === stopNodeExp  ) return true;\n  }\n  return false;\n}\n\n/**\n * Returns the tag Expression and where it is ending handling single-double quotes situation\n * @param {string} xmlData \n * @param {number} i starting index\n * @returns \n */\nfunction tagExpWithClosingIndex(xmlData, i, closingChar = \">\"){\n  let attrBoundary;\n  let tagExp = \"\";\n  for (let index = i; index < xmlData.length; index++) {\n    let ch = xmlData[index];\n    if (attrBoundary) {\n        if (ch === attrBoundary) attrBoundary = \"\";//reset\n    } else if (ch === '\"' || ch === \"'\") {\n        attrBoundary = ch;\n    } else if (ch === closingChar[0]) {\n      if(closingChar[1]){\n        if(xmlData[index + 1] === closingChar[1]){\n          return {\n            data: tagExp,\n            index: index\n          }\n        }\n      }else{\n        return {\n          data: tagExp,\n          index: index\n        }\n      }\n    } else if (ch === '\\t') {\n      ch = \" \"\n    }\n    tagExp += ch;\n  }\n}\n\nfunction findClosingIndex(xmlData, str, i, errMsg){\n  const closingIndex = xmlData.indexOf(str, i);\n  if(closingIndex === -1){\n    throw new Error(errMsg)\n  }else{\n    return closingIndex + str.length - 1;\n  }\n}\n\nfunction readTagExp(xmlData,i, removeNSPrefix, closingChar = \">\"){\n  const result = tagExpWithClosingIndex(xmlData, i+1, closingChar);\n  if(!result) return;\n  let tagExp = result.data;\n  const closeIndex = result.index;\n  const separatorIndex = tagExp.search(/\\s/);\n  let tagName = tagExp;\n  let attrExpPresent = true;\n  if(separatorIndex !== -1){//separate tag name and attributes expression\n    tagName = tagExp.substring(0, separatorIndex);\n    tagExp = tagExp.substring(separatorIndex + 1).trimStart();\n  }\n\n  const rawTagName = tagName;\n  if(removeNSPrefix){\n    const colonIndex = tagName.indexOf(\":\");\n    if(colonIndex !== -1){\n      tagName = tagName.substr(colonIndex+1);\n      attrExpPresent = tagName !== result.data.substr(colonIndex + 1);\n    }\n  }\n\n  return {\n    tagName: tagName,\n    tagExp: tagExp,\n    closeIndex: closeIndex,\n    attrExpPresent: attrExpPresent,\n    rawTagName: rawTagName,\n  }\n}\n/**\n * find paired tag for a stop node\n * @param {string} xmlData \n * @param {string} tagName \n * @param {number} i \n */\nfunction readStopNodeData(xmlData, tagName, i){\n  const startIndex = i;\n  // Starting at 1 since we already have an open tag\n  let openTagCount = 1;\n\n  for (; i < xmlData.length; i++) {\n    if( xmlData[i] === \"<\"){ \n      if (xmlData[i+1] === \"/\") {//close tag\n          const closeIndex = findClosingIndex(xmlData, \">\", i, `${tagName} is not closed`);\n          let closeTagName = xmlData.substring(i+2,closeIndex).trim();\n          if(closeTagName === tagName){\n            openTagCount--;\n            if (openTagCount === 0) {\n              return {\n                tagContent: xmlData.substring(startIndex, i),\n                i : closeIndex\n              }\n            }\n          }\n          i=closeIndex;\n        } else if(xmlData[i+1] === '?') { \n          const closeIndex = findClosingIndex(xmlData, \"?>\", i+1, \"StopNode is not closed.\")\n          i=closeIndex;\n        } else if(xmlData.substr(i + 1, 3) === '!--') { \n          const closeIndex = findClosingIndex(xmlData, \"-->\", i+3, \"StopNode is not closed.\")\n          i=closeIndex;\n        } else if(xmlData.substr(i + 1, 2) === '![') { \n          const closeIndex = findClosingIndex(xmlData, \"]]>\", i, \"StopNode is not closed.\") - 2;\n          i=closeIndex;\n        } else {\n          const tagData = readTagExp(xmlData, i, '>')\n\n          if (tagData) {\n            const openTagName = tagData && tagData.tagName;\n            if (openTagName === tagName && tagData.tagExp[tagData.tagExp.length-1] !== \"/\") {\n              openTagCount++;\n            }\n            i=tagData.closeIndex;\n          }\n        }\n      }\n  }//end for loop\n}\n\nfunction parseValue(val, shouldParse, options) {\n  if (shouldParse && typeof val === 'string') {\n    //console.log(options)\n    const newval = val.trim();\n    if(newval === 'true' ) return true;\n    else if(newval === 'false' ) return false;\n    else return toNumber(val, options);\n  } else {\n    if (util.isExist(val)) {\n      return val;\n    } else {\n      return '';\n    }\n  }\n}\n\n\nmodule.exports = OrderedObjParser;\n","'use strict';\n\n/**\n * \n * @param {array} node \n * @param {any} options \n * @returns \n */\nfunction prettify(node, options){\n  return compress( node, options);\n}\n\n/**\n * \n * @param {array} arr \n * @param {object} options \n * @param {string} jPath \n * @returns object\n */\nfunction compress(arr, options, jPath){\n  let text;\n  const compressedObj = {};\n  for (let i = 0; i < arr.length; i++) {\n    const tagObj = arr[i];\n    const property = propName(tagObj);\n    let newJpath = \"\";\n    if(jPath === undefined) newJpath = property;\n    else newJpath = jPath + \".\" + property;\n\n    if(property === options.textNodeName){\n      if(text === undefined) text = tagObj[property];\n      else text += \"\" + tagObj[property];\n    }else if(property === undefined){\n      continue;\n    }else if(tagObj[property]){\n      \n      let val = compress(tagObj[property], options, newJpath);\n      const isLeaf = isLeafTag(val, options);\n\n      if(tagObj[\":@\"]){\n        assignAttributes( val, tagObj[\":@\"], newJpath, options);\n      }else if(Object.keys(val).length === 1 && val[options.textNodeName] !== undefined && !options.alwaysCreateTextNode){\n        val = val[options.textNodeName];\n      }else if(Object.keys(val).length === 0){\n        if(options.alwaysCreateTextNode) val[options.textNodeName] = \"\";\n        else val = \"\";\n      }\n\n      if(compressedObj[property] !== undefined && compressedObj.hasOwnProperty(property)) {\n        if(!Array.isArray(compressedObj[property])) {\n            compressedObj[property] = [ compressedObj[property] ];\n        }\n        compressedObj[property].push(val);\n      }else{\n        //TODO: if a node is not an array, then check if it should be an array\n        //also determine if it is a leaf node\n        if (options.isArray(property, newJpath, isLeaf )) {\n          compressedObj[property] = [val];\n        }else{\n          compressedObj[property] = val;\n        }\n      }\n    }\n    \n  }\n  // if(text && text.length > 0) compressedObj[options.textNodeName] = text;\n  if(typeof text === \"string\"){\n    if(text.length > 0) compressedObj[options.textNodeName] = text;\n  }else if(text !== undefined) compressedObj[options.textNodeName] = text;\n  return compressedObj;\n}\n\nfunction propName(obj){\n  const keys = Object.keys(obj);\n  for (let i = 0; i < keys.length; i++) {\n    const key = keys[i];\n    if(key !== \":@\") return key;\n  }\n}\n\nfunction assignAttributes(obj, attrMap, jpath, options){\n  if (attrMap) {\n    const keys = Object.keys(attrMap);\n    const len = keys.length; //don't make it inline\n    for (let i = 0; i < len; i++) {\n      const atrrName = keys[i];\n      if (options.isArray(atrrName, jpath + \".\" + atrrName, true, true)) {\n        obj[atrrName] = [ attrMap[atrrName] ];\n      } else {\n        obj[atrrName] = attrMap[atrrName];\n      }\n    }\n  }\n}\n\nfunction isLeafTag(obj, options){\n  const { textNodeName } = options;\n  const propCount = Object.keys(obj).length;\n  \n  if (propCount === 0) {\n    return true;\n  }\n\n  if (\n    propCount === 1 &&\n    (obj[textNodeName] || typeof obj[textNodeName] === \"boolean\" || obj[textNodeName] === 0)\n  ) {\n    return true;\n  }\n\n  return false;\n}\nexports.prettify = prettify;\n","const { buildOptions} = require(\"./OptionsBuilder\");\nconst OrderedObjParser = require(\"./OrderedObjParser\");\nconst { prettify} = require(\"./node2json\");\nconst validator = require('../validator');\n\nclass XMLParser{\n    \n    constructor(options){\n        this.externalEntities = {};\n        this.options = buildOptions(options);\n        \n    }\n    /**\n     * Parse XML dats to JS object \n     * @param {string|Buffer} xmlData \n     * @param {boolean|Object} validationOption \n     */\n    parse(xmlData,validationOption){\n        if(typeof xmlData === \"string\"){\n        }else if( xmlData.toString){\n            xmlData = xmlData.toString();\n        }else{\n            throw new Error(\"XML data is accepted in String or Bytes[] form.\")\n        }\n        if( validationOption){\n            if(validationOption === true) validationOption = {}; //validate with default options\n            \n            const result = validator.validate(xmlData, validationOption);\n            if (result !== true) {\n              throw Error( `${result.err.msg}:${result.err.line}:${result.err.col}` )\n            }\n          }\n        const orderedObjParser = new OrderedObjParser(this.options);\n        orderedObjParser.addExternalEntities(this.externalEntities);\n        const orderedResult = orderedObjParser.parseXml(xmlData);\n        if(this.options.preserveOrder || orderedResult === undefined) return orderedResult;\n        else return prettify(orderedResult, this.options);\n    }\n\n    /**\n     * Add Entity which is not by default supported by this library\n     * @param {string} key \n     * @param {string} value \n     */\n    addEntity(key, value){\n        if(value.indexOf(\"&\") !== -1){\n            throw new Error(\"Entity value can't have '&'\")\n        }else if(key.indexOf(\"&\") !== -1 || key.indexOf(\";\") !== -1){\n            throw new Error(\"An entity must be set without '&' and ';'. Eg. use '#xD' for '&#xD;'\")\n        }else if(value === \"&\"){\n            throw new Error(\"An entity with value '&' is not permitted\");\n        }else{\n            this.externalEntities[key] = value;\n        }\n    }\n}\n\nmodule.exports = XMLParser;","const EOL = \"\\n\";\n\n/**\n * \n * @param {array} jArray \n * @param {any} options \n * @returns \n */\nfunction toXml(jArray, options) {\n    let indentation = \"\";\n    if (options.format && options.indentBy.length > 0) {\n        indentation = EOL;\n    }\n    return arrToStr(jArray, options, \"\", indentation);\n}\n\nfunction arrToStr(arr, options, jPath, indentation) {\n    let xmlStr = \"\";\n    let isPreviousElementTag = false;\n\n    for (let i = 0; i < arr.length; i++) {\n        const tagObj = arr[i];\n        const tagName = propName(tagObj);\n        if(tagName === undefined) continue;\n\n        let newJPath = \"\";\n        if (jPath.length === 0) newJPath = tagName\n        else newJPath = `${jPath}.${tagName}`;\n\n        if (tagName === options.textNodeName) {\n            let tagText = tagObj[tagName];\n            if (!isStopNode(newJPath, options)) {\n                tagText = options.tagValueProcessor(tagName, tagText);\n                tagText = replaceEntitiesValue(tagText, options);\n            }\n            if (isPreviousElementTag) {\n                xmlStr += indentation;\n            }\n            xmlStr += tagText;\n            isPreviousElementTag = false;\n            continue;\n        } else if (tagName === options.cdataPropName) {\n            if (isPreviousElementTag) {\n                xmlStr += indentation;\n            }\n            xmlStr += `<![CDATA[${tagObj[tagName][0][options.textNodeName]}]]>`;\n            isPreviousElementTag = false;\n            continue;\n        } else if (tagName === options.commentPropName) {\n            xmlStr += indentation + `<!--${tagObj[tagName][0][options.textNodeName]}-->`;\n            isPreviousElementTag = true;\n            continue;\n        } else if (tagName[0] === \"?\") {\n            const attStr = attr_to_str(tagObj[\":@\"], options);\n            const tempInd = tagName === \"?xml\" ? \"\" : indentation;\n            let piTextNodeName = tagObj[tagName][0][options.textNodeName];\n            piTextNodeName = piTextNodeName.length !== 0 ? \" \" + piTextNodeName : \"\"; //remove extra spacing\n            xmlStr += tempInd + `<${tagName}${piTextNodeName}${attStr}?>`;\n            isPreviousElementTag = true;\n            continue;\n        }\n        let newIdentation = indentation;\n        if (newIdentation !== \"\") {\n            newIdentation += options.indentBy;\n        }\n        const attStr = attr_to_str(tagObj[\":@\"], options);\n        const tagStart = indentation + `<${tagName}${attStr}`;\n        const tagValue = arrToStr(tagObj[tagName], options, newJPath, newIdentation);\n        if (options.unpairedTags.indexOf(tagName) !== -1) {\n            if (options.suppressUnpairedNode) xmlStr += tagStart + \">\";\n            else xmlStr += tagStart + \"/>\";\n        } else if ((!tagValue || tagValue.length === 0) && options.suppressEmptyNode) {\n            xmlStr += tagStart + \"/>\";\n        } else if (tagValue && tagValue.endsWith(\">\")) {\n            xmlStr += tagStart + `>${tagValue}${indentation}</${tagName}>`;\n        } else {\n            xmlStr += tagStart + \">\";\n            if (tagValue && indentation !== \"\" && (tagValue.includes(\"/>\") || tagValue.includes(\"</\"))) {\n                xmlStr += indentation + options.indentBy + tagValue + indentation;\n            } else {\n                xmlStr += tagValue;\n            }\n            xmlStr += `</${tagName}>`;\n        }\n        isPreviousElementTag = true;\n    }\n\n    return xmlStr;\n}\n\nfunction propName(obj) {\n    const keys = Object.keys(obj);\n    for (let i = 0; i < keys.length; i++) {\n        const key = keys[i];\n        if(!obj.hasOwnProperty(key)) continue;\n        if (key !== \":@\") return key;\n    }\n}\n\nfunction attr_to_str(attrMap, options) {\n    let attrStr = \"\";\n    if (attrMap && !options.ignoreAttributes) {\n        for (let attr in attrMap) {\n            if(!attrMap.hasOwnProperty(attr)) continue;\n            let attrVal = options.attributeValueProcessor(attr, attrMap[attr]);\n            attrVal = replaceEntitiesValue(attrVal, options);\n            if (attrVal === true && options.suppressBooleanAttributes) {\n                attrStr += ` ${attr.substr(options.attributeNamePrefix.length)}`;\n            } else {\n                attrStr += ` ${attr.substr(options.attributeNamePrefix.length)}=\"${attrVal}\"`;\n            }\n        }\n    }\n    return attrStr;\n}\n\nfunction isStopNode(jPath, options) {\n    jPath = jPath.substr(0, jPath.length - options.textNodeName.length - 1);\n    let tagName = jPath.substr(jPath.lastIndexOf(\".\") + 1);\n    for (let index in options.stopNodes) {\n        if (options.stopNodes[index] === jPath || options.stopNodes[index] === \"*.\" + tagName) return true;\n    }\n    return false;\n}\n\nfunction replaceEntitiesValue(textValue, options) {\n    if (textValue && textValue.length > 0 && options.processEntities) {\n        for (let i = 0; i < options.entities.length; i++) {\n            const entity = options.entities[i];\n            textValue = textValue.replace(entity.regex, entity.val);\n        }\n    }\n    return textValue;\n}\nmodule.exports = toXml;\n","'use strict';\n//parse Empty Node as self closing node\nconst buildFromOrderedJs = require('./orderedJs2Xml');\n\nconst defaultOptions = {\n  attributeNamePrefix: '@_',\n  attributesGroupName: false,\n  textNodeName: '#text',\n  ignoreAttributes: true,\n  cdataPropName: false,\n  format: false,\n  indentBy: '  ',\n  suppressEmptyNode: false,\n  suppressUnpairedNode: true,\n  suppressBooleanAttributes: true,\n  tagValueProcessor: function(key, a) {\n    return a;\n  },\n  attributeValueProcessor: function(attrName, a) {\n    return a;\n  },\n  preserveOrder: false,\n  commentPropName: false,\n  unpairedTags: [],\n  entities: [\n    { regex: new RegExp(\"&\", \"g\"), val: \"&amp;\" },//it must be on top\n    { regex: new RegExp(\">\", \"g\"), val: \"&gt;\" },\n    { regex: new RegExp(\"<\", \"g\"), val: \"&lt;\" },\n    { regex: new RegExp(\"\\'\", \"g\"), val: \"&apos;\" },\n    { regex: new RegExp(\"\\\"\", \"g\"), val: \"&quot;\" }\n  ],\n  processEntities: true,\n  stopNodes: [],\n  // transformTagName: false,\n  // transformAttributeName: false,\n  oneListGroup: false\n};\n\nfunction Builder(options) {\n  this.options = Object.assign({}, defaultOptions, options);\n  if (this.options.ignoreAttributes || this.options.attributesGroupName) {\n    this.isAttribute = function(/*a*/) {\n      return false;\n    };\n  } else {\n    this.attrPrefixLen = this.options.attributeNamePrefix.length;\n    this.isAttribute = isAttribute;\n  }\n\n  this.processTextOrObjNode = processTextOrObjNode\n\n  if (this.options.format) {\n    this.indentate = indentate;\n    this.tagEndChar = '>\\n';\n    this.newLine = '\\n';\n  } else {\n    this.indentate = function() {\n      return '';\n    };\n    this.tagEndChar = '>';\n    this.newLine = '';\n  }\n}\n\nBuilder.prototype.build = function(jObj) {\n  if(this.options.preserveOrder){\n    return buildFromOrderedJs(jObj, this.options);\n  }else {\n    if(Array.isArray(jObj) && this.options.arrayNodeName && this.options.arrayNodeName.length > 1){\n      jObj = {\n        [this.options.arrayNodeName] : jObj\n      }\n    }\n    return this.j2x(jObj, 0).val;\n  }\n};\n\nBuilder.prototype.j2x = function(jObj, level) {\n  let attrStr = '';\n  let val = '';\n  for (let key in jObj) {\n    if(!Object.prototype.hasOwnProperty.call(jObj, key)) continue;\n    if (typeof jObj[key] === 'undefined') {\n      // supress undefined node only if it is not an attribute\n      if (this.isAttribute(key)) {\n        val += '';\n      }\n    } else if (jObj[key] === null) {\n      // null attribute should be ignored by the attribute list, but should not cause the tag closing\n      if (this.isAttribute(key)) {\n        val += '';\n      } else if (key[0] === '?') {\n        val += this.indentate(level) + '<' + key + '?' + this.tagEndChar;\n      } else {\n        val += this.indentate(level) + '<' + key + '/' + this.tagEndChar;\n      }\n      // val += this.indentate(level) + '<' + key + '/' + this.tagEndChar;\n    } else if (jObj[key] instanceof Date) {\n      val += this.buildTextValNode(jObj[key], key, '', level);\n    } else if (typeof jObj[key] !== 'object') {\n      //premitive type\n      const attr = this.isAttribute(key);\n      if (attr) {\n        attrStr += this.buildAttrPairStr(attr, '' + jObj[key]);\n      }else {\n        //tag value\n        if (key === this.options.textNodeName) {\n          let newval = this.options.tagValueProcessor(key, '' + jObj[key]);\n          val += this.replaceEntitiesValue(newval);\n        } else {\n          val += this.buildTextValNode(jObj[key], key, '', level);\n        }\n      }\n    } else if (Array.isArray(jObj[key])) {\n      //repeated nodes\n      const arrLen = jObj[key].length;\n      let listTagVal = \"\";\n      let listTagAttr = \"\";\n      for (let j = 0; j < arrLen; j++) {\n        const item = jObj[key][j];\n        if (typeof item === 'undefined') {\n          // supress undefined node\n        } else if (item === null) {\n          if(key[0] === \"?\") val += this.indentate(level) + '<' + key + '?' + this.tagEndChar;\n          else val += this.indentate(level) + '<' + key + '/' + this.tagEndChar;\n          // val += this.indentate(level) + '<' + key + '/' + this.tagEndChar;\n        } else if (typeof item === 'object') {\n          if(this.options.oneListGroup){\n            const result = this.j2x(item, level + 1);\n            listTagVal += result.val;\n            if (this.options.attributesGroupName && item.hasOwnProperty(this.options.attributesGroupName)) {\n              listTagAttr += result.attrStr\n            }\n          }else{\n            listTagVal += this.processTextOrObjNode(item, key, level)\n          }\n        } else {\n          if (this.options.oneListGroup) {\n            let textValue = this.options.tagValueProcessor(key, item);\n            textValue = this.replaceEntitiesValue(textValue);\n            listTagVal += textValue;\n          } else {\n            listTagVal += this.buildTextValNode(item, key, '', level);\n          }\n        }\n      }\n      if(this.options.oneListGroup){\n        listTagVal = this.buildObjectNode(listTagVal, key, listTagAttr, level);\n      }\n      val += listTagVal;\n    } else {\n      //nested node\n      if (this.options.attributesGroupName && key === this.options.attributesGroupName) {\n        const Ks = Object.keys(jObj[key]);\n        const L = Ks.length;\n        for (let j = 0; j < L; j++) {\n          attrStr += this.buildAttrPairStr(Ks[j], '' + jObj[key][Ks[j]]);\n        }\n      } else {\n        val += this.processTextOrObjNode(jObj[key], key, level)\n      }\n    }\n  }\n  return {attrStr: attrStr, val: val};\n};\n\nBuilder.prototype.buildAttrPairStr = function(attrName, val){\n  val = this.options.attributeValueProcessor(attrName, '' + val);\n  val = this.replaceEntitiesValue(val);\n  if (this.options.suppressBooleanAttributes && val === \"true\") {\n    return ' ' + attrName;\n  } else return ' ' + attrName + '=\"' + val + '\"';\n}\n\nfunction processTextOrObjNode (object, key, level) {\n  const result = this.j2x(object, level + 1);\n  if (object[this.options.textNodeName] !== undefined && Object.keys(object).length === 1) {\n    return this.buildTextValNode(object[this.options.textNodeName], key, result.attrStr, level);\n  } else {\n    return this.buildObjectNode(result.val, key, result.attrStr, level);\n  }\n}\n\nBuilder.prototype.buildObjectNode = function(val, key, attrStr, level) {\n  if(val === \"\"){\n    if(key[0] === \"?\") return  this.indentate(level) + '<' + key + attrStr+ '?' + this.tagEndChar;\n    else {\n      return this.indentate(level) + '<' + key + attrStr + this.closeTag(key) + this.tagEndChar;\n    }\n  }else{\n\n    let tagEndExp = '</' + key + this.tagEndChar;\n    let piClosingChar = \"\";\n    \n    if(key[0] === \"?\") {\n      piClosingChar = \"?\";\n      tagEndExp = \"\";\n    }\n  \n    // attrStr is an empty string in case the attribute came as undefined or null\n    if ((attrStr || attrStr === '') && val.indexOf('<') === -1) {\n      return ( this.indentate(level) + '<' +  key + attrStr + piClosingChar + '>' + val + tagEndExp );\n    } else if (this.options.commentPropName !== false && key === this.options.commentPropName && piClosingChar.length === 0) {\n      return this.indentate(level) + `<!--${val}-->` + this.newLine;\n    }else {\n      return (\n        this.indentate(level) + '<' + key + attrStr + piClosingChar + this.tagEndChar +\n        val +\n        this.indentate(level) + tagEndExp    );\n    }\n  }\n}\n\nBuilder.prototype.closeTag = function(key){\n  let closeTag = \"\";\n  if(this.options.unpairedTags.indexOf(key) !== -1){ //unpaired\n    if(!this.options.suppressUnpairedNode) closeTag = \"/\"\n  }else if(this.options.suppressEmptyNode){ //empty\n    closeTag = \"/\";\n  }else{\n    closeTag = `></${key}`\n  }\n  return closeTag;\n}\n\nfunction buildEmptyObjNode(val, key, attrStr, level) {\n  if (val !== '') {\n    return this.buildObjectNode(val, key, attrStr, level);\n  } else {\n    if(key[0] === \"?\") return  this.indentate(level) + '<' + key + attrStr+ '?' + this.tagEndChar;\n    else {\n      return  this.indentate(level) + '<' + key + attrStr + '/' + this.tagEndChar;\n      // return this.buildTagStr(level,key, attrStr);\n    }\n  }\n}\n\nBuilder.prototype.buildTextValNode = function(val, key, attrStr, level) {\n  if (this.options.cdataPropName !== false && key === this.options.cdataPropName) {\n    return this.indentate(level) + `<![CDATA[${val}]]>` +  this.newLine;\n  }else if (this.options.commentPropName !== false && key === this.options.commentPropName) {\n    return this.indentate(level) + `<!--${val}-->` +  this.newLine;\n  }else if(key[0] === \"?\") {//PI tag\n    return  this.indentate(level) + '<' + key + attrStr+ '?' + this.tagEndChar; \n  }else{\n    let textValue = this.options.tagValueProcessor(key, val);\n    textValue = this.replaceEntitiesValue(textValue);\n  \n    if( textValue === ''){\n      return this.indentate(level) + '<' + key + attrStr + this.closeTag(key) + this.tagEndChar;\n    }else{\n      return this.indentate(level) + '<' + key + attrStr + '>' +\n         textValue +\n        '</' + key + this.tagEndChar;\n    }\n  }\n}\n\nBuilder.prototype.replaceEntitiesValue = function(textValue){\n  if(textValue && textValue.length > 0 && this.options.processEntities){\n    for (let i=0; i<this.options.entities.length; i++) {\n      const entity = this.options.entities[i];\n      textValue = textValue.replace(entity.regex, entity.val);\n    }\n  }\n  return textValue;\n}\n\nfunction indentate(level) {\n  return this.options.indentBy.repeat(level);\n}\n\nfunction isAttribute(name /*, options*/) {\n  if (name.startsWith(this.options.attributeNamePrefix) && name !== this.options.textNodeName) {\n    return name.substr(this.attrPrefixLen);\n  } else {\n    return false;\n  }\n}\n\nmodule.exports = Builder;\n","'use strict';\n\nconst validator = require('./validator');\nconst XMLParser = require('./xmlparser/XMLParser');\nconst XMLBuilder = require('./xmlbuilder/json2xml');\n\nmodule.exports = {\n  XMLParser: XMLParser,\n  XMLValidator: validator,\n  XMLBuilder: XMLBuilder\n}","import { getValueFromTextNode } from \"@smithy/smithy-client\";\nimport { XMLParser } from \"fast-xml-parser\";\nimport { collectBodyString } from \"../common\";\nexport const parseXmlBody = (streamBody, context) => collectBodyString(streamBody, context).then((encoded) => {\n    if (encoded.length) {\n        const parser = new XMLParser({\n            attributeNamePrefix: \"\",\n            htmlEntities: true,\n            ignoreAttributes: false,\n            ignoreDeclaration: true,\n            parseTagValue: false,\n            trimValues: false,\n            tagValueProcessor: (_, val) => (val.trim() === \"\" && val.includes(\"\\n\") ? \"\" : undefined),\n        });\n        parser.addEntity(\"#xD\", \"\\r\");\n        parser.addEntity(\"#10\", \"\\n\");\n        let parsedObj;\n        try {\n            parsedObj = parser.parse(encoded, true);\n        }\n        catch (e) {\n            if (e && typeof e === \"object\") {\n                Object.defineProperty(e, \"$responseBodyText\", {\n                    value: encoded,\n                });\n            }\n            throw e;\n        }\n        const textNodeName = \"#text\";\n        const key = Object.keys(parsedObj)[0];\n        const parsedObjToReturn = parsedObj[key];\n        if (parsedObjToReturn[textNodeName]) {\n            parsedObjToReturn[key] = parsedObjToReturn[textNodeName];\n            delete parsedObjToReturn[textNodeName];\n        }\n        return getValueFromTextNode(parsedObjToReturn);\n    }\n    return {};\n});\nexport const parseXmlErrorBody = async (errorBody, context) => {\n    const value = await parseXmlBody(errorBody, context);\n    if (value.Error) {\n        value.Error.message = value.Error.message ?? value.Error.Message;\n    }\n    return value;\n};\nexport const loadRestXmlErrorCode = (output, data) => {\n    if (data?.Error?.Code !== undefined) {\n        return data.Error.Code;\n    }\n    if (data?.Code !== undefined) {\n        return data.Code;\n    }\n    if (output.statusCode == 404) {\n        return \"NotFound\";\n    }\n};\n","import { ChecksumAlgorithm } from \"./constants\";\nexport const CLIENT_SUPPORTED_ALGORITHMS = [\n    ChecksumAlgorithm.CRC32,\n    ChecksumAlgorithm.CRC32C,\n    ChecksumAlgorithm.CRC64NVME,\n    ChecksumAlgorithm.SHA1,\n    ChecksumAlgorithm.SHA256,\n];\nexport const PRIORITY_ORDER_ALGORITHMS = [\n    ChecksumAlgorithm.SHA256,\n    ChecksumAlgorithm.SHA1,\n    ChecksumAlgorithm.CRC32,\n    ChecksumAlgorithm.CRC32C,\n    ChecksumAlgorithm.CRC64NVME,\n];\n","import { ChecksumAlgorithm } from \"./constants\";\nexport const getChecksumLocationName = (algorithm) => algorithm === ChecksumAlgorithm.MD5 ? \"content-md5\" : `x-amz-checksum-${algorithm.toLowerCase()}`;\n","import { isArrayBuffer } from \"@smithy/is-array-buffer\";\nexport const isStreaming = (body) => body !== undefined && typeof body !== \"string\" && !ArrayBuffer.isView(body) && !isArrayBuffer(body);\n","// Copyright Amazon.com Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nimport { fromUtf8 as fromUtf8Browser } from \"@smithy/util-utf8\";\n// Quick polyfill\nvar fromUtf8 = typeof Buffer !== \"undefined\" && Buffer.from\n    ? function (input) { return Buffer.from(input, \"utf8\"); }\n    : fromUtf8Browser;\nexport function convertToBuffer(data) {\n    // Already a Uint8, do nothing\n    if (data instanceof Uint8Array)\n        return data;\n    if (typeof data === \"string\") {\n        return fromUtf8(data);\n    }\n    if (ArrayBuffer.isView(data)) {\n        return new Uint8Array(data.buffer, data.byteOffset, data.byteLength / Uint8Array.BYTES_PER_ELEMENT);\n    }\n    return new Uint8Array(data);\n}\n//# sourceMappingURL=convertToBuffer.js.map","import { fromString } from \"@smithy/util-buffer-from\";\nexport const fromUtf8 = (input) => {\n    const buf = fromString(input, \"utf8\");\n    return new Uint8Array(buf.buffer, buf.byteOffset, buf.byteLength / Uint8Array.BYTES_PER_ELEMENT);\n};\n","import { isArrayBuffer } from \"@smithy/is-array-buffer\";\nimport { Buffer } from \"buffer\";\nexport const fromArrayBuffer = (input, offset = 0, length = input.byteLength - offset) => {\n    if (!isArrayBuffer(input)) {\n        throw new TypeError(`The \"input\" argument must be ArrayBuffer. Received type ${typeof input} (${input})`);\n    }\n    return Buffer.from(input, offset, length);\n};\nexport const fromString = (input, encoding) => {\n    if (typeof input !== \"string\") {\n        throw new TypeError(`The \"input\" argument must be of type string. Received type ${typeof input} (${input})`);\n    }\n    return encoding ? Buffer.from(input, encoding) : Buffer.from(input);\n};\n","// Copyright Amazon.com Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nexport function isEmptyData(data) {\n    if (typeof data === \"string\") {\n        return data.length === 0;\n    }\n    return data.byteLength === 0;\n}\n//# sourceMappingURL=isEmptyData.js.map","// Copyright Amazon.com Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nexport function numToUint8(num) {\n    return new Uint8Array([\n        (num & 0xff000000) >> 24,\n        (num & 0x00ff0000) >> 16,\n        (num & 0x0000ff00) >> 8,\n        num & 0x000000ff,\n    ]);\n}\n//# sourceMappingURL=numToUint8.js.map","// Copyright Amazon.com Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\n// IE 11 does not support Array.from, so we do it manually\nexport function uint32ArrayFrom(a_lookUpTable) {\n    if (!Uint32Array.from) {\n        var return_array = new Uint32Array(a_lookUpTable.length);\n        var a_index = 0;\n        while (a_index < a_lookUpTable.length) {\n            return_array[a_index] = a_lookUpTable[a_index];\n            a_index += 1;\n        }\n        return return_array;\n    }\n    return Uint32Array.from(a_lookUpTable);\n}\n//# sourceMappingURL=uint32ArrayFrom.js.map","// Copyright Amazon.com Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nimport { __awaiter, __generator } from \"tslib\";\nimport { convertToBuffer, isEmptyData, numToUint8 } from \"@aws-crypto/util\";\nimport { Crc32c } from \"./index\";\nvar AwsCrc32c = /** @class */ (function () {\n    function AwsCrc32c() {\n        this.crc32c = new Crc32c();\n    }\n    AwsCrc32c.prototype.update = function (toHash) {\n        if (isEmptyData(toHash))\n            return;\n        this.crc32c.update(convertToBuffer(toHash));\n    };\n    AwsCrc32c.prototype.digest = function () {\n        return __awaiter(this, void 0, void 0, function () {\n            return __generator(this, function (_a) {\n                return [2 /*return*/, numToUint8(this.crc32c.digest())];\n            });\n        });\n    };\n    AwsCrc32c.prototype.reset = function () {\n        this.crc32c = new Crc32c();\n    };\n    return AwsCrc32c;\n}());\nexport { AwsCrc32c };\n//# sourceMappingURL=aws_crc32c.js.map","// Copyright Amazon.com Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nimport { __values } from \"tslib\";\nimport { uint32ArrayFrom } from \"@aws-crypto/util\";\nexport function crc32c(data) {\n    return new Crc32c().update(data).digest();\n}\nvar Crc32c = /** @class */ (function () {\n    function Crc32c() {\n        this.checksum = 0xffffffff;\n    }\n    Crc32c.prototype.update = function (data) {\n        var e_1, _a;\n        try {\n            for (var data_1 = __values(data), data_1_1 = data_1.next(); !data_1_1.done; data_1_1 = data_1.next()) {\n                var byte = data_1_1.value;\n                this.checksum =\n                    (this.checksum >>> 8) ^ lookupTable[(this.checksum ^ byte) & 0xff];\n            }\n        }\n        catch (e_1_1) { e_1 = { error: e_1_1 }; }\n        finally {\n            try {\n                if (data_1_1 && !data_1_1.done && (_a = data_1.return)) _a.call(data_1);\n            }\n            finally { if (e_1) throw e_1.error; }\n        }\n        return this;\n    };\n    Crc32c.prototype.digest = function () {\n        return (this.checksum ^ 0xffffffff) >>> 0;\n    };\n    return Crc32c;\n}());\nexport { Crc32c };\n// prettier-ignore\nvar a_lookupTable = [\n    0x00000000, 0xF26B8303, 0xE13B70F7, 0x1350F3F4, 0xC79A971F, 0x35F1141C, 0x26A1E7E8, 0xD4CA64EB,\n    0x8AD958CF, 0x78B2DBCC, 0x6BE22838, 0x9989AB3B, 0x4D43CFD0, 0xBF284CD3, 0xAC78BF27, 0x5E133C24,\n    0x105EC76F, 0xE235446C, 0xF165B798, 0x030E349B, 0xD7C45070, 0x25AFD373, 0x36FF2087, 0xC494A384,\n    0x9A879FA0, 0x68EC1CA3, 0x7BBCEF57, 0x89D76C54, 0x5D1D08BF, 0xAF768BBC, 0xBC267848, 0x4E4DFB4B,\n    0x20BD8EDE, 0xD2D60DDD, 0xC186FE29, 0x33ED7D2A, 0xE72719C1, 0x154C9AC2, 0x061C6936, 0xF477EA35,\n    0xAA64D611, 0x580F5512, 0x4B5FA6E6, 0xB93425E5, 0x6DFE410E, 0x9F95C20D, 0x8CC531F9, 0x7EAEB2FA,\n    0x30E349B1, 0xC288CAB2, 0xD1D83946, 0x23B3BA45, 0xF779DEAE, 0x05125DAD, 0x1642AE59, 0xE4292D5A,\n    0xBA3A117E, 0x4851927D, 0x5B016189, 0xA96AE28A, 0x7DA08661, 0x8FCB0562, 0x9C9BF696, 0x6EF07595,\n    0x417B1DBC, 0xB3109EBF, 0xA0406D4B, 0x522BEE48, 0x86E18AA3, 0x748A09A0, 0x67DAFA54, 0x95B17957,\n    0xCBA24573, 0x39C9C670, 0x2A993584, 0xD8F2B687, 0x0C38D26C, 0xFE53516F, 0xED03A29B, 0x1F682198,\n    0x5125DAD3, 0xA34E59D0, 0xB01EAA24, 0x42752927, 0x96BF4DCC, 0x64D4CECF, 0x77843D3B, 0x85EFBE38,\n    0xDBFC821C, 0x2997011F, 0x3AC7F2EB, 0xC8AC71E8, 0x1C661503, 0xEE0D9600, 0xFD5D65F4, 0x0F36E6F7,\n    0x61C69362, 0x93AD1061, 0x80FDE395, 0x72966096, 0xA65C047D, 0x5437877E, 0x4767748A, 0xB50CF789,\n    0xEB1FCBAD, 0x197448AE, 0x0A24BB5A, 0xF84F3859, 0x2C855CB2, 0xDEEEDFB1, 0xCDBE2C45, 0x3FD5AF46,\n    0x7198540D, 0x83F3D70E, 0x90A324FA, 0x62C8A7F9, 0xB602C312, 0x44694011, 0x5739B3E5, 0xA55230E6,\n    0xFB410CC2, 0x092A8FC1, 0x1A7A7C35, 0xE811FF36, 0x3CDB9BDD, 0xCEB018DE, 0xDDE0EB2A, 0x2F8B6829,\n    0x82F63B78, 0x709DB87B, 0x63CD4B8F, 0x91A6C88C, 0x456CAC67, 0xB7072F64, 0xA457DC90, 0x563C5F93,\n    0x082F63B7, 0xFA44E0B4, 0xE9141340, 0x1B7F9043, 0xCFB5F4A8, 0x3DDE77AB, 0x2E8E845F, 0xDCE5075C,\n    0x92A8FC17, 0x60C37F14, 0x73938CE0, 0x81F80FE3, 0x55326B08, 0xA759E80B, 0xB4091BFF, 0x466298FC,\n    0x1871A4D8, 0xEA1A27DB, 0xF94AD42F, 0x0B21572C, 0xDFEB33C7, 0x2D80B0C4, 0x3ED04330, 0xCCBBC033,\n    0xA24BB5A6, 0x502036A5, 0x4370C551, 0xB11B4652, 0x65D122B9, 0x97BAA1BA, 0x84EA524E, 0x7681D14D,\n    0x2892ED69, 0xDAF96E6A, 0xC9A99D9E, 0x3BC21E9D, 0xEF087A76, 0x1D63F975, 0x0E330A81, 0xFC588982,\n    0xB21572C9, 0x407EF1CA, 0x532E023E, 0xA145813D, 0x758FE5D6, 0x87E466D5, 0x94B49521, 0x66DF1622,\n    0x38CC2A06, 0xCAA7A905, 0xD9F75AF1, 0x2B9CD9F2, 0xFF56BD19, 0x0D3D3E1A, 0x1E6DCDEE, 0xEC064EED,\n    0xC38D26C4, 0x31E6A5C7, 0x22B65633, 0xD0DDD530, 0x0417B1DB, 0xF67C32D8, 0xE52CC12C, 0x1747422F,\n    0x49547E0B, 0xBB3FFD08, 0xA86F0EFC, 0x5A048DFF, 0x8ECEE914, 0x7CA56A17, 0x6FF599E3, 0x9D9E1AE0,\n    0xD3D3E1AB, 0x21B862A8, 0x32E8915C, 0xC083125F, 0x144976B4, 0xE622F5B7, 0xF5720643, 0x07198540,\n    0x590AB964, 0xAB613A67, 0xB831C993, 0x4A5A4A90, 0x9E902E7B, 0x6CFBAD78, 0x7FAB5E8C, 0x8DC0DD8F,\n    0xE330A81A, 0x115B2B19, 0x020BD8ED, 0xF0605BEE, 0x24AA3F05, 0xD6C1BC06, 0xC5914FF2, 0x37FACCF1,\n    0x69E9F0D5, 0x9B8273D6, 0x88D28022, 0x7AB90321, 0xAE7367CA, 0x5C18E4C9, 0x4F48173D, 0xBD23943E,\n    0xF36E6F75, 0x0105EC76, 0x12551F82, 0xE03E9C81, 0x34F4F86A, 0xC69F7B69, 0xD5CF889D, 0x27A40B9E,\n    0x79B737BA, 0x8BDCB4B9, 0x988C474D, 0x6AE7C44E, 0xBE2DA0A5, 0x4C4623A6, 0x5F16D052, 0xAD7D5351,\n];\nvar lookupTable = uint32ArrayFrom(a_lookupTable);\nexport { AwsCrc32c } from \"./aws_crc32c\";\n//# sourceMappingURL=index.js.map","// Copyright Amazon.com Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nimport { __awaiter, __generator } from \"tslib\";\nimport { convertToBuffer, isEmptyData, numToUint8 } from \"@aws-crypto/util\";\nimport { Crc32 } from \"./index\";\nvar AwsCrc32 = /** @class */ (function () {\n    function AwsCrc32() {\n        this.crc32 = new Crc32();\n    }\n    AwsCrc32.prototype.update = function (toHash) {\n        if (isEmptyData(toHash))\n            return;\n        this.crc32.update(convertToBuffer(toHash));\n    };\n    AwsCrc32.prototype.digest = function () {\n        return __awaiter(this, void 0, void 0, function () {\n            return __generator(this, function (_a) {\n                return [2 /*return*/, numToUint8(this.crc32.digest())];\n            });\n        });\n    };\n    AwsCrc32.prototype.reset = function () {\n        this.crc32 = new Crc32();\n    };\n    return AwsCrc32;\n}());\nexport { AwsCrc32 };\n//# sourceMappingURL=aws_crc32.js.map","import { __values } from \"tslib\";\nimport { uint32ArrayFrom } from \"@aws-crypto/util\";\nexport function crc32(data) {\n    return new Crc32().update(data).digest();\n}\nvar Crc32 = /** @class */ (function () {\n    function Crc32() {\n        this.checksum = 0xffffffff;\n    }\n    Crc32.prototype.update = function (data) {\n        var e_1, _a;\n        try {\n            for (var data_1 = __values(data), data_1_1 = data_1.next(); !data_1_1.done; data_1_1 = data_1.next()) {\n                var byte = data_1_1.value;\n                this.checksum =\n                    (this.checksum >>> 8) ^ lookupTable[(this.checksum ^ byte) & 0xff];\n            }\n        }\n        catch (e_1_1) { e_1 = { error: e_1_1 }; }\n        finally {\n            try {\n                if (data_1_1 && !data_1_1.done && (_a = data_1.return)) _a.call(data_1);\n            }\n            finally { if (e_1) throw e_1.error; }\n        }\n        return this;\n    };\n    Crc32.prototype.digest = function () {\n        return (this.checksum ^ 0xffffffff) >>> 0;\n    };\n    return Crc32;\n}());\nexport { Crc32 };\n// prettier-ignore\nvar a_lookUpTable = [\n    0x00000000, 0x77073096, 0xEE0E612C, 0x990951BA,\n    0x076DC419, 0x706AF48F, 0xE963A535, 0x9E6495A3,\n    0x0EDB8832, 0x79DCB8A4, 0xE0D5E91E, 0x97D2D988,\n    0x09B64C2B, 0x7EB17CBD, 0xE7B82D07, 0x90BF1D91,\n    0x1DB71064, 0x6AB020F2, 0xF3B97148, 0x84BE41DE,\n    0x1ADAD47D, 0x6DDDE4EB, 0xF4D4B551, 0x83D385C7,\n    0x136C9856, 0x646BA8C0, 0xFD62F97A, 0x8A65C9EC,\n    0x14015C4F, 0x63066CD9, 0xFA0F3D63, 0x8D080DF5,\n    0x3B6E20C8, 0x4C69105E, 0xD56041E4, 0xA2677172,\n    0x3C03E4D1, 0x4B04D447, 0xD20D85FD, 0xA50AB56B,\n    0x35B5A8FA, 0x42B2986C, 0xDBBBC9D6, 0xACBCF940,\n    0x32D86CE3, 0x45DF5C75, 0xDCD60DCF, 0xABD13D59,\n    0x26D930AC, 0x51DE003A, 0xC8D75180, 0xBFD06116,\n    0x21B4F4B5, 0x56B3C423, 0xCFBA9599, 0xB8BDA50F,\n    0x2802B89E, 0x5F058808, 0xC60CD9B2, 0xB10BE924,\n    0x2F6F7C87, 0x58684C11, 0xC1611DAB, 0xB6662D3D,\n    0x76DC4190, 0x01DB7106, 0x98D220BC, 0xEFD5102A,\n    0x71B18589, 0x06B6B51F, 0x9FBFE4A5, 0xE8B8D433,\n    0x7807C9A2, 0x0F00F934, 0x9609A88E, 0xE10E9818,\n    0x7F6A0DBB, 0x086D3D2D, 0x91646C97, 0xE6635C01,\n    0x6B6B51F4, 0x1C6C6162, 0x856530D8, 0xF262004E,\n    0x6C0695ED, 0x1B01A57B, 0x8208F4C1, 0xF50FC457,\n    0x65B0D9C6, 0x12B7E950, 0x8BBEB8EA, 0xFCB9887C,\n    0x62DD1DDF, 0x15DA2D49, 0x8CD37CF3, 0xFBD44C65,\n    0x4DB26158, 0x3AB551CE, 0xA3BC0074, 0xD4BB30E2,\n    0x4ADFA541, 0x3DD895D7, 0xA4D1C46D, 0xD3D6F4FB,\n    0x4369E96A, 0x346ED9FC, 0xAD678846, 0xDA60B8D0,\n    0x44042D73, 0x33031DE5, 0xAA0A4C5F, 0xDD0D7CC9,\n    0x5005713C, 0x270241AA, 0xBE0B1010, 0xC90C2086,\n    0x5768B525, 0x206F85B3, 0xB966D409, 0xCE61E49F,\n    0x5EDEF90E, 0x29D9C998, 0xB0D09822, 0xC7D7A8B4,\n    0x59B33D17, 0x2EB40D81, 0xB7BD5C3B, 0xC0BA6CAD,\n    0xEDB88320, 0x9ABFB3B6, 0x03B6E20C, 0x74B1D29A,\n    0xEAD54739, 0x9DD277AF, 0x04DB2615, 0x73DC1683,\n    0xE3630B12, 0x94643B84, 0x0D6D6A3E, 0x7A6A5AA8,\n    0xE40ECF0B, 0x9309FF9D, 0x0A00AE27, 0x7D079EB1,\n    0xF00F9344, 0x8708A3D2, 0x1E01F268, 0x6906C2FE,\n    0xF762575D, 0x806567CB, 0x196C3671, 0x6E6B06E7,\n    0xFED41B76, 0x89D32BE0, 0x10DA7A5A, 0x67DD4ACC,\n    0xF9B9DF6F, 0x8EBEEFF9, 0x17B7BE43, 0x60B08ED5,\n    0xD6D6A3E8, 0xA1D1937E, 0x38D8C2C4, 0x4FDFF252,\n    0xD1BB67F1, 0xA6BC5767, 0x3FB506DD, 0x48B2364B,\n    0xD80D2BDA, 0xAF0A1B4C, 0x36034AF6, 0x41047A60,\n    0xDF60EFC3, 0xA867DF55, 0x316E8EEF, 0x4669BE79,\n    0xCB61B38C, 0xBC66831A, 0x256FD2A0, 0x5268E236,\n    0xCC0C7795, 0xBB0B4703, 0x220216B9, 0x5505262F,\n    0xC5BA3BBE, 0xB2BD0B28, 0x2BB45A92, 0x5CB36A04,\n    0xC2D7FFA7, 0xB5D0CF31, 0x2CD99E8B, 0x5BDEAE1D,\n    0x9B64C2B0, 0xEC63F226, 0x756AA39C, 0x026D930A,\n    0x9C0906A9, 0xEB0E363F, 0x72076785, 0x05005713,\n    0x95BF4A82, 0xE2B87A14, 0x7BB12BAE, 0x0CB61B38,\n    0x92D28E9B, 0xE5D5BE0D, 0x7CDCEFB7, 0x0BDBDF21,\n    0x86D3D2D4, 0xF1D4E242, 0x68DDB3F8, 0x1FDA836E,\n    0x81BE16CD, 0xF6B9265B, 0x6FB077E1, 0x18B74777,\n    0x88085AE6, 0xFF0F6A70, 0x66063BCA, 0x11010B5C,\n    0x8F659EFF, 0xF862AE69, 0x616BFFD3, 0x166CCF45,\n    0xA00AE278, 0xD70DD2EE, 0x4E048354, 0x3903B3C2,\n    0xA7672661, 0xD06016F7, 0x4969474D, 0x3E6E77DB,\n    0xAED16A4A, 0xD9D65ADC, 0x40DF0B66, 0x37D83BF0,\n    0xA9BCAE53, 0xDEBB9EC5, 0x47B2CF7F, 0x30B5FFE9,\n    0xBDBDF21C, 0xCABAC28A, 0x53B39330, 0x24B4A3A6,\n    0xBAD03605, 0xCDD70693, 0x54DE5729, 0x23D967BF,\n    0xB3667A2E, 0xC4614AB8, 0x5D681B02, 0x2A6F2B94,\n    0xB40BBE37, 0xC30C8EA1, 0x5A05DF1B, 0x2D02EF8D,\n];\nvar lookupTable = uint32ArrayFrom(a_lookUpTable);\nexport { AwsCrc32 } from \"./aws_crc32\";\n//# sourceMappingURL=index.js.map","import { AwsCrc32 } from \"@aws-crypto/crc32\";\nimport { numToUint8 } from \"@aws-crypto/util\";\nimport * as zlib from \"zlib\";\nclass NodeCrc32 {\n    checksum = 0;\n    update(data) {\n        this.checksum = zlib.crc32(data, this.checksum);\n    }\n    async digest() {\n        return numToUint8(this.checksum);\n    }\n    reset() {\n        this.checksum = 0;\n    }\n}\nexport const getCrc32ChecksumAlgorithmFunction = () => {\n    if (typeof zlib.crc32 === \"undefined\") {\n        return AwsCrc32;\n    }\n    return NodeCrc32;\n};\n","import { AwsCrc32c } from \"@aws-crypto/crc32c\";\nimport { ChecksumAlgorithm } from \"./constants\";\nimport { crc64NvmeCrtContainer } from \"./crc64-nvme-crt-container\";\nimport { getCrc32ChecksumAlgorithmFunction } from \"./getCrc32ChecksumAlgorithmFunction\";\nexport const selectChecksumAlgorithmFunction = (checksumAlgorithm, config) => {\n    switch (checksumAlgorithm) {\n        case ChecksumAlgorithm.MD5:\n            return config.md5;\n        case ChecksumAlgorithm.CRC32:\n            return getCrc32ChecksumAlgorithmFunction();\n        case ChecksumAlgorithm.CRC32C:\n            return AwsCrc32c;\n        case ChecksumAlgorithm.CRC64NVME:\n            if (typeof crc64NvmeCrtContainer.CrtCrc64Nvme !== \"function\") {\n                throw new Error(`Please check whether you have installed the \"@aws-sdk/crc64-nvme-crt\" package explicitly. \\n` +\n                    `You must also register the package by calling [require(\"@aws-sdk/crc64-nvme-crt\");] ` +\n                    `or an ESM equivalent such as [import \"@aws-sdk/crc64-nvme-crt\";]. \\n` +\n                    \"For more information please go to \" +\n                    \"https://github.com/aws/aws-sdk-js-v3#functionality-requiring-aws-common-runtime-crt\");\n            }\n            return crc64NvmeCrtContainer.CrtCrc64Nvme;\n        case ChecksumAlgorithm.SHA1:\n            return config.sha1;\n        case ChecksumAlgorithm.SHA256:\n            return config.sha256;\n        default:\n            throw new Error(`Unsupported checksum algorithm: ${checksumAlgorithm}`);\n    }\n};\n","import { toUint8Array } from \"@smithy/util-utf8\";\nexport const stringHasher = (checksumAlgorithmFn, body) => {\n    const hash = new checksumAlgorithmFn();\n    hash.update(toUint8Array(body || \"\"));\n    return hash.digest();\n};\n","import { setFeature } from \"@aws-sdk/core\";\nimport { HttpRequest } from \"@smithy/protocol-http\";\nimport { ChecksumAlgorithm, DEFAULT_CHECKSUM_ALGORITHM, RequestChecksumCalculation } from \"./constants\";\nimport { getChecksumAlgorithmForRequest } from \"./getChecksumAlgorithmForRequest\";\nimport { getChecksumLocationName } from \"./getChecksumLocationName\";\nimport { hasHeader } from \"./hasHeader\";\nimport { hasHeaderWithPrefix } from \"./hasHeaderWithPrefix\";\nimport { isStreaming } from \"./isStreaming\";\nimport { selectChecksumAlgorithmFunction } from \"./selectChecksumAlgorithmFunction\";\nimport { stringHasher } from \"./stringHasher\";\nexport const flexibleChecksumsMiddlewareOptions = {\n    name: \"flexibleChecksumsMiddleware\",\n    step: \"build\",\n    tags: [\"BODY_CHECKSUM\"],\n    override: true,\n};\nexport const flexibleChecksumsMiddleware = (config, middlewareConfig) => (next, context) => async (args) => {\n    if (!HttpRequest.isInstance(args.request)) {\n        return next(args);\n    }\n    if (hasHeaderWithPrefix(\"x-amz-checksum-\", args.request.headers)) {\n        return next(args);\n    }\n    const { request, input } = args;\n    const { body: requestBody, headers } = request;\n    const { base64Encoder, streamHasher } = config;\n    const { requestChecksumRequired, requestAlgorithmMember } = middlewareConfig;\n    const requestChecksumCalculation = await config.requestChecksumCalculation();\n    const requestAlgorithmMemberName = requestAlgorithmMember?.name;\n    const requestAlgorithmMemberHttpHeader = requestAlgorithmMember?.httpHeader;\n    if (requestAlgorithmMemberName && !input[requestAlgorithmMemberName]) {\n        if (requestChecksumCalculation === RequestChecksumCalculation.WHEN_SUPPORTED || requestChecksumRequired) {\n            input[requestAlgorithmMemberName] = DEFAULT_CHECKSUM_ALGORITHM;\n            if (requestAlgorithmMemberHttpHeader) {\n                headers[requestAlgorithmMemberHttpHeader] = DEFAULT_CHECKSUM_ALGORITHM;\n            }\n        }\n    }\n    const checksumAlgorithm = getChecksumAlgorithmForRequest(input, {\n        requestChecksumRequired,\n        requestAlgorithmMember: requestAlgorithmMember?.name,\n        requestChecksumCalculation,\n    });\n    let updatedBody = requestBody;\n    let updatedHeaders = headers;\n    if (checksumAlgorithm) {\n        switch (checksumAlgorithm) {\n            case ChecksumAlgorithm.CRC32:\n                setFeature(context, \"FLEXIBLE_CHECKSUMS_REQ_CRC32\", \"U\");\n                break;\n            case ChecksumAlgorithm.CRC32C:\n                setFeature(context, \"FLEXIBLE_CHECKSUMS_REQ_CRC32C\", \"V\");\n                break;\n            case ChecksumAlgorithm.CRC64NVME:\n                setFeature(context, \"FLEXIBLE_CHECKSUMS_REQ_CRC64\", \"W\");\n                break;\n            case ChecksumAlgorithm.SHA1:\n                setFeature(context, \"FLEXIBLE_CHECKSUMS_REQ_SHA1\", \"X\");\n                break;\n            case ChecksumAlgorithm.SHA256:\n                setFeature(context, \"FLEXIBLE_CHECKSUMS_REQ_SHA256\", \"Y\");\n                break;\n        }\n        const checksumLocationName = getChecksumLocationName(checksumAlgorithm);\n        const checksumAlgorithmFn = selectChecksumAlgorithmFunction(checksumAlgorithm, config);\n        if (isStreaming(requestBody)) {\n            const { getAwsChunkedEncodingStream, bodyLengthChecker } = config;\n            updatedBody = getAwsChunkedEncodingStream(requestBody, {\n                base64Encoder,\n                bodyLengthChecker,\n                checksumLocationName,\n                checksumAlgorithmFn,\n                streamHasher,\n            });\n            updatedHeaders = {\n                ...headers,\n                \"content-encoding\": headers[\"content-encoding\"]\n                    ? `${headers[\"content-encoding\"]},aws-chunked`\n                    : \"aws-chunked\",\n                \"transfer-encoding\": \"chunked\",\n                \"x-amz-decoded-content-length\": headers[\"content-length\"],\n                \"x-amz-content-sha256\": \"STREAMING-UNSIGNED-PAYLOAD-TRAILER\",\n                \"x-amz-trailer\": checksumLocationName,\n            };\n            delete updatedHeaders[\"content-length\"];\n        }\n        else if (!hasHeader(checksumLocationName, headers)) {\n            const rawChecksum = await stringHasher(checksumAlgorithmFn, requestBody);\n            updatedHeaders = {\n                ...headers,\n                [checksumLocationName]: base64Encoder(rawChecksum),\n            };\n        }\n    }\n    const result = await next({\n        ...args,\n        request: {\n            ...request,\n            headers: updatedHeaders,\n            body: updatedBody,\n        },\n    });\n    return result;\n};\n","export const hasHeaderWithPrefix = (headerPrefix, headers) => {\n    const soughtHeaderPrefix = headerPrefix.toLowerCase();\n    for (const headerName of Object.keys(headers)) {\n        if (headerName.toLowerCase().startsWith(soughtHeaderPrefix)) {\n            return true;\n        }\n    }\n    return false;\n};\n","import { DEFAULT_CHECKSUM_ALGORITHM, RequestChecksumCalculation } from \"./constants\";\nimport { CLIENT_SUPPORTED_ALGORITHMS } from \"./types\";\nexport const getChecksumAlgorithmForRequest = (input, { requestChecksumRequired, requestAlgorithmMember, requestChecksumCalculation }) => {\n    if (!requestAlgorithmMember) {\n        return requestChecksumCalculation === RequestChecksumCalculation.WHEN_SUPPORTED || requestChecksumRequired\n            ? DEFAULT_CHECKSUM_ALGORITHM\n            : undefined;\n    }\n    if (!input[requestAlgorithmMember]) {\n        return undefined;\n    }\n    const checksumAlgorithm = input[requestAlgorithmMember];\n    if (!CLIENT_SUPPORTED_ALGORITHMS.includes(checksumAlgorithm)) {\n        throw new Error(`The checksum algorithm \"${checksumAlgorithm}\" is not supported by the client.` +\n            ` Select one of ${CLIENT_SUPPORTED_ALGORITHMS}.`);\n    }\n    return checksumAlgorithm;\n};\n","export const hasHeader = (header, headers) => {\n    const soughtHeader = header.toLowerCase();\n    for (const headerName of Object.keys(headers)) {\n        if (soughtHeader === headerName.toLowerCase()) {\n            return true;\n        }\n    }\n    return false;\n};\n","import { setFeature } from \"@aws-sdk/core\";\nimport { RequestChecksumCalculation, ResponseChecksumValidation } from \"./constants\";\nexport const flexibleChecksumsInputMiddlewareOptions = {\n    name: \"flexibleChecksumsInputMiddleware\",\n    toMiddleware: \"serializerMiddleware\",\n    relation: \"before\",\n    tags: [\"BODY_CHECKSUM\"],\n    override: true,\n};\nexport const flexibleChecksumsInputMiddleware = (config, middlewareConfig) => (next, context) => async (args) => {\n    const input = args.input;\n    const { requestValidationModeMember } = middlewareConfig;\n    const requestChecksumCalculation = await config.requestChecksumCalculation();\n    const responseChecksumValidation = await config.responseChecksumValidation();\n    switch (requestChecksumCalculation) {\n        case RequestChecksumCalculation.WHEN_REQUIRED:\n            setFeature(context, \"FLEXIBLE_CHECKSUMS_REQ_WHEN_REQUIRED\", \"a\");\n            break;\n        case RequestChecksumCalculation.WHEN_SUPPORTED:\n            setFeature(context, \"FLEXIBLE_CHECKSUMS_REQ_WHEN_SUPPORTED\", \"Z\");\n            break;\n    }\n    switch (responseChecksumValidation) {\n        case ResponseChecksumValidation.WHEN_REQUIRED:\n            setFeature(context, \"FLEXIBLE_CHECKSUMS_RES_WHEN_REQUIRED\", \"c\");\n            break;\n        case ResponseChecksumValidation.WHEN_SUPPORTED:\n            setFeature(context, \"FLEXIBLE_CHECKSUMS_RES_WHEN_SUPPORTED\", \"b\");\n            break;\n    }\n    if (requestValidationModeMember && !input[requestValidationModeMember]) {\n        if (responseChecksumValidation === ResponseChecksumValidation.WHEN_SUPPORTED) {\n            input[requestValidationModeMember] = \"ENABLED\";\n        }\n    }\n    return next(args);\n};\n","import { CLIENT_SUPPORTED_ALGORITHMS, PRIORITY_ORDER_ALGORITHMS } from \"./types\";\nexport const getChecksumAlgorithmListForResponse = (responseAlgorithms = []) => {\n    const validChecksumAlgorithms = [];\n    for (const algorithm of PRIORITY_ORDER_ALGORITHMS) {\n        if (!responseAlgorithms.includes(algorithm) || !CLIENT_SUPPORTED_ALGORITHMS.includes(algorithm)) {\n            continue;\n        }\n        validChecksumAlgorithms.push(algorithm);\n    }\n    return validChecksumAlgorithms;\n};\n","import { stringHasher } from \"./stringHasher\";\nexport const getChecksum = async (body, { checksumAlgorithmFn, base64Encoder }) => base64Encoder(await stringHasher(checksumAlgorithmFn, body));\n","import { HttpRequest } from \"@smithy/protocol-http\";\nimport { getChecksumAlgorithmListForResponse } from \"./getChecksumAlgorithmListForResponse\";\nimport { getChecksumLocationName } from \"./getChecksumLocationName\";\nimport { isChecksumWithPartNumber } from \"./isChecksumWithPartNumber\";\nimport { validateChecksumFromResponse } from \"./validateChecksumFromResponse\";\nexport const flexibleChecksumsResponseMiddlewareOptions = {\n    name: \"flexibleChecksumsResponseMiddleware\",\n    toMiddleware: \"deserializerMiddleware\",\n    relation: \"after\",\n    tags: [\"BODY_CHECKSUM\"],\n    override: true,\n};\nexport const flexibleChecksumsResponseMiddleware = (config, middlewareConfig) => (next, context) => async (args) => {\n    if (!HttpRequest.isInstance(args.request)) {\n        return next(args);\n    }\n    const input = args.input;\n    const result = await next(args);\n    const response = result.response;\n    const { requestValidationModeMember, responseAlgorithms } = middlewareConfig;\n    if (requestValidationModeMember && input[requestValidationModeMember] === \"ENABLED\") {\n        const { clientName, commandName } = context;\n        const isS3WholeObjectMultipartGetResponseChecksum = clientName === \"S3Client\" &&\n            commandName === \"GetObjectCommand\" &&\n            getChecksumAlgorithmListForResponse(responseAlgorithms).every((algorithm) => {\n                const responseHeader = getChecksumLocationName(algorithm);\n                const checksumFromResponse = response.headers[responseHeader];\n                return !checksumFromResponse || isChecksumWithPartNumber(checksumFromResponse);\n            });\n        if (isS3WholeObjectMultipartGetResponseChecksum) {\n            return result;\n        }\n        await validateChecksumFromResponse(response, {\n            config,\n            responseAlgorithms,\n            logger: context.logger,\n        });\n    }\n    return result;\n};\n","export const isChecksumWithPartNumber = (checksum) => {\n    const lastHyphenIndex = checksum.lastIndexOf(\"-\");\n    if (lastHyphenIndex !== -1) {\n        const numberPart = checksum.slice(lastHyphenIndex + 1);\n        if (!numberPart.startsWith(\"0\")) {\n            const number = parseInt(numberPart, 10);\n            if (!isNaN(number) && number >= 1 && number <= 10000) {\n                return true;\n            }\n        }\n    }\n    return false;\n};\n","import { createChecksumStream } from \"@smithy/util-stream\";\nimport { ChecksumAlgorithm } from \"./constants\";\nimport { getChecksum } from \"./getChecksum\";\nimport { getChecksumAlgorithmListForResponse } from \"./getChecksumAlgorithmListForResponse\";\nimport { getChecksumLocationName } from \"./getChecksumLocationName\";\nimport { isStreaming } from \"./isStreaming\";\nimport { selectChecksumAlgorithmFunction } from \"./selectChecksumAlgorithmFunction\";\nexport const validateChecksumFromResponse = async (response, { config, responseAlgorithms, logger }) => {\n    const checksumAlgorithms = getChecksumAlgorithmListForResponse(responseAlgorithms);\n    const { body: responseBody, headers: responseHeaders } = response;\n    for (const algorithm of checksumAlgorithms) {\n        const responseHeader = getChecksumLocationName(algorithm);\n        const checksumFromResponse = responseHeaders[responseHeader];\n        if (checksumFromResponse) {\n            let checksumAlgorithmFn;\n            try {\n                checksumAlgorithmFn = selectChecksumAlgorithmFunction(algorithm, config);\n            }\n            catch (error) {\n                if (algorithm === ChecksumAlgorithm.CRC64NVME) {\n                    logger?.warn(`Skipping ${ChecksumAlgorithm.CRC64NVME} checksum validation: ${error.message}`);\n                    continue;\n                }\n                throw error;\n            }\n            const { base64Encoder } = config;\n            if (isStreaming(responseBody)) {\n                response.body = createChecksumStream({\n                    expectedChecksum: checksumFromResponse,\n                    checksumSourceLocation: responseHeader,\n                    checksum: new checksumAlgorithmFn(),\n                    source: responseBody,\n                    base64Encoder,\n                });\n                return;\n            }\n            const checksum = await getChecksum(responseBody, { checksumAlgorithmFn, base64Encoder });\n            if (checksum === checksumFromResponse) {\n                break;\n            }\n            throw new Error(`Checksum mismatch: expected \"${checksum}\" but received \"${checksumFromResponse}\"` +\n                ` in response header \"${responseHeader}\".`);\n        }\n    }\n};\n","import { flexibleChecksumsInputMiddleware, flexibleChecksumsInputMiddlewareOptions, } from \"./flexibleChecksumsInputMiddleware\";\nimport { flexibleChecksumsMiddleware, flexibleChecksumsMiddlewareOptions, } from \"./flexibleChecksumsMiddleware\";\nimport { flexibleChecksumsResponseMiddleware, flexibleChecksumsResponseMiddlewareOptions, } from \"./flexibleChecksumsResponseMiddleware\";\nexport const getFlexibleChecksumsPlugin = (config, middlewareConfig) => ({\n    applyToStack: (clientStack) => {\n        clientStack.add(flexibleChecksumsMiddleware(config, middlewareConfig), flexibleChecksumsMiddlewareOptions);\n        clientStack.addRelativeTo(flexibleChecksumsInputMiddleware(config, middlewareConfig), flexibleChecksumsInputMiddlewareOptions);\n        clientStack.addRelativeTo(flexibleChecksumsResponseMiddleware(config, middlewareConfig), flexibleChecksumsResponseMiddlewareOptions);\n    },\n});\n","import { HttpRequest } from \"@smithy/protocol-http\";\nexport function resolveHostHeaderConfig(input) {\n    return input;\n}\nexport const hostHeaderMiddleware = (options) => (next) => async (args) => {\n    if (!HttpRequest.isInstance(args.request))\n        return next(args);\n    const { request } = args;\n    const { handlerProtocol = \"\" } = options.requestHandler.metadata || {};\n    if (handlerProtocol.indexOf(\"h2\") >= 0 && !request.headers[\":authority\"]) {\n        delete request.headers[\"host\"];\n        request.headers[\":authority\"] = request.hostname + (request.port ? \":\" + request.port : \"\");\n    }\n    else if (!request.headers[\"host\"]) {\n        let host = request.hostname;\n        if (request.port != null)\n            host += `:${request.port}`;\n        request.headers[\"host\"] = host;\n    }\n    return next(args);\n};\nexport const hostHeaderMiddlewareOptions = {\n    name: \"hostHeaderMiddleware\",\n    step: \"build\",\n    priority: \"low\",\n    tags: [\"HOST\"],\n    override: true,\n};\nexport const getHostHeaderPlugin = (options) => ({\n    applyToStack: (clientStack) => {\n        clientStack.add(hostHeaderMiddleware(options), hostHeaderMiddlewareOptions);\n    },\n});\n","export const loggerMiddleware = () => (next, context) => async (args) => {\n    try {\n        const response = await next(args);\n        const { clientName, commandName, logger, dynamoDbDocumentClientOptions = {} } = context;\n        const { overrideInputFilterSensitiveLog, overrideOutputFilterSensitiveLog } = dynamoDbDocumentClientOptions;\n        const inputFilterSensitiveLog = overrideInputFilterSensitiveLog ?? context.inputFilterSensitiveLog;\n        const outputFilterSensitiveLog = overrideOutputFilterSensitiveLog ?? context.outputFilterSensitiveLog;\n        const { $metadata, ...outputWithoutMetadata } = response.output;\n        logger?.info?.({\n            clientName,\n            commandName,\n            input: inputFilterSensitiveLog(args.input),\n            output: outputFilterSensitiveLog(outputWithoutMetadata),\n            metadata: $metadata,\n        });\n        return response;\n    }\n    catch (error) {\n        const { clientName, commandName, logger, dynamoDbDocumentClientOptions = {} } = context;\n        const { overrideInputFilterSensitiveLog } = dynamoDbDocumentClientOptions;\n        const inputFilterSensitiveLog = overrideInputFilterSensitiveLog ?? context.inputFilterSensitiveLog;\n        logger?.error?.({\n            clientName,\n            commandName,\n            input: inputFilterSensitiveLog(args.input),\n            error,\n            metadata: error.$metadata,\n        });\n        throw error;\n    }\n};\nexport const loggerMiddlewareOptions = {\n    name: \"loggerMiddleware\",\n    tags: [\"LOGGER\"],\n    step: \"initialize\",\n    override: true,\n};\nexport const getLoggerPlugin = (options) => ({\n    applyToStack: (clientStack) => {\n        clientStack.add(loggerMiddleware(), loggerMiddlewareOptions);\n    },\n});\n","import { HttpRequest } from \"@smithy/protocol-http\";\nconst TRACE_ID_HEADER_NAME = \"X-Amzn-Trace-Id\";\nconst ENV_LAMBDA_FUNCTION_NAME = \"AWS_LAMBDA_FUNCTION_NAME\";\nconst ENV_TRACE_ID = \"_X_AMZN_TRACE_ID\";\nexport const recursionDetectionMiddleware = (options) => (next) => async (args) => {\n    const { request } = args;\n    if (!HttpRequest.isInstance(request) ||\n        options.runtime !== \"node\" ||\n        request.headers.hasOwnProperty(TRACE_ID_HEADER_NAME)) {\n        return next(args);\n    }\n    const functionName = process.env[ENV_LAMBDA_FUNCTION_NAME];\n    const traceId = process.env[ENV_TRACE_ID];\n    const nonEmptyString = (str) => typeof str === \"string\" && str.length > 0;\n    if (nonEmptyString(functionName) && nonEmptyString(traceId)) {\n        request.headers[TRACE_ID_HEADER_NAME] = traceId;\n    }\n    return next({\n        ...args,\n        request,\n    });\n};\nexport const addRecursionDetectionMiddlewareOptions = {\n    step: \"build\",\n    tags: [\"RECURSION_DETECTION\"],\n    name: \"recursionDetectionMiddleware\",\n    override: true,\n    priority: \"low\",\n};\nexport const getRecursionDetectionPlugin = (options) => ({\n    applyToStack: (clientStack) => {\n        clientStack.add(recursionDetectionMiddleware(options), addRecursionDetectionMiddlewareOptions);\n    },\n});\n","export const regionRedirectEndpointMiddleware = (config) => {\n    return (next, context) => async (args) => {\n        const originalRegion = await config.region();\n        const regionProviderRef = config.region;\n        let unlock = () => { };\n        if (context.__s3RegionRedirect) {\n            Object.defineProperty(config, \"region\", {\n                writable: false,\n                value: async () => {\n                    return context.__s3RegionRedirect;\n                },\n            });\n            unlock = () => Object.defineProperty(config, \"region\", {\n                writable: true,\n                value: regionProviderRef,\n            });\n        }\n        try {\n            const result = await next(args);\n            if (context.__s3RegionRedirect) {\n                unlock();\n                const region = await config.region();\n                if (originalRegion !== region) {\n                    throw new Error(\"Region was not restored following S3 region redirect.\");\n                }\n            }\n            return result;\n        }\n        catch (e) {\n            unlock();\n            throw e;\n        }\n    };\n};\nexport const regionRedirectEndpointMiddlewareOptions = {\n    tags: [\"REGION_REDIRECT\", \"S3\"],\n    name: \"regionRedirectEndpointMiddleware\",\n    override: true,\n    relation: \"before\",\n    toMiddleware: \"endpointV2Middleware\",\n};\n","import { regionRedirectEndpointMiddleware, regionRedirectEndpointMiddlewareOptions, } from \"./region-redirect-endpoint-middleware\";\nexport function regionRedirectMiddleware(clientConfig) {\n    return (next, context) => async (args) => {\n        try {\n            return await next(args);\n        }\n        catch (err) {\n            if (clientConfig.followRegionRedirects) {\n                if (err?.$metadata?.httpStatusCode === 301 ||\n                    (err?.$metadata?.httpStatusCode === 400 && err?.name === \"IllegalLocationConstraintException\")) {\n                    try {\n                        const actualRegion = err.$response.headers[\"x-amz-bucket-region\"];\n                        context.logger?.debug(`Redirecting from ${await clientConfig.region()} to ${actualRegion}`);\n                        context.__s3RegionRedirect = actualRegion;\n                    }\n                    catch (e) {\n                        throw new Error(\"Region redirect failed: \" + e);\n                    }\n                    return next(args);\n                }\n            }\n            throw err;\n        }\n    };\n}\nexport const regionRedirectMiddlewareOptions = {\n    step: \"initialize\",\n    tags: [\"REGION_REDIRECT\", \"S3\"],\n    name: \"regionRedirectMiddleware\",\n    override: true,\n};\nexport const getRegionRedirectMiddlewarePlugin = (clientConfig) => ({\n    applyToStack: (clientStack) => {\n        clientStack.add(regionRedirectMiddleware(clientConfig), regionRedirectMiddlewareOptions);\n        clientStack.addRelativeTo(regionRedirectEndpointMiddleware(clientConfig), regionRedirectEndpointMiddlewareOptions);\n    },\n});\n","import { HttpResponse } from \"@smithy/protocol-http\";\nimport { parseRfc7231DateTime } from \"@smithy/smithy-client\";\nexport const s3ExpiresMiddleware = (config) => {\n    return (next, context) => async (args) => {\n        const result = await next(args);\n        const { response } = result;\n        if (HttpResponse.isInstance(response)) {\n            if (response.headers.expires) {\n                response.headers.expiresstring = response.headers.expires;\n                try {\n                    parseRfc7231DateTime(response.headers.expires);\n                }\n                catch (e) {\n                    context.logger?.warn(`AWS SDK Warning for ${context.clientName}::${context.commandName} response parsing (${response.headers.expires}): ${e}`);\n                    delete response.headers.expires;\n                }\n            }\n        }\n        return result;\n    };\n};\nexport const s3ExpiresMiddlewareOptions = {\n    tags: [\"S3\"],\n    name: \"s3ExpiresMiddleware\",\n    override: true,\n    relation: \"after\",\n    toMiddleware: \"deserializerMiddleware\",\n};\nexport const getS3ExpiresMiddlewarePlugin = (clientConfig) => ({\n    applyToStack: (clientStack) => {\n        clientStack.addRelativeTo(s3ExpiresMiddleware(clientConfig), s3ExpiresMiddlewareOptions);\n    },\n});\n","export class S3ExpressIdentityCache {\n    data;\n    lastPurgeTime = Date.now();\n    static EXPIRED_CREDENTIAL_PURGE_INTERVAL_MS = 30000;\n    constructor(data = {}) {\n        this.data = data;\n    }\n    get(key) {\n        const entry = this.data[key];\n        if (!entry) {\n            return;\n        }\n        return entry;\n    }\n    set(key, entry) {\n        this.data[key] = entry;\n        return entry;\n    }\n    delete(key) {\n        delete this.data[key];\n    }\n    async purgeExpired() {\n        const now = Date.now();\n        if (this.lastPurgeTime + S3ExpressIdentityCache.EXPIRED_CREDENTIAL_PURGE_INTERVAL_MS > now) {\n            return;\n        }\n        for (const key in this.data) {\n            const entry = this.data[key];\n            if (!entry.isRefreshing) {\n                const credential = await entry.identity;\n                if (credential.expiration) {\n                    if (credential.expiration.getTime() < now) {\n                        delete this.data[key];\n                    }\n                }\n            }\n        }\n    }\n}\n","export class S3ExpressIdentityCacheEntry {\n    _identity;\n    isRefreshing;\n    accessed;\n    constructor(_identity, isRefreshing = false, accessed = Date.now()) {\n        this._identity = _identity;\n        this.isRefreshing = isRefreshing;\n        this.accessed = accessed;\n    }\n    get identity() {\n        this.accessed = Date.now();\n        return this._identity;\n    }\n}\n","import { S3ExpressIdentityCache } from \"./S3ExpressIdentityCache\";\nimport { S3ExpressIdentityCacheEntry } from \"./S3ExpressIdentityCacheEntry\";\nexport class S3ExpressIdentityProviderImpl {\n    createSessionFn;\n    cache;\n    static REFRESH_WINDOW_MS = 60000;\n    constructor(createSessionFn, cache = new S3ExpressIdentityCache()) {\n        this.createSessionFn = createSessionFn;\n        this.cache = cache;\n    }\n    async getS3ExpressIdentity(awsIdentity, identityProperties) {\n        const key = identityProperties.Bucket;\n        const { cache } = this;\n        const entry = cache.get(key);\n        if (entry) {\n            return entry.identity.then((identity) => {\n                const isExpired = (identity.expiration?.getTime() ?? 0) < Date.now();\n                if (isExpired) {\n                    return cache.set(key, new S3ExpressIdentityCacheEntry(this.getIdentity(key))).identity;\n                }\n                const isExpiringSoon = (identity.expiration?.getTime() ?? 0) < Date.now() + S3ExpressIdentityProviderImpl.REFRESH_WINDOW_MS;\n                if (isExpiringSoon && !entry.isRefreshing) {\n                    entry.isRefreshing = true;\n                    this.getIdentity(key).then((id) => {\n                        cache.set(key, new S3ExpressIdentityCacheEntry(Promise.resolve(id)));\n                    });\n                }\n                return identity;\n            });\n        }\n        return cache.set(key, new S3ExpressIdentityCacheEntry(this.getIdentity(key))).identity;\n    }\n    async getIdentity(key) {\n        await this.cache.purgeExpired().catch((error) => {\n            console.warn(\"Error while clearing expired entries in S3ExpressIdentityCache: \\n\" + error);\n        });\n        const session = await this.createSessionFn(key);\n        if (!session.Credentials?.AccessKeyId || !session.Credentials?.SecretAccessKey) {\n            throw new Error(\"s3#createSession response credential missing AccessKeyId or SecretAccessKey.\");\n        }\n        const identity = {\n            accessKeyId: session.Credentials.AccessKeyId,\n            secretAccessKey: session.Credentials.SecretAccessKey,\n            sessionToken: session.Credentials.SessionToken,\n            expiration: session.Credentials.Expiration ? new Date(session.Credentials.Expiration) : undefined,\n        };\n        return identity;\n    }\n}\n","export const booleanSelector = (obj, key, type) => {\n    if (!(key in obj))\n        return undefined;\n    if (obj[key] === \"true\")\n        return true;\n    if (obj[key] === \"false\")\n        return false;\n    throw new Error(`Cannot load ${type} \"${key}\". Expected \"true\" or \"false\", got ${obj[key]}.`);\n};\n","export var SelectorType;\n(function (SelectorType) {\n    SelectorType[\"ENV\"] = \"env\";\n    SelectorType[\"CONFIG\"] = \"shared config entry\";\n})(SelectorType || (SelectorType = {}));\n","import { booleanSelector, SelectorType } from \"@smithy/util-config-provider\";\nexport const S3_EXPRESS_BUCKET_TYPE = \"Directory\";\nexport const S3_EXPRESS_BACKEND = \"S3Express\";\nexport const S3_EXPRESS_AUTH_SCHEME = \"sigv4-s3express\";\nexport const SESSION_TOKEN_QUERY_PARAM = \"X-Amz-S3session-Token\";\nexport const SESSION_TOKEN_HEADER = SESSION_TOKEN_QUERY_PARAM.toLowerCase();\nexport const NODE_DISABLE_S3_EXPRESS_SESSION_AUTH_ENV_NAME = \"AWS_S3_DISABLE_EXPRESS_SESSION_AUTH\";\nexport const NODE_DISABLE_S3_EXPRESS_SESSION_AUTH_INI_NAME = \"s3_disable_express_session_auth\";\nexport const NODE_DISABLE_S3_EXPRESS_SESSION_AUTH_OPTIONS = {\n    environmentVariableSelector: (env) => booleanSelector(env, NODE_DISABLE_S3_EXPRESS_SESSION_AUTH_ENV_NAME, SelectorType.ENV),\n    configFileSelector: (profile) => booleanSelector(profile, NODE_DISABLE_S3_EXPRESS_SESSION_AUTH_INI_NAME, SelectorType.CONFIG),\n    default: false,\n};\n","import { SignatureV4 } from \"@smithy/signature-v4\";\nimport { SESSION_TOKEN_HEADER, SESSION_TOKEN_QUERY_PARAM } from \"../constants\";\nexport class SignatureV4S3Express extends SignatureV4 {\n    async signWithCredentials(requestToSign, credentials, options) {\n        const credentialsWithoutSessionToken = getCredentialsWithoutSessionToken(credentials);\n        requestToSign.headers[SESSION_TOKEN_HEADER] = credentials.sessionToken;\n        const privateAccess = this;\n        setSingleOverride(privateAccess, credentialsWithoutSessionToken);\n        return privateAccess.signRequest(requestToSign, options ?? {});\n    }\n    async presignWithCredentials(requestToSign, credentials, options) {\n        const credentialsWithoutSessionToken = getCredentialsWithoutSessionToken(credentials);\n        delete requestToSign.headers[SESSION_TOKEN_HEADER];\n        requestToSign.headers[SESSION_TOKEN_QUERY_PARAM] = credentials.sessionToken;\n        requestToSign.query = requestToSign.query ?? {};\n        requestToSign.query[SESSION_TOKEN_QUERY_PARAM] = credentials.sessionToken;\n        const privateAccess = this;\n        setSingleOverride(privateAccess, credentialsWithoutSessionToken);\n        return this.presign(requestToSign, options);\n    }\n}\nfunction getCredentialsWithoutSessionToken(credentials) {\n    const credentialsWithoutSessionToken = {\n        accessKeyId: credentials.accessKeyId,\n        secretAccessKey: credentials.secretAccessKey,\n        expiration: credentials.expiration,\n    };\n    return credentialsWithoutSessionToken;\n}\nfunction setSingleOverride(privateAccess, credentialsWithoutSessionToken) {\n    const id = setTimeout(() => {\n        throw new Error(\"SignatureV4S3Express credential override was created but not called.\");\n    }, 10);\n    const currentCredentialProvider = privateAccess.credentialProvider;\n    const overrideCredentialsProviderOnce = () => {\n        clearTimeout(id);\n        privateAccess.credentialProvider = currentCredentialProvider;\n        return Promise.resolve(credentialsWithoutSessionToken);\n    };\n    privateAccess.credentialProvider = overrideCredentialsProviderOnce;\n}\n","import { setFeature } from \"@aws-sdk/core\";\nimport { HttpRequest } from \"@smithy/protocol-http\";\nimport { S3_EXPRESS_AUTH_SCHEME, S3_EXPRESS_BACKEND, S3_EXPRESS_BUCKET_TYPE, SESSION_TOKEN_HEADER } from \"../constants\";\nexport const s3ExpressMiddleware = (options) => {\n    return (next, context) => async (args) => {\n        if (context.endpointV2) {\n            const endpoint = context.endpointV2;\n            const isS3ExpressAuth = endpoint.properties?.authSchemes?.[0]?.name === S3_EXPRESS_AUTH_SCHEME;\n            const isS3ExpressBucket = endpoint.properties?.backend === S3_EXPRESS_BACKEND ||\n                endpoint.properties?.bucketType === S3_EXPRESS_BUCKET_TYPE;\n            if (isS3ExpressBucket) {\n                setFeature(context, \"S3_EXPRESS_BUCKET\", \"J\");\n                context.isS3ExpressBucket = true;\n            }\n            if (isS3ExpressAuth) {\n                const requestBucket = args.input.Bucket;\n                if (requestBucket) {\n                    const s3ExpressIdentity = await options.s3ExpressIdentityProvider.getS3ExpressIdentity(await options.credentials(), {\n                        Bucket: requestBucket,\n                    });\n                    context.s3ExpressIdentity = s3ExpressIdentity;\n                    if (HttpRequest.isInstance(args.request) && s3ExpressIdentity.sessionToken) {\n                        args.request.headers[SESSION_TOKEN_HEADER] = s3ExpressIdentity.sessionToken;\n                    }\n                }\n            }\n        }\n        return next(args);\n    };\n};\nexport const s3ExpressMiddlewareOptions = {\n    name: \"s3ExpressMiddleware\",\n    step: \"build\",\n    tags: [\"S3\", \"S3_EXPRESS\"],\n    override: true,\n};\nexport const getS3ExpressPlugin = (options) => ({\n    applyToStack: (clientStack) => {\n        clientStack.add(s3ExpressMiddleware(options), s3ExpressMiddlewareOptions);\n    },\n});\n","import { httpSigningMiddlewareOptions } from \"@smithy/core\";\nimport { HttpRequest } from \"@smithy/protocol-http\";\nimport { SMITHY_CONTEXT_KEY, } from \"@smithy/types\";\nimport { getSmithyContext } from \"@smithy/util-middleware\";\nimport { signS3Express } from \"./signS3Express\";\nconst defaultErrorHandler = (signingProperties) => (error) => {\n    throw error;\n};\nconst defaultSuccessHandler = (httpResponse, signingProperties) => { };\nexport const s3ExpressHttpSigningMiddlewareOptions = httpSigningMiddlewareOptions;\nexport const s3ExpressHttpSigningMiddleware = (config) => (next, context) => async (args) => {\n    if (!HttpRequest.isInstance(args.request)) {\n        return next(args);\n    }\n    const smithyContext = getSmithyContext(context);\n    const scheme = smithyContext.selectedHttpAuthScheme;\n    if (!scheme) {\n        throw new Error(`No HttpAuthScheme was selected: unable to sign request`);\n    }\n    const { httpAuthOption: { signingProperties = {} }, identity, signer, } = scheme;\n    let request;\n    if (context.s3ExpressIdentity) {\n        request = await signS3Express(context.s3ExpressIdentity, signingProperties, args.request, await config.signer());\n    }\n    else {\n        request = await signer.sign(args.request, identity, signingProperties);\n    }\n    const output = await next({\n        ...args,\n        request,\n    }).catch((signer.errorHandler || defaultErrorHandler)(signingProperties));\n    (signer.successHandler || defaultSuccessHandler)(output.response, signingProperties);\n    return output;\n};\nexport const getS3ExpressHttpSigningPlugin = (config) => ({\n    applyToStack: (clientStack) => {\n        clientStack.addRelativeTo(s3ExpressHttpSigningMiddleware(config), httpSigningMiddlewareOptions);\n    },\n});\n","export const signS3Express = async (s3ExpressIdentity, signingOptions, request, sigV4MultiRegionSigner) => {\n    const signedRequest = await sigV4MultiRegionSigner.signWithCredentials(request, s3ExpressIdentity, {});\n    if (signedRequest.headers[\"X-Amz-Security-Token\"] || signedRequest.headers[\"x-amz-security-token\"]) {\n        throw new Error(\"X-Amz-Security-Token must not be set for s3-express requests.\");\n    }\n    return signedRequest;\n};\n","import { HttpResponse } from \"@smithy/protocol-http\";\nimport { headStream, splitStream } from \"@smithy/util-stream\";\nconst THROW_IF_EMPTY_BODY = {\n    CopyObjectCommand: true,\n    UploadPartCopyCommand: true,\n    CompleteMultipartUploadCommand: true,\n};\nconst MAX_BYTES_TO_INSPECT = 3000;\nexport const throw200ExceptionsMiddleware = (config) => (next, context) => async (args) => {\n    const result = await next(args);\n    const { response } = result;\n    if (!HttpResponse.isInstance(response)) {\n        return result;\n    }\n    const { statusCode, body: sourceBody } = response;\n    if (statusCode < 200 || statusCode >= 300) {\n        return result;\n    }\n    const isSplittableStream = typeof sourceBody?.stream === \"function\" ||\n        typeof sourceBody?.pipe === \"function\" ||\n        typeof sourceBody?.tee === \"function\";\n    if (!isSplittableStream) {\n        return result;\n    }\n    let bodyCopy = sourceBody;\n    let body = sourceBody;\n    if (sourceBody && typeof sourceBody === \"object\" && !(sourceBody instanceof Uint8Array)) {\n        [bodyCopy, body] = await splitStream(sourceBody);\n    }\n    response.body = body;\n    const bodyBytes = await collectBody(bodyCopy, {\n        streamCollector: async (stream) => {\n            return headStream(stream, MAX_BYTES_TO_INSPECT);\n        },\n    });\n    if (typeof bodyCopy?.destroy === \"function\") {\n        bodyCopy.destroy();\n    }\n    const bodyStringTail = config.utf8Encoder(bodyBytes.subarray(bodyBytes.length - 16));\n    if (bodyBytes.length === 0 && THROW_IF_EMPTY_BODY[context.commandName]) {\n        const err = new Error(\"S3 aborted request\");\n        err.name = \"InternalError\";\n        throw err;\n    }\n    if (bodyStringTail && bodyStringTail.endsWith(\"</Error>\")) {\n        response.statusCode = 400;\n    }\n    return result;\n};\nconst collectBody = (streamBody = new Uint8Array(), context) => {\n    if (streamBody instanceof Uint8Array) {\n        return Promise.resolve(streamBody);\n    }\n    return context.streamCollector(streamBody) || Promise.resolve(new Uint8Array());\n};\nexport const throw200ExceptionsMiddlewareOptions = {\n    relation: \"after\",\n    toMiddleware: \"deserializerMiddleware\",\n    tags: [\"THROW_200_EXCEPTIONS\", \"S3\"],\n    name: \"throw200ExceptionsMiddleware\",\n    override: true,\n};\nexport const getThrow200ExceptionsPlugin = (config) => ({\n    applyToStack: (clientStack) => {\n        clientStack.addRelativeTo(throw200ExceptionsMiddleware(config), throw200ExceptionsMiddlewareOptions);\n    },\n});\n","export function bucketEndpointMiddleware(options) {\n    return (next, context) => async (args) => {\n        if (options.bucketEndpoint) {\n            const endpoint = context.endpointV2;\n            if (endpoint) {\n                const bucket = args.input.Bucket;\n                if (typeof bucket === \"string\") {\n                    try {\n                        const bucketEndpointUrl = new URL(bucket);\n                        context.endpointV2 = {\n                            ...endpoint,\n                            url: bucketEndpointUrl,\n                        };\n                    }\n                    catch (e) {\n                        const warning = `@aws-sdk/middleware-sdk-s3: bucketEndpoint=true was set but Bucket=${bucket} could not be parsed as URL.`;\n                        if (context.logger?.constructor?.name === \"NoOpLogger\") {\n                            console.warn(warning);\n                        }\n                        else {\n                            context.logger?.warn?.(warning);\n                        }\n                        throw e;\n                    }\n                }\n            }\n        }\n        return next(args);\n    };\n}\nexport const bucketEndpointMiddlewareOptions = {\n    name: \"bucketEndpointMiddleware\",\n    override: true,\n    relation: \"after\",\n    toMiddleware: \"endpointV2Middleware\",\n};\n","import { validate as validateArn } from \"@aws-sdk/util-arn-parser\";\nimport { bucketEndpointMiddleware, bucketEndpointMiddlewareOptions } from \"./bucket-endpoint-middleware\";\nexport function validateBucketNameMiddleware({ bucketEndpoint }) {\n    return (next) => async (args) => {\n        const { input: { Bucket }, } = args;\n        if (!bucketEndpoint && typeof Bucket === \"string\" && !validateArn(Bucket) && Bucket.indexOf(\"/\") >= 0) {\n            const err = new Error(`Bucket name shouldn't contain '/', received '${Bucket}'`);\n            err.name = \"InvalidBucketName\";\n            throw err;\n        }\n        return next({ ...args });\n    };\n}\nexport const validateBucketNameMiddlewareOptions = {\n    step: \"initialize\",\n    tags: [\"VALIDATE_BUCKET_NAME\"],\n    name: \"validateBucketNameMiddleware\",\n    override: true,\n};\nexport const getValidateBucketNamePlugin = (options) => ({\n    applyToStack: (clientStack) => {\n        clientStack.add(validateBucketNameMiddleware(options), validateBucketNameMiddlewareOptions);\n        clientStack.addRelativeTo(bucketEndpointMiddleware(options), bucketEndpointMiddlewareOptions);\n    },\n});\n","export const validate = (str) => typeof str === \"string\" && str.indexOf(\"arn:\") === 0 && str.split(\":\").length >= 6;\nexport const parse = (arn) => {\n    const segments = arn.split(\":\");\n    if (segments.length < 6 || segments[0] !== \"arn\")\n        throw new Error(\"Malformed ARN\");\n    const [, partition, service, region, accountId, ...resource] = segments;\n    return {\n        partition,\n        service,\n        region,\n        accountId,\n        resource: resource.join(\":\"),\n    };\n};\nexport const build = (arnObject) => {\n    const { partition = \"aws\", service, region, accountId, resource } = arnObject;\n    if ([service, region, accountId, resource].some((segment) => typeof segment !== \"string\")) {\n        throw new Error(\"Input ARN object is invalid\");\n    }\n    return `arn:${partition}:${service}:${region}:${accountId}:${resource}`;\n};\n","import { normalizeProvider } from \"@smithy/core\";\nexport const DEFAULT_UA_APP_ID = undefined;\nfunction isValidUserAgentAppId(appId) {\n    if (appId === undefined) {\n        return true;\n    }\n    return typeof appId === \"string\" && appId.length <= 50;\n}\nexport function resolveUserAgentConfig(input) {\n    const normalizedAppIdProvider = normalizeProvider(input.userAgentAppId ?? DEFAULT_UA_APP_ID);\n    return {\n        ...input,\n        customUserAgent: typeof input.customUserAgent === \"string\" ? [[input.customUserAgent]] : input.customUserAgent,\n        userAgentAppId: async () => {\n            const appId = await normalizedAppIdProvider();\n            if (!isValidUserAgentAppId(appId)) {\n                const logger = input.logger?.constructor?.name === \"NoOpLogger\" || !input.logger ? console : input.logger;\n                if (typeof appId !== \"string\") {\n                    logger?.warn(\"userAgentAppId must be a string or undefined.\");\n                }\n                else if (appId.length > 50) {\n                    logger?.warn(\"The provided userAgentAppId exceeds the maximum length of 50 characters.\");\n                }\n            }\n            return appId;\n        },\n    };\n}\n","export class EndpointCache {\n    constructor({ size, params }) {\n        this.data = new Map();\n        this.parameters = [];\n        this.capacity = size ?? 50;\n        if (params) {\n            this.parameters = params;\n        }\n    }\n    get(endpointParams, resolver) {\n        const key = this.hash(endpointParams);\n        if (key === false) {\n            return resolver();\n        }\n        if (!this.data.has(key)) {\n            if (this.data.size > this.capacity + 10) {\n                const keys = this.data.keys();\n                let i = 0;\n                while (true) {\n                    const { value, done } = keys.next();\n                    this.data.delete(value);\n                    if (done || ++i > 10) {\n                        break;\n                    }\n                }\n            }\n            this.data.set(key, resolver());\n        }\n        return this.data.get(key);\n    }\n    size() {\n        return this.data.size;\n    }\n    hash(endpointParams) {\n        let buffer = \"\";\n        const { parameters } = this;\n        if (parameters.length === 0) {\n            return false;\n        }\n        for (const param of parameters) {\n            const val = String(endpointParams[param] ?? \"\");\n            if (val.includes(\"|;\")) {\n                return false;\n            }\n            buffer += val + \"|;\";\n        }\n        return buffer;\n    }\n}\n","const IP_V4_REGEX = new RegExp(`^(?:25[0-5]|2[0-4]\\\\d|1\\\\d\\\\d|[1-9]\\\\d|\\\\d)(?:\\\\.(?:25[0-5]|2[0-4]\\\\d|1\\\\d\\\\d|[1-9]\\\\d|\\\\d)){3}$`);\nexport const isIpAddress = (value) => IP_V4_REGEX.test(value) || (value.startsWith(\"[\") && value.endsWith(\"]\"));\n","const VALID_HOST_LABEL_REGEX = new RegExp(`^(?!.*-$)(?!-)[a-zA-Z0-9-]{1,63}$`);\nexport const isValidHostLabel = (value, allowSubDomains = false) => {\n    if (!allowSubDomains) {\n        return VALID_HOST_LABEL_REGEX.test(value);\n    }\n    const labels = value.split(\".\");\n    for (const label of labels) {\n        if (!isValidHostLabel(label)) {\n            return false;\n        }\n    }\n    return true;\n};\n","export const customEndpointFunctions = {};\n","export const debugId = \"endpoints\";\n","export function toDebugString(input) {\n    if (typeof input !== \"object\" || input == null) {\n        return input;\n    }\n    if (\"ref\" in input) {\n        return `$${toDebugString(input.ref)}`;\n    }\n    if (\"fn\" in input) {\n        return `${input.fn}(${(input.argv || []).map(toDebugString).join(\", \")})`;\n    }\n    return JSON.stringify(input, null, 2);\n}\n","export class EndpointError extends Error {\n    constructor(message) {\n        super(message);\n        this.name = \"EndpointError\";\n    }\n}\n","export const booleanEquals = (value1, value2) => value1 === value2;\n","import { EndpointError } from \"../types\";\nimport { getAttrPathList } from \"./getAttrPathList\";\nexport const getAttr = (value, path) => getAttrPathList(path).reduce((acc, index) => {\n    if (typeof acc !== \"object\") {\n        throw new EndpointError(`Index '${index}' in '${path}' not found in '${JSON.stringify(value)}'`);\n    }\n    else if (Array.isArray(acc)) {\n        return acc[parseInt(index)];\n    }\n    return acc[index];\n}, value);\n","import { EndpointError } from \"../types\";\nexport const getAttrPathList = (path) => {\n    const parts = path.split(\".\");\n    const pathList = [];\n    for (const part of parts) {\n        const squareBracketIndex = part.indexOf(\"[\");\n        if (squareBracketIndex !== -1) {\n            if (part.indexOf(\"]\") !== part.length - 1) {\n                throw new EndpointError(`Path: '${path}' does not end with ']'`);\n            }\n            const arrayIndex = part.slice(squareBracketIndex + 1, -1);\n            if (Number.isNaN(parseInt(arrayIndex))) {\n                throw new EndpointError(`Invalid array index: '${arrayIndex}' in path: '${path}'`);\n            }\n            if (squareBracketIndex !== 0) {\n                pathList.push(part.slice(0, squareBracketIndex));\n            }\n            pathList.push(arrayIndex);\n        }\n        else {\n            pathList.push(part);\n        }\n    }\n    return pathList;\n};\n","import { EndpointURLScheme } from \"@smithy/types\";\nimport { isIpAddress } from \"./isIpAddress\";\nconst DEFAULT_PORTS = {\n    [EndpointURLScheme.HTTP]: 80,\n    [EndpointURLScheme.HTTPS]: 443,\n};\nexport const parseURL = (value) => {\n    const whatwgURL = (() => {\n        try {\n            if (value instanceof URL) {\n                return value;\n            }\n            if (typeof value === \"object\" && \"hostname\" in value) {\n                const { hostname, port, protocol = \"\", path = \"\", query = {} } = value;\n                const url = new URL(`${protocol}//${hostname}${port ? `:${port}` : \"\"}${path}`);\n                url.search = Object.entries(query)\n                    .map(([k, v]) => `${k}=${v}`)\n                    .join(\"&\");\n                return url;\n            }\n            return new URL(value);\n        }\n        catch (error) {\n            return null;\n        }\n    })();\n    if (!whatwgURL) {\n        console.error(`Unable to parse ${JSON.stringify(value)} as a whatwg URL.`);\n        return null;\n    }\n    const urlString = whatwgURL.href;\n    const { host, hostname, pathname, protocol, search } = whatwgURL;\n    if (search) {\n        return null;\n    }\n    const scheme = protocol.slice(0, -1);\n    if (!Object.values(EndpointURLScheme).includes(scheme)) {\n        return null;\n    }\n    const isIp = isIpAddress(hostname);\n    const inputContainsDefaultPort = urlString.includes(`${host}:${DEFAULT_PORTS[scheme]}`) ||\n        (typeof value === \"string\" && value.includes(`${host}:${DEFAULT_PORTS[scheme]}`));\n    const authority = `${host}${inputContainsDefaultPort ? `:${DEFAULT_PORTS[scheme]}` : ``}`;\n    return {\n        scheme,\n        authority,\n        path: pathname,\n        normalizedPath: pathname.endsWith(\"/\") ? pathname : `${pathname}/`,\n        isIp,\n    };\n};\n","import { booleanEquals, getAttr, isSet, isValidHostLabel, not, parseURL, stringEquals, substring, uriEncode, } from \"../lib\";\nexport const endpointFunctions = {\n    booleanEquals,\n    getAttr,\n    isSet,\n    isValidHostLabel,\n    not,\n    parseURL,\n    stringEquals,\n    substring,\n    uriEncode,\n};\n","export const isSet = (value) => value != null;\n","export const not = (value) => !value;\n","export const stringEquals = (value1, value2) => value1 === value2;\n","export const substring = (input, start, stop, reverse) => {\n    if (start >= stop || input.length < stop) {\n        return null;\n    }\n    if (!reverse) {\n        return input.substring(start, stop);\n    }\n    return input.substring(input.length - stop, input.length - start);\n};\n","export const uriEncode = (value) => encodeURIComponent(value).replace(/[!*'()]/g, (c) => `%${c.charCodeAt(0).toString(16).toUpperCase()}`);\n","import { getAttr } from \"../lib\";\nexport const evaluateTemplate = (template, options) => {\n    const evaluatedTemplateArr = [];\n    const templateContext = {\n        ...options.endpointParams,\n        ...options.referenceRecord,\n    };\n    let currentIndex = 0;\n    while (currentIndex < template.length) {\n        const openingBraceIndex = template.indexOf(\"{\", currentIndex);\n        if (openingBraceIndex === -1) {\n            evaluatedTemplateArr.push(template.slice(currentIndex));\n            break;\n        }\n        evaluatedTemplateArr.push(template.slice(currentIndex, openingBraceIndex));\n        const closingBraceIndex = template.indexOf(\"}\", openingBraceIndex);\n        if (closingBraceIndex === -1) {\n            evaluatedTemplateArr.push(template.slice(openingBraceIndex));\n            break;\n        }\n        if (template[openingBraceIndex + 1] === \"{\" && template[closingBraceIndex + 1] === \"}\") {\n            evaluatedTemplateArr.push(template.slice(openingBraceIndex + 1, closingBraceIndex));\n            currentIndex = closingBraceIndex + 2;\n        }\n        const parameterName = template.substring(openingBraceIndex + 1, closingBraceIndex);\n        if (parameterName.includes(\"#\")) {\n            const [refName, attrName] = parameterName.split(\"#\");\n            evaluatedTemplateArr.push(getAttr(templateContext[refName], attrName));\n        }\n        else {\n            evaluatedTemplateArr.push(templateContext[parameterName]);\n        }\n        currentIndex = closingBraceIndex + 1;\n    }\n    return evaluatedTemplateArr.join(\"\");\n};\n","import { EndpointError } from \"../types\";\nimport { callFunction } from \"./callFunction\";\nimport { evaluateTemplate } from \"./evaluateTemplate\";\nimport { getReferenceValue } from \"./getReferenceValue\";\nexport const evaluateExpression = (obj, keyName, options) => {\n    if (typeof obj === \"string\") {\n        return evaluateTemplate(obj, options);\n    }\n    else if (obj[\"fn\"]) {\n        return callFunction(obj, options);\n    }\n    else if (obj[\"ref\"]) {\n        return getReferenceValue(obj, options);\n    }\n    throw new EndpointError(`'${keyName}': ${String(obj)} is not a string, function or reference.`);\n};\n","export const getReferenceValue = ({ ref }, options) => {\n    const referenceRecord = {\n        ...options.endpointParams,\n        ...options.referenceRecord,\n    };\n    return referenceRecord[ref];\n};\n","import { customEndpointFunctions } from \"./customEndpointFunctions\";\nimport { endpointFunctions } from \"./endpointFunctions\";\nimport { evaluateExpression } from \"./evaluateExpression\";\nexport const callFunction = ({ fn, argv }, options) => {\n    const evaluatedArgs = argv.map((arg) => [\"boolean\", \"number\"].includes(typeof arg) ? arg : evaluateExpression(arg, \"arg\", options));\n    const fnSegments = fn.split(\".\");\n    if (fnSegments[0] in customEndpointFunctions && fnSegments[1] != null) {\n        return customEndpointFunctions[fnSegments[0]][fnSegments[1]](...evaluatedArgs);\n    }\n    return endpointFunctions[fn](...evaluatedArgs);\n};\n","import { debugId, toDebugString } from \"../debug\";\nimport { EndpointError } from \"../types\";\nimport { callFunction } from \"./callFunction\";\nexport const evaluateCondition = ({ assign, ...fnArgs }, options) => {\n    if (assign && assign in options.referenceRecord) {\n        throw new EndpointError(`'${assign}' is already defined in Reference Record.`);\n    }\n    const value = callFunction(fnArgs, options);\n    options.logger?.debug?.(`${debugId} evaluateCondition: ${toDebugString(fnArgs)} = ${toDebugString(value)}`);\n    return {\n        result: value === \"\" ? true : !!value,\n        ...(assign != null && { toAssign: { name: assign, value } }),\n    };\n};\n","import { debugId, toDebugString } from \"../debug\";\nimport { evaluateCondition } from \"./evaluateCondition\";\nexport const evaluateConditions = (conditions = [], options) => {\n    const conditionsReferenceRecord = {};\n    for (const condition of conditions) {\n        const { result, toAssign } = evaluateCondition(condition, {\n            ...options,\n            referenceRecord: {\n                ...options.referenceRecord,\n                ...conditionsReferenceRecord,\n            },\n        });\n        if (!result) {\n            return { result };\n        }\n        if (toAssign) {\n            conditionsReferenceRecord[toAssign.name] = toAssign.value;\n            options.logger?.debug?.(`${debugId} assign: ${toAssign.name} := ${toDebugString(toAssign.value)}`);\n        }\n    }\n    return { result: true, referenceRecord: conditionsReferenceRecord };\n};\n","import { EndpointError } from \"../types\";\nimport { evaluateExpression } from \"./evaluateExpression\";\nexport const getEndpointHeaders = (headers, options) => Object.entries(headers).reduce((acc, [headerKey, headerVal]) => ({\n    ...acc,\n    [headerKey]: headerVal.map((headerValEntry) => {\n        const processedExpr = evaluateExpression(headerValEntry, \"Header value entry\", options);\n        if (typeof processedExpr !== \"string\") {\n            throw new EndpointError(`Header '${headerKey}' value '${processedExpr}' is not a string`);\n        }\n        return processedExpr;\n    }),\n}), {});\n","import { EndpointError } from \"../types\";\nimport { evaluateTemplate } from \"./evaluateTemplate\";\nimport { getEndpointProperties } from \"./getEndpointProperties\";\nexport const getEndpointProperty = (property, options) => {\n    if (Array.isArray(property)) {\n        return property.map((propertyEntry) => getEndpointProperty(propertyEntry, options));\n    }\n    switch (typeof property) {\n        case \"string\":\n            return evaluateTemplate(property, options);\n        case \"object\":\n            if (property === null) {\n                throw new EndpointError(`Unexpected endpoint property: ${property}`);\n            }\n            return getEndpointProperties(property, options);\n        case \"boolean\":\n            return property;\n        default:\n            throw new EndpointError(`Unexpected endpoint property type: ${typeof property}`);\n    }\n};\n","import { getEndpointProperty } from \"./getEndpointProperty\";\nexport const getEndpointProperties = (properties, options) => Object.entries(properties).reduce((acc, [propertyKey, propertyVal]) => ({\n    ...acc,\n    [propertyKey]: getEndpointProperty(propertyVal, options),\n}), {});\n","import { EndpointError } from \"../types\";\nimport { evaluateExpression } from \"./evaluateExpression\";\nexport const getEndpointUrl = (endpointUrl, options) => {\n    const expression = evaluateExpression(endpointUrl, \"Endpoint URL\", options);\n    if (typeof expression === \"string\") {\n        try {\n            return new URL(expression);\n        }\n        catch (error) {\n            console.error(`Failed to construct URL with ${expression}`, error);\n            throw error;\n        }\n    }\n    throw new EndpointError(`Endpoint URL must be a string, got ${typeof expression}`);\n};\n","import { debugId, toDebugString } from \"../debug\";\nimport { evaluateConditions } from \"./evaluateConditions\";\nimport { getEndpointHeaders } from \"./getEndpointHeaders\";\nimport { getEndpointProperties } from \"./getEndpointProperties\";\nimport { getEndpointUrl } from \"./getEndpointUrl\";\nexport const evaluateEndpointRule = (endpointRule, options) => {\n    const { conditions, endpoint } = endpointRule;\n    const { result, referenceRecord } = evaluateConditions(conditions, options);\n    if (!result) {\n        return;\n    }\n    const endpointRuleOptions = {\n        ...options,\n        referenceRecord: { ...options.referenceRecord, ...referenceRecord },\n    };\n    const { url, properties, headers } = endpoint;\n    options.logger?.debug?.(`${debugId} Resolving endpoint from template: ${toDebugString(endpoint)}`);\n    return {\n        ...(headers != undefined && {\n            headers: getEndpointHeaders(headers, endpointRuleOptions),\n        }),\n        ...(properties != undefined && {\n            properties: getEndpointProperties(properties, endpointRuleOptions),\n        }),\n        url: getEndpointUrl(url, endpointRuleOptions),\n    };\n};\n","import { EndpointError } from \"../types\";\nimport { evaluateConditions } from \"./evaluateConditions\";\nimport { evaluateExpression } from \"./evaluateExpression\";\nexport const evaluateErrorRule = (errorRule, options) => {\n    const { conditions, error } = errorRule;\n    const { result, referenceRecord } = evaluateConditions(conditions, options);\n    if (!result) {\n        return;\n    }\n    throw new EndpointError(evaluateExpression(error, \"Error\", {\n        ...options,\n        referenceRecord: { ...options.referenceRecord, ...referenceRecord },\n    }));\n};\n","import { evaluateConditions } from \"./evaluateConditions\";\nimport { evaluateRules } from \"./evaluateRules\";\nexport const evaluateTreeRule = (treeRule, options) => {\n    const { conditions, rules } = treeRule;\n    const { result, referenceRecord } = evaluateConditions(conditions, options);\n    if (!result) {\n        return;\n    }\n    return evaluateRules(rules, {\n        ...options,\n        referenceRecord: { ...options.referenceRecord, ...referenceRecord },\n    });\n};\n","import { EndpointError } from \"../types\";\nimport { evaluateEndpointRule } from \"./evaluateEndpointRule\";\nimport { evaluateErrorRule } from \"./evaluateErrorRule\";\nimport { evaluateTreeRule } from \"./evaluateTreeRule\";\nexport const evaluateRules = (rules, options) => {\n    for (const rule of rules) {\n        if (rule.type === \"endpoint\") {\n            const endpointOrUndefined = evaluateEndpointRule(rule, options);\n            if (endpointOrUndefined) {\n                return endpointOrUndefined;\n            }\n        }\n        else if (rule.type === \"error\") {\n            evaluateErrorRule(rule, options);\n        }\n        else if (rule.type === \"tree\") {\n            const endpointOrUndefined = evaluateTreeRule(rule, options);\n            if (endpointOrUndefined) {\n                return endpointOrUndefined;\n            }\n        }\n        else {\n            throw new EndpointError(`Unknown endpoint rule: ${rule}`);\n        }\n    }\n    throw new EndpointError(`Rules evaluation failed`);\n};\n","import { debugId, toDebugString } from \"./debug\";\nimport { EndpointError } from \"./types\";\nimport { evaluateRules } from \"./utils\";\nexport const resolveEndpoint = (ruleSetObject, options) => {\n    const { endpointParams, logger } = options;\n    const { parameters, rules } = ruleSetObject;\n    options.logger?.debug?.(`${debugId} Initial EndpointParams: ${toDebugString(endpointParams)}`);\n    const paramsWithDefault = Object.entries(parameters)\n        .filter(([, v]) => v.default != null)\n        .map(([k, v]) => [k, v.default]);\n    if (paramsWithDefault.length > 0) {\n        for (const [paramKey, paramDefaultValue] of paramsWithDefault) {\n            endpointParams[paramKey] = endpointParams[paramKey] ?? paramDefaultValue;\n        }\n    }\n    const requiredParams = Object.entries(parameters)\n        .filter(([, v]) => v.required)\n        .map(([k]) => k);\n    for (const requiredParam of requiredParams) {\n        if (endpointParams[requiredParam] == null) {\n            throw new EndpointError(`Missing required parameter: '${requiredParam}'`);\n        }\n    }\n    const endpoint = evaluateRules(rules, { endpointParams, logger, referenceRecord: {} });\n    options.logger?.debug?.(`${debugId} Resolved endpoint: ${toDebugString(endpoint)}`);\n    return endpoint;\n};\n","import { isValidHostLabel } from \"@smithy/util-endpoints\";\nimport { isIpAddress } from \"../isIpAddress\";\nexport const isVirtualHostableS3Bucket = (value, allowSubDomains = false) => {\n    if (allowSubDomains) {\n        for (const label of value.split(\".\")) {\n            if (!isVirtualHostableS3Bucket(label)) {\n                return false;\n            }\n        }\n        return true;\n    }\n    if (!isValidHostLabel(value)) {\n        return false;\n    }\n    if (value.length < 3 || value.length > 63) {\n        return false;\n    }\n    if (value !== value.toLowerCase()) {\n        return false;\n    }\n    if (isIpAddress(value)) {\n        return false;\n    }\n    return true;\n};\n","import partitionsInfo from \"./partitions.json\";\nlet selectedPartitionsInfo = partitionsInfo;\nlet selectedUserAgentPrefix = \"\";\nexport const partition = (value) => {\n    const { partitions } = selectedPartitionsInfo;\n    for (const partition of partitions) {\n        const { regions, outputs } = partition;\n        for (const [region, regionData] of Object.entries(regions)) {\n            if (region === value) {\n                return {\n                    ...outputs,\n                    ...regionData,\n                };\n            }\n        }\n    }\n    for (const partition of partitions) {\n        const { regionRegex, outputs } = partition;\n        if (new RegExp(regionRegex).test(value)) {\n            return {\n                ...outputs,\n            };\n        }\n    }\n    const DEFAULT_PARTITION = partitions.find((partition) => partition.id === \"aws\");\n    if (!DEFAULT_PARTITION) {\n        throw new Error(\"Provided region was not found in the partition array or regex,\" +\n            \" and default partition with id 'aws' doesn't exist.\");\n    }\n    return {\n        ...DEFAULT_PARTITION.outputs,\n    };\n};\nexport const setPartitionInfo = (partitionsInfo, userAgentPrefix = \"\") => {\n    selectedPartitionsInfo = partitionsInfo;\n    selectedUserAgentPrefix = userAgentPrefix;\n};\nexport const useDefaultPartitionInfo = () => {\n    setPartitionInfo(partitionsInfo, \"\");\n};\nexport const getUserAgentPrefix = () => selectedUserAgentPrefix;\n","import { customEndpointFunctions } from \"@smithy/util-endpoints\";\nimport { isVirtualHostableS3Bucket } from \"./lib/aws/isVirtualHostableS3Bucket\";\nimport { parseArn } from \"./lib/aws/parseArn\";\nimport { partition } from \"./lib/aws/partition\";\nexport const awsEndpointFunctions = {\n    isVirtualHostableS3Bucket: isVirtualHostableS3Bucket,\n    parseArn: parseArn,\n    partition: partition,\n};\ncustomEndpointFunctions.aws = awsEndpointFunctions;\n","const ARN_DELIMITER = \":\";\nconst RESOURCE_DELIMITER = \"/\";\nexport const parseArn = (value) => {\n    const segments = value.split(ARN_DELIMITER);\n    if (segments.length < 6)\n        return null;\n    const [arn, partition, service, region, accountId, ...resourcePath] = segments;\n    if (arn !== \"arn\" || partition === \"\" || service === \"\" || resourcePath.join(ARN_DELIMITER) === \"\")\n        return null;\n    const resourceId = resourcePath.map((resource) => resource.split(RESOURCE_DELIMITER)).flat();\n    return {\n        partition,\n        service,\n        region,\n        accountId,\n        resourceId,\n    };\n};\n","import { setFeature } from \"@aws-sdk/core\";\nconst ACCOUNT_ID_ENDPOINT_REGEX = /\\d{12}\\.ddb/;\nexport async function checkFeatures(context, config, args) {\n    const request = args.request;\n    if (request?.headers?.[\"smithy-protocol\"] === \"rpc-v2-cbor\") {\n        setFeature(context, \"PROTOCOL_RPC_V2_CBOR\", \"M\");\n    }\n    if (typeof config.retryStrategy === \"function\") {\n        const retryStrategy = await config.retryStrategy();\n        if (typeof retryStrategy.acquireInitialRetryToken === \"function\") {\n            if (retryStrategy.constructor?.name?.includes(\"Adaptive\")) {\n                setFeature(context, \"RETRY_MODE_ADAPTIVE\", \"F\");\n            }\n            else {\n                setFeature(context, \"RETRY_MODE_STANDARD\", \"E\");\n            }\n        }\n        else {\n            setFeature(context, \"RETRY_MODE_LEGACY\", \"D\");\n        }\n    }\n    if (typeof config.accountIdEndpointMode === \"function\") {\n        const endpointV2 = context.endpointV2;\n        if (String(endpointV2?.url?.hostname).match(ACCOUNT_ID_ENDPOINT_REGEX)) {\n            setFeature(context, \"ACCOUNT_ID_ENDPOINT\", \"O\");\n        }\n        switch (await config.accountIdEndpointMode?.()) {\n            case \"disabled\":\n                setFeature(context, \"ACCOUNT_ID_MODE_DISABLED\", \"Q\");\n                break;\n            case \"preferred\":\n                setFeature(context, \"ACCOUNT_ID_MODE_PREFERRED\", \"P\");\n                break;\n            case \"required\":\n                setFeature(context, \"ACCOUNT_ID_MODE_REQUIRED\", \"R\");\n                break;\n        }\n    }\n    const identity = context.__smithy_context?.selectedHttpAuthScheme?.identity;\n    if (identity?.$source) {\n        const credentials = identity;\n        if (credentials.accountId) {\n            setFeature(context, \"RESOLVED_ACCOUNT_ID\", \"T\");\n        }\n        for (const [key, value] of Object.entries(credentials.$source ?? {})) {\n            setFeature(context, key, value);\n        }\n    }\n}\n","export const USER_AGENT = \"user-agent\";\nexport const X_AMZ_USER_AGENT = \"x-amz-user-agent\";\nexport const SPACE = \" \";\nexport const UA_NAME_SEPARATOR = \"/\";\nexport const UA_NAME_ESCAPE_REGEX = /[^\\!\\$\\%\\&\\'\\*\\+\\-\\.\\^\\_\\`\\|\\~\\d\\w]/g;\nexport const UA_VALUE_ESCAPE_REGEX = /[^\\!\\$\\%\\&\\'\\*\\+\\-\\.\\^\\_\\`\\|\\~\\d\\w\\#]/g;\nexport const UA_ESCAPE_CHAR = \"-\";\n","import { getUserAgentPrefix } from \"@aws-sdk/util-endpoints\";\nimport { HttpRequest } from \"@smithy/protocol-http\";\nimport { checkFeatures } from \"./check-features\";\nimport { SPACE, UA_ESCAPE_CHAR, UA_NAME_ESCAPE_REGEX, UA_NAME_SEPARATOR, UA_VALUE_ESCAPE_REGEX, USER_AGENT, X_AMZ_USER_AGENT, } from \"./constants\";\nimport { encodeFeatures } from \"./encode-features\";\nexport const userAgentMiddleware = (options) => (next, context) => async (args) => {\n    const { request } = args;\n    if (!HttpRequest.isInstance(request)) {\n        return next(args);\n    }\n    const { headers } = request;\n    const userAgent = context?.userAgent?.map(escapeUserAgent) || [];\n    const defaultUserAgent = (await options.defaultUserAgentProvider()).map(escapeUserAgent);\n    await checkFeatures(context, options, args);\n    const awsContext = context;\n    defaultUserAgent.push(`m/${encodeFeatures(Object.assign({}, context.__smithy_context?.features, awsContext.__aws_sdk_context?.features))}`);\n    const customUserAgent = options?.customUserAgent?.map(escapeUserAgent) || [];\n    const appId = await options.userAgentAppId();\n    if (appId) {\n        defaultUserAgent.push(escapeUserAgent([`app/${appId}`]));\n    }\n    const prefix = getUserAgentPrefix();\n    const sdkUserAgentValue = (prefix ? [prefix] : [])\n        .concat([...defaultUserAgent, ...userAgent, ...customUserAgent])\n        .join(SPACE);\n    const normalUAValue = [\n        ...defaultUserAgent.filter((section) => section.startsWith(\"aws-sdk-\")),\n        ...customUserAgent,\n    ].join(SPACE);\n    if (options.runtime !== \"browser\") {\n        if (normalUAValue) {\n            headers[X_AMZ_USER_AGENT] = headers[X_AMZ_USER_AGENT]\n                ? `${headers[USER_AGENT]} ${normalUAValue}`\n                : normalUAValue;\n        }\n        headers[USER_AGENT] = sdkUserAgentValue;\n    }\n    else {\n        headers[X_AMZ_USER_AGENT] = sdkUserAgentValue;\n    }\n    return next({\n        ...args,\n        request,\n    });\n};\nconst escapeUserAgent = (userAgentPair) => {\n    const name = userAgentPair[0]\n        .split(UA_NAME_SEPARATOR)\n        .map((part) => part.replace(UA_NAME_ESCAPE_REGEX, UA_ESCAPE_CHAR))\n        .join(UA_NAME_SEPARATOR);\n    const version = userAgentPair[1]?.replace(UA_VALUE_ESCAPE_REGEX, UA_ESCAPE_CHAR);\n    const prefixSeparatorIndex = name.indexOf(UA_NAME_SEPARATOR);\n    const prefix = name.substring(0, prefixSeparatorIndex);\n    let uaName = name.substring(prefixSeparatorIndex + 1);\n    if (prefix === \"api\") {\n        uaName = uaName.toLowerCase();\n    }\n    return [prefix, uaName, version]\n        .filter((item) => item && item.length > 0)\n        .reduce((acc, item, index) => {\n        switch (index) {\n            case 0:\n                return item;\n            case 1:\n                return `${acc}/${item}`;\n            default:\n                return `${acc}#${item}`;\n        }\n    }, \"\");\n};\nexport const getUserAgentMiddlewareOptions = {\n    name: \"getUserAgentMiddleware\",\n    step: \"build\",\n    priority: \"low\",\n    tags: [\"SET_USER_AGENT\", \"USER_AGENT\"],\n    override: true,\n};\nexport const getUserAgentPlugin = (config) => ({\n    applyToStack: (clientStack) => {\n        clientStack.add(userAgentMiddleware(config), getUserAgentMiddlewareOptions);\n    },\n});\n","const BYTE_LIMIT = 1024;\nexport function encodeFeatures(features) {\n    let buffer = \"\";\n    for (const key in features) {\n        const val = features[key];\n        if (buffer.length + val.length + 1 <= BYTE_LIMIT) {\n            if (buffer.length) {\n                buffer += \",\" + val;\n            }\n            else {\n                buffer += val;\n            }\n            continue;\n        }\n        break;\n    }\n    return buffer;\n}\n","import { booleanSelector, SelectorType } from \"@smithy/util-config-provider\";\nexport const ENV_USE_DUALSTACK_ENDPOINT = \"AWS_USE_DUALSTACK_ENDPOINT\";\nexport const CONFIG_USE_DUALSTACK_ENDPOINT = \"use_dualstack_endpoint\";\nexport const DEFAULT_USE_DUALSTACK_ENDPOINT = false;\nexport const NODE_USE_DUALSTACK_ENDPOINT_CONFIG_OPTIONS = {\n    environmentVariableSelector: (env) => booleanSelector(env, ENV_USE_DUALSTACK_ENDPOINT, SelectorType.ENV),\n    configFileSelector: (profile) => booleanSelector(profile, CONFIG_USE_DUALSTACK_ENDPOINT, SelectorType.CONFIG),\n    default: false,\n};\n","import { booleanSelector, SelectorType } from \"@smithy/util-config-provider\";\nexport const ENV_USE_FIPS_ENDPOINT = \"AWS_USE_FIPS_ENDPOINT\";\nexport const CONFIG_USE_FIPS_ENDPOINT = \"use_fips_endpoint\";\nexport const DEFAULT_USE_FIPS_ENDPOINT = false;\nexport const NODE_USE_FIPS_ENDPOINT_CONFIG_OPTIONS = {\n    environmentVariableSelector: (env) => booleanSelector(env, ENV_USE_FIPS_ENDPOINT, SelectorType.ENV),\n    configFileSelector: (profile) => booleanSelector(profile, CONFIG_USE_FIPS_ENDPOINT, SelectorType.CONFIG),\n    default: false,\n};\n","export const REGION_ENV_NAME = \"AWS_REGION\";\nexport const REGION_INI_NAME = \"region\";\nexport const NODE_REGION_CONFIG_OPTIONS = {\n    environmentVariableSelector: (env) => env[REGION_ENV_NAME],\n    configFileSelector: (profile) => profile[REGION_INI_NAME],\n    default: () => {\n        throw new Error(\"Region is missing\");\n    },\n};\nexport const NODE_REGION_CONFIG_FILE_OPTIONS = {\n    preferredFile: \"credentials\",\n};\n","export const isFipsRegion = (region) => typeof region === \"string\" && (region.startsWith(\"fips-\") || region.endsWith(\"-fips\"));\n","import { isFipsRegion } from \"./isFipsRegion\";\nexport const getRealRegion = (region) => isFipsRegion(region)\n    ? [\"fips-aws-global\", \"aws-fips\"].includes(region)\n        ? \"us-east-1\"\n        : region.replace(/fips-(dkr-|prod-)?|-fips/, \"\")\n    : region;\n","import { getRealRegion } from \"./getRealRegion\";\nimport { isFipsRegion } from \"./isFipsRegion\";\nexport const resolveRegionConfig = (input) => {\n    const { region, useFipsEndpoint } = input;\n    if (!region) {\n        throw new Error(\"Region is missing\");\n    }\n    return {\n        ...input,\n        region: async () => {\n            if (typeof region === \"string\") {\n                return getRealRegion(region);\n            }\n            const providedRegion = await region();\n            return getRealRegion(providedRegion);\n        },\n        useFipsEndpoint: async () => {\n            const providedRegion = typeof region === \"string\" ? region : await region();\n            if (isFipsRegion(providedRegion)) {\n                return true;\n            }\n            return typeof useFipsEndpoint !== \"function\" ? Promise.resolve(!!useFipsEndpoint) : useFipsEndpoint();\n        },\n    };\n};\n","import { HttpRequest } from \"@smithy/protocol-http\";\nconst CONTENT_LENGTH_HEADER = \"content-length\";\nexport function contentLengthMiddleware(bodyLengthChecker) {\n    return (next) => async (args) => {\n        const request = args.request;\n        if (HttpRequest.isInstance(request)) {\n            const { body, headers } = request;\n            if (body &&\n                Object.keys(headers)\n                    .map((str) => str.toLowerCase())\n                    .indexOf(CONTENT_LENGTH_HEADER) === -1) {\n                try {\n                    const length = bodyLengthChecker(body);\n                    request.headers = {\n                        ...request.headers,\n                        [CONTENT_LENGTH_HEADER]: String(length),\n                    };\n                }\n                catch (error) {\n                }\n            }\n        }\n        return next({\n            ...args,\n            request,\n        });\n    };\n}\nexport const contentLengthMiddlewareOptions = {\n    step: \"build\",\n    tags: [\"SET_CONTENT_LENGTH\", \"CONTENT_LENGTH\"],\n    name: \"contentLengthMiddleware\",\n    override: true,\n};\nexport const getContentLengthPlugin = (options) => ({\n    applyToStack: (clientStack) => {\n        clientStack.add(contentLengthMiddleware(options.bodyLengthChecker), contentLengthMiddlewareOptions);\n    },\n});\n","export const resolveParamsForS3 = async (endpointParams) => {\n    const bucket = endpointParams?.Bucket || \"\";\n    if (typeof endpointParams.Bucket === \"string\") {\n        endpointParams.Bucket = bucket.replace(/#/g, encodeURIComponent(\"#\")).replace(/\\?/g, encodeURIComponent(\"?\"));\n    }\n    if (isArnBucketName(bucket)) {\n        if (endpointParams.ForcePathStyle === true) {\n            throw new Error(\"Path-style addressing cannot be used with ARN buckets\");\n        }\n    }\n    else if (!isDnsCompatibleBucketName(bucket) ||\n        (bucket.indexOf(\".\") !== -1 && !String(endpointParams.Endpoint).startsWith(\"http:\")) ||\n        bucket.toLowerCase() !== bucket ||\n        bucket.length < 3) {\n        endpointParams.ForcePathStyle = true;\n    }\n    if (endpointParams.DisableMultiRegionAccessPoints) {\n        endpointParams.disableMultiRegionAccessPoints = true;\n        endpointParams.DisableMRAP = true;\n    }\n    return endpointParams;\n};\nconst DOMAIN_PATTERN = /^[a-z0-9][a-z0-9\\.\\-]{1,61}[a-z0-9]$/;\nconst IP_ADDRESS_PATTERN = /(\\d+\\.){3}\\d+/;\nconst DOTS_PATTERN = /\\.\\./;\nexport const DOT_PATTERN = /\\./;\nexport const S3_HOSTNAME_PATTERN = /^(.+\\.)?s3(-fips)?(\\.dualstack)?[.-]([a-z0-9-]+)\\./;\nexport const isDnsCompatibleBucketName = (bucketName) => DOMAIN_PATTERN.test(bucketName) && !IP_ADDRESS_PATTERN.test(bucketName) && !DOTS_PATTERN.test(bucketName);\nexport const isArnBucketName = (bucketName) => {\n    const [arn, partition, service, , , bucket] = bucketName.split(\":\");\n    const isArn = arn === \"arn\" && bucketName.split(\":\").length >= 6;\n    const isValidArn = Boolean(isArn && partition && service && bucket);\n    if (isArn && !isValidArn) {\n        throw new Error(`Invalid ARN: ${bucketName} was an invalid ARN.`);\n    }\n    return isValidArn;\n};\n","export const createConfigValueProvider = (configKey, canonicalEndpointParamKey, config) => {\n    const configProvider = async () => {\n        const configValue = config[configKey] ?? config[canonicalEndpointParamKey];\n        if (typeof configValue === \"function\") {\n            return configValue();\n        }\n        return configValue;\n    };\n    if (configKey === \"credentialScope\" || canonicalEndpointParamKey === \"CredentialScope\") {\n        return async () => {\n            const credentials = typeof config.credentials === \"function\" ? await config.credentials() : config.credentials;\n            const configValue = credentials?.credentialScope ?? credentials?.CredentialScope;\n            return configValue;\n        };\n    }\n    if (configKey === \"accountId\" || canonicalEndpointParamKey === \"AccountId\") {\n        return async () => {\n            const credentials = typeof config.credentials === \"function\" ? await config.credentials() : config.credentials;\n            const configValue = credentials?.accountId ?? credentials?.AccountId;\n            return configValue;\n        };\n    }\n    if (configKey === \"endpoint\" || canonicalEndpointParamKey === \"endpoint\") {\n        return async () => {\n            const endpoint = await configProvider();\n            if (endpoint && typeof endpoint === \"object\") {\n                if (\"url\" in endpoint) {\n                    return endpoint.url.href;\n                }\n                if (\"hostname\" in endpoint) {\n                    const { protocol, hostname, port, path } = endpoint;\n                    return `${protocol}//${hostname}${port ? \":\" + port : \"\"}${path}`;\n                }\n            }\n            return endpoint;\n        };\n    }\n    return configProvider;\n};\n","export function getSelectorName(functionString) {\n    try {\n        const constants = new Set(Array.from(functionString.match(/([A-Z_]){3,}/g) ?? []));\n        constants.delete(\"CONFIG\");\n        constants.delete(\"CONFIG_PREFIX_SEPARATOR\");\n        constants.delete(\"ENV\");\n        return [...constants].join(\", \");\n    }\n    catch (e) {\n        return functionString;\n    }\n}\n","import { CredentialsProviderError } from \"@smithy/property-provider\";\nimport { getSelectorName } from \"./getSelectorName\";\nexport const fromEnv = (envVarSelector, logger) => async () => {\n    try {\n        const config = envVarSelector(process.env);\n        if (config === undefined) {\n            throw new Error();\n        }\n        return config;\n    }\n    catch (e) {\n        throw new CredentialsProviderError(e.message || `Not found in ENV: ${getSelectorName(envVarSelector.toString())}`, { logger });\n    }\n};\n","import { homedir } from \"os\";\nimport { sep } from \"path\";\nconst homeDirCache = {};\nconst getHomeDirCacheKey = () => {\n    if (process && process.geteuid) {\n        return `${process.geteuid()}`;\n    }\n    return \"DEFAULT\";\n};\nexport const getHomeDir = () => {\n    const { HOME, USERPROFILE, HOMEPATH, HOMEDRIVE = `C:${sep}` } = process.env;\n    if (HOME)\n        return HOME;\n    if (USERPROFILE)\n        return USERPROFILE;\n    if (HOMEPATH)\n        return `${HOMEDRIVE}${HOMEPATH}`;\n    const homeDirCacheKey = getHomeDirCacheKey();\n    if (!homeDirCache[homeDirCacheKey])\n        homeDirCache[homeDirCacheKey] = homedir();\n    return homeDirCache[homeDirCacheKey];\n};\n","export const ENV_PROFILE = \"AWS_PROFILE\";\nexport const DEFAULT_PROFILE = \"default\";\nexport const getProfileName = (init) => init.profile || process.env[ENV_PROFILE] || DEFAULT_PROFILE;\n","import { createHash } from \"crypto\";\nimport { join } from \"path\";\nimport { getHomeDir } from \"./getHomeDir\";\nexport const getSSOTokenFilepath = (id) => {\n    const hasher = createHash(\"sha1\");\n    const cacheName = hasher.update(id).digest(\"hex\");\n    return join(getHomeDir(), \".aws\", \"sso\", \"cache\", `${cacheName}.json`);\n};\n","import { promises as fsPromises } from \"fs\";\nimport { getSSOTokenFilepath } from \"./getSSOTokenFilepath\";\nconst { readFile } = fsPromises;\nexport const getSSOTokenFromFile = async (id) => {\n    const ssoTokenFilepath = getSSOTokenFilepath(id);\n    const ssoTokenText = await readFile(ssoTokenFilepath, \"utf8\");\n    return JSON.parse(ssoTokenText);\n};\n","import { IniSectionType } from \"@smithy/types\";\nimport { CONFIG_PREFIX_SEPARATOR } from \"./loadSharedConfigFiles\";\nexport const getConfigData = (data) => Object.entries(data)\n    .filter(([key]) => {\n    const indexOfSeparator = key.indexOf(CONFIG_PREFIX_SEPARATOR);\n    if (indexOfSeparator === -1) {\n        return false;\n    }\n    return Object.values(IniSectionType).includes(key.substring(0, indexOfSeparator));\n})\n    .reduce((acc, [key, value]) => {\n    const indexOfSeparator = key.indexOf(CONFIG_PREFIX_SEPARATOR);\n    const updatedKey = key.substring(0, indexOfSeparator) === IniSectionType.PROFILE ? key.substring(indexOfSeparator + 1) : key;\n    acc[updatedKey] = value;\n    return acc;\n}, {\n    ...(data.default && { default: data.default }),\n});\n","import { join } from \"path\";\nimport { getHomeDir } from \"./getHomeDir\";\nexport const ENV_CONFIG_PATH = \"AWS_CONFIG_FILE\";\nexport const getConfigFilepath = () => process.env[ENV_CONFIG_PATH] || join(getHomeDir(), \".aws\", \"config\");\n","import { join } from \"path\";\nimport { getHomeDir } from \"./getHomeDir\";\nexport const ENV_CREDENTIALS_PATH = \"AWS_SHARED_CREDENTIALS_FILE\";\nexport const getCredentialsFilepath = () => process.env[ENV_CREDENTIALS_PATH] || join(getHomeDir(), \".aws\", \"credentials\");\n","import { IniSectionType } from \"@smithy/types\";\nimport { CONFIG_PREFIX_SEPARATOR } from \"./loadSharedConfigFiles\";\nconst prefixKeyRegex = /^([\\w-]+)\\s([\"'])?([\\w-@\\+\\.%:/]+)\\2$/;\nconst profileNameBlockList = [\"__proto__\", \"profile __proto__\"];\nexport const parseIni = (iniData) => {\n    const map = {};\n    let currentSection;\n    let currentSubSection;\n    for (const iniLine of iniData.split(/\\r?\\n/)) {\n        const trimmedLine = iniLine.split(/(^|\\s)[;#]/)[0].trim();\n        const isSection = trimmedLine[0] === \"[\" && trimmedLine[trimmedLine.length - 1] === \"]\";\n        if (isSection) {\n            currentSection = undefined;\n            currentSubSection = undefined;\n            const sectionName = trimmedLine.substring(1, trimmedLine.length - 1);\n            const matches = prefixKeyRegex.exec(sectionName);\n            if (matches) {\n                const [, prefix, , name] = matches;\n                if (Object.values(IniSectionType).includes(prefix)) {\n                    currentSection = [prefix, name].join(CONFIG_PREFIX_SEPARATOR);\n                }\n            }\n            else {\n                currentSection = sectionName;\n            }\n            if (profileNameBlockList.includes(sectionName)) {\n                throw new Error(`Found invalid profile name \"${sectionName}\"`);\n            }\n        }\n        else if (currentSection) {\n            const indexOfEqualsSign = trimmedLine.indexOf(\"=\");\n            if (![0, -1].includes(indexOfEqualsSign)) {\n                const [name, value] = [\n                    trimmedLine.substring(0, indexOfEqualsSign).trim(),\n                    trimmedLine.substring(indexOfEqualsSign + 1).trim(),\n                ];\n                if (value === \"\") {\n                    currentSubSection = name;\n                }\n                else {\n                    if (currentSubSection && iniLine.trimStart() === iniLine) {\n                        currentSubSection = undefined;\n                    }\n                    map[currentSection] = map[currentSection] || {};\n                    const key = currentSubSection ? [currentSubSection, name].join(CONFIG_PREFIX_SEPARATOR) : name;\n                    map[currentSection][key] = value;\n                }\n            }\n        }\n    }\n    return map;\n};\n","import { promises as fsPromises } from \"fs\";\nconst { readFile } = fsPromises;\nconst filePromisesHash = {};\nexport const slurpFile = (path, options) => {\n    if (!filePromisesHash[path] || options?.ignoreCache) {\n        filePromisesHash[path] = readFile(path, \"utf8\");\n    }\n    return filePromisesHash[path];\n};\n","import { join } from \"path\";\nimport { getConfigData } from \"./getConfigData\";\nimport { getConfigFilepath } from \"./getConfigFilepath\";\nimport { getCredentialsFilepath } from \"./getCredentialsFilepath\";\nimport { getHomeDir } from \"./getHomeDir\";\nimport { parseIni } from \"./parseIni\";\nimport { slurpFile } from \"./slurpFile\";\nconst swallowError = () => ({});\nexport const CONFIG_PREFIX_SEPARATOR = \".\";\nexport const loadSharedConfigFiles = async (init = {}) => {\n    const { filepath = getCredentialsFilepath(), configFilepath = getConfigFilepath() } = init;\n    const homeDir = getHomeDir();\n    const relativeHomeDirPrefix = \"~/\";\n    let resolvedFilepath = filepath;\n    if (filepath.startsWith(relativeHomeDirPrefix)) {\n        resolvedFilepath = join(homeDir, filepath.slice(2));\n    }\n    let resolvedConfigFilepath = configFilepath;\n    if (configFilepath.startsWith(relativeHomeDirPrefix)) {\n        resolvedConfigFilepath = join(homeDir, configFilepath.slice(2));\n    }\n    const parsedFiles = await Promise.all([\n        slurpFile(resolvedConfigFilepath, {\n            ignoreCache: init.ignoreCache,\n        })\n            .then(parseIni)\n            .then(getConfigData)\n            .catch(swallowError),\n        slurpFile(resolvedFilepath, {\n            ignoreCache: init.ignoreCache,\n        })\n            .then(parseIni)\n            .catch(swallowError),\n    ]);\n    return {\n        configFile: parsedFiles[0],\n        credentialsFile: parsedFiles[1],\n    };\n};\n","import { IniSectionType } from \"@smithy/types\";\nimport { CONFIG_PREFIX_SEPARATOR } from \"./loadSharedConfigFiles\";\nexport const getSsoSessionData = (data) => Object.entries(data)\n    .filter(([key]) => key.startsWith(IniSectionType.SSO_SESSION + CONFIG_PREFIX_SEPARATOR))\n    .reduce((acc, [key, value]) => ({ ...acc, [key.substring(key.indexOf(CONFIG_PREFIX_SEPARATOR) + 1)]: value }), {});\n","import { getConfigFilepath } from \"./getConfigFilepath\";\nimport { getSsoSessionData } from \"./getSsoSessionData\";\nimport { parseIni } from \"./parseIni\";\nimport { slurpFile } from \"./slurpFile\";\nconst swallowError = () => ({});\nexport const loadSsoSessionData = async (init = {}) => slurpFile(init.configFilepath ?? getConfigFilepath())\n    .then(parseIni)\n    .then(getSsoSessionData)\n    .catch(swallowError);\n","import { loadSharedConfigFiles } from \"./loadSharedConfigFiles\";\nimport { mergeConfigFiles } from \"./mergeConfigFiles\";\nexport const parseKnownFiles = async (init) => {\n    const parsedFiles = await loadSharedConfigFiles(init);\n    return mergeConfigFiles(parsedFiles.configFile, parsedFiles.credentialsFile);\n};\n","export const mergeConfigFiles = (...files) => {\n    const merged = {};\n    for (const file of files) {\n        for (const [key, values] of Object.entries(file)) {\n            if (merged[key] !== undefined) {\n                Object.assign(merged[key], values);\n            }\n            else {\n                merged[key] = values;\n            }\n        }\n    }\n    return merged;\n};\n","import { fromStatic as convertToProvider } from \"@smithy/property-provider\";\nconst isFunction = (func) => typeof func === \"function\";\nexport const fromStatic = (defaultValue) => isFunction(defaultValue) ? async () => await defaultValue() : convertToProvider(defaultValue);\n","export const fromStatic = (staticValue) => () => Promise.resolve(staticValue);\n","import { chain, memoize } from \"@smithy/property-provider\";\nimport { fromEnv } from \"./fromEnv\";\nimport { fromSharedConfigFiles } from \"./fromSharedConfigFiles\";\nimport { fromStatic } from \"./fromStatic\";\nexport const loadConfig = ({ environmentVariableSelector, configFileSelector, default: defaultValue }, configuration = {}) => memoize(chain(fromEnv(environmentVariableSelector), fromSharedConfigFiles(configFileSelector, configuration), fromStatic(defaultValue)));\n","import { CredentialsProviderError } from \"@smithy/property-provider\";\nimport { getProfileName, loadSharedConfigFiles } from \"@smithy/shared-ini-file-loader\";\nimport { getSelectorName } from \"./getSelectorName\";\nexport const fromSharedConfigFiles = (configSelector, { preferredFile = \"config\", ...init } = {}) => async () => {\n    const profile = getProfileName(init);\n    const { configFile, credentialsFile } = await loadSharedConfigFiles(init);\n    const profileFromCredentials = credentialsFile[profile] || {};\n    const profileFromConfig = configFile[profile] || {};\n    const mergedProfile = preferredFile === \"config\"\n        ? { ...profileFromCredentials, ...profileFromConfig }\n        : { ...profileFromConfig, ...profileFromCredentials };\n    try {\n        const cfgFile = preferredFile === \"config\" ? configFile : credentialsFile;\n        const configValue = configSelector(mergedProfile, cfgFile);\n        if (configValue === undefined) {\n            throw new Error();\n        }\n        return configValue;\n    }\n    catch (e) {\n        throw new CredentialsProviderError(e.message || `Not found in config files w/ profile [${profile}]: ${getSelectorName(configSelector.toString())}`, { logger: init.logger });\n    }\n};\n","import { CONFIG_PREFIX_SEPARATOR } from \"@smithy/shared-ini-file-loader\";\nconst ENV_ENDPOINT_URL = \"AWS_ENDPOINT_URL\";\nconst CONFIG_ENDPOINT_URL = \"endpoint_url\";\nexport const getEndpointUrlConfig = (serviceId) => ({\n    environmentVariableSelector: (env) => {\n        const serviceSuffixParts = serviceId.split(\" \").map((w) => w.toUpperCase());\n        const serviceEndpointUrl = env[[ENV_ENDPOINT_URL, ...serviceSuffixParts].join(\"_\")];\n        if (serviceEndpointUrl)\n            return serviceEndpointUrl;\n        const endpointUrl = env[ENV_ENDPOINT_URL];\n        if (endpointUrl)\n            return endpointUrl;\n        return undefined;\n    },\n    configFileSelector: (profile, config) => {\n        if (config && profile.services) {\n            const servicesSection = config[[\"services\", profile.services].join(CONFIG_PREFIX_SEPARATOR)];\n            if (servicesSection) {\n                const servicePrefixParts = serviceId.split(\" \").map((w) => w.toLowerCase());\n                const endpointUrl = servicesSection[[servicePrefixParts.join(\"_\"), CONFIG_ENDPOINT_URL].join(CONFIG_PREFIX_SEPARATOR)];\n                if (endpointUrl)\n                    return endpointUrl;\n            }\n        }\n        const endpointUrl = profile[CONFIG_ENDPOINT_URL];\n        if (endpointUrl)\n            return endpointUrl;\n        return undefined;\n    },\n    default: undefined,\n});\n","import { loadConfig } from \"@smithy/node-config-provider\";\nimport { getEndpointUrlConfig } from \"./getEndpointUrlConfig\";\nexport const getEndpointFromConfig = async (serviceId) => loadConfig(getEndpointUrlConfig(serviceId ?? \"\"))();\n","import { parseQueryString } from \"@smithy/querystring-parser\";\nexport const parseUrl = (url) => {\n    if (typeof url === \"string\") {\n        return parseUrl(new URL(url));\n    }\n    const { hostname, pathname, port, protocol, search } = url;\n    let query;\n    if (search) {\n        query = parseQueryString(search);\n    }\n    return {\n        hostname,\n        port: port ? parseInt(port) : undefined,\n        protocol,\n        path: pathname,\n        query,\n    };\n};\n","export function parseQueryString(querystring) {\n    const query = {};\n    querystring = querystring.replace(/^\\?/, \"\");\n    if (querystring) {\n        for (const pair of querystring.split(\"&\")) {\n            let [key, value = null] = pair.split(\"=\");\n            key = decodeURIComponent(key);\n            if (value) {\n                value = decodeURIComponent(value);\n            }\n            if (!(key in query)) {\n                query[key] = value;\n            }\n            else if (Array.isArray(query[key])) {\n                query[key].push(value);\n            }\n            else {\n                query[key] = [query[key], value];\n            }\n        }\n    }\n    return query;\n}\n","import { parseUrl } from \"@smithy/url-parser\";\nexport const toEndpointV1 = (endpoint) => {\n    if (typeof endpoint === \"object\") {\n        if (\"url\" in endpoint) {\n            return parseUrl(endpoint.url);\n        }\n        return endpoint;\n    }\n    return parseUrl(endpoint);\n};\n","import { resolveParamsForS3 } from \"../service-customizations\";\nimport { createConfigValueProvider } from \"./createConfigValueProvider\";\nimport { getEndpointFromConfig } from \"./getEndpointFromConfig\";\nimport { toEndpointV1 } from \"./toEndpointV1\";\nexport const getEndpointFromInstructions = async (commandInput, instructionsSupplier, clientConfig, context) => {\n    if (!clientConfig.endpoint) {\n        let endpointFromConfig;\n        if (clientConfig.serviceConfiguredEndpoint) {\n            endpointFromConfig = await clientConfig.serviceConfiguredEndpoint();\n        }\n        else {\n            endpointFromConfig = await getEndpointFromConfig(clientConfig.serviceId);\n        }\n        if (endpointFromConfig) {\n            clientConfig.endpoint = () => Promise.resolve(toEndpointV1(endpointFromConfig));\n        }\n    }\n    const endpointParams = await resolveParams(commandInput, instructionsSupplier, clientConfig);\n    if (typeof clientConfig.endpointProvider !== \"function\") {\n        throw new Error(\"config.endpointProvider is not set.\");\n    }\n    const endpoint = clientConfig.endpointProvider(endpointParams, context);\n    return endpoint;\n};\nexport const resolveParams = async (commandInput, instructionsSupplier, clientConfig) => {\n    const endpointParams = {};\n    const instructions = instructionsSupplier?.getEndpointParameterInstructions?.() || {};\n    for (const [name, instruction] of Object.entries(instructions)) {\n        switch (instruction.type) {\n            case \"staticContextParams\":\n                endpointParams[name] = instruction.value;\n                break;\n            case \"contextParams\":\n                endpointParams[name] = commandInput[instruction.name];\n                break;\n            case \"clientContextParams\":\n            case \"builtInParams\":\n                endpointParams[name] = await createConfigValueProvider(instruction.name, name, clientConfig)();\n                break;\n            case \"operationContextParams\":\n                endpointParams[name] = instruction.get(commandInput);\n                break;\n            default:\n                throw new Error(\"Unrecognized endpoint parameter instruction: \" + JSON.stringify(instruction));\n        }\n    }\n    if (Object.keys(instructions).length === 0) {\n        Object.assign(endpointParams, clientConfig);\n    }\n    if (String(clientConfig.serviceId).toLowerCase() === \"s3\") {\n        await resolveParamsForS3(endpointParams);\n    }\n    return endpointParams;\n};\n","import { setFeature } from \"@smithy/core\";\nimport { getSmithyContext } from \"@smithy/util-middleware\";\nimport { getEndpointFromInstructions } from \"./adaptors/getEndpointFromInstructions\";\nexport const endpointMiddleware = ({ config, instructions, }) => {\n    return (next, context) => async (args) => {\n        if (config.endpoint) {\n            setFeature(context, \"ENDPOINT_OVERRIDE\", \"N\");\n        }\n        const endpoint = await getEndpointFromInstructions(args.input, {\n            getEndpointParameterInstructions() {\n                return instructions;\n            },\n        }, { ...config }, context);\n        context.endpointV2 = endpoint;\n        context.authSchemes = endpoint.properties?.authSchemes;\n        const authScheme = context.authSchemes?.[0];\n        if (authScheme) {\n            context[\"signing_region\"] = authScheme.signingRegion;\n            context[\"signing_service\"] = authScheme.signingName;\n            const smithyContext = getSmithyContext(context);\n            const httpAuthOption = smithyContext?.selectedHttpAuthScheme?.httpAuthOption;\n            if (httpAuthOption) {\n                httpAuthOption.signingProperties = Object.assign(httpAuthOption.signingProperties || {}, {\n                    signing_region: authScheme.signingRegion,\n                    signingRegion: authScheme.signingRegion,\n                    signing_service: authScheme.signingName,\n                    signingName: authScheme.signingName,\n                    signingRegionSet: authScheme.signingRegionSet,\n                }, authScheme.properties);\n            }\n        }\n        return next({\n            ...args,\n        });\n    };\n};\n","export function setFeature(context, feature, value) {\n    if (!context.__smithy_context) {\n        context.__smithy_context = {\n            features: {},\n        };\n    }\n    else if (!context.__smithy_context.features) {\n        context.__smithy_context.features = {};\n    }\n    context.__smithy_context.features[feature] = value;\n}\n","import { serializerMiddlewareOption } from \"@smithy/middleware-serde\";\nimport { endpointMiddleware } from \"./endpointMiddleware\";\nexport const endpointMiddlewareOptions = {\n    step: \"serialize\",\n    tags: [\"ENDPOINT_PARAMETERS\", \"ENDPOINT_V2\", \"ENDPOINT\"],\n    name: \"endpointV2Middleware\",\n    override: true,\n    relation: \"before\",\n    toMiddleware: serializerMiddlewareOption.name,\n};\nexport const getEndpointPlugin = (config, instructions) => ({\n    applyToStack: (clientStack) => {\n        clientStack.addRelativeTo(endpointMiddleware({\n            config,\n            instructions,\n        }), endpointMiddlewareOptions);\n    },\n});\n","import { normalizeProvider } from \"@smithy/util-middleware\";\nimport { getEndpointFromConfig } from \"./adaptors/getEndpointFromConfig\";\nimport { toEndpointV1 } from \"./adaptors/toEndpointV1\";\nexport const resolveEndpointConfig = (input) => {\n    const tls = input.tls ?? true;\n    const { endpoint } = input;\n    const customEndpointProvider = endpoint != null ? async () => toEndpointV1(await normalizeProvider(endpoint)()) : undefined;\n    const isCustomEndpoint = !!endpoint;\n    const resolvedConfig = {\n        ...input,\n        endpoint: customEndpointProvider,\n        tls,\n        isCustomEndpoint,\n        useDualstackEndpoint: normalizeProvider(input.useDualstackEndpoint ?? false),\n        useFipsEndpoint: normalizeProvider(input.useFipsEndpoint ?? false),\n    };\n    let configuredEndpointPromise = undefined;\n    resolvedConfig.serviceConfiguredEndpoint = async () => {\n        if (input.serviceId && !configuredEndpointPromise) {\n            configuredEndpointPromise = getEndpointFromConfig(input.serviceId);\n        }\n        return configuredEndpointPromise;\n    };\n    return resolvedConfig;\n};\n","export var RETRY_MODES;\n(function (RETRY_MODES) {\n    RETRY_MODES[\"STANDARD\"] = \"standard\";\n    RETRY_MODES[\"ADAPTIVE\"] = \"adaptive\";\n})(RETRY_MODES || (RETRY_MODES = {}));\nexport const DEFAULT_MAX_ATTEMPTS = 3;\nexport const DEFAULT_RETRY_MODE = RETRY_MODES.STANDARD;\n","export const CLOCK_SKEW_ERROR_CODES = [\n    \"AuthFailure\",\n    \"InvalidSignatureException\",\n    \"RequestExpired\",\n    \"RequestInTheFuture\",\n    \"RequestTimeTooSkewed\",\n    \"SignatureDoesNotMatch\",\n];\nexport const THROTTLING_ERROR_CODES = [\n    \"BandwidthLimitExceeded\",\n    \"EC2ThrottledException\",\n    \"LimitExceededException\",\n    \"PriorRequestNotComplete\",\n    \"ProvisionedThroughputExceededException\",\n    \"RequestLimitExceeded\",\n    \"RequestThrottled\",\n    \"RequestThrottledException\",\n    \"SlowDown\",\n    \"ThrottledException\",\n    \"Throttling\",\n    \"ThrottlingException\",\n    \"TooManyRequestsException\",\n    \"TransactionInProgressException\",\n];\nexport const TRANSIENT_ERROR_CODES = [\"TimeoutError\", \"RequestTimeout\", \"RequestTimeoutException\"];\nexport const TRANSIENT_ERROR_STATUS_CODES = [500, 502, 503, 504];\nexport const NODEJS_TIMEOUT_ERROR_CODES = [\"ECONNRESET\", \"ECONNREFUSED\", \"EPIPE\", \"ETIMEDOUT\"];\n","import { CLOCK_SKEW_ERROR_CODES, NODEJS_TIMEOUT_ERROR_CODES, THROTTLING_ERROR_CODES, TRANSIENT_ERROR_CODES, TRANSIENT_ERROR_STATUS_CODES, } from \"./constants\";\nexport const isRetryableByTrait = (error) => error.$retryable !== undefined;\nexport const isClockSkewError = (error) => CLOCK_SKEW_ERROR_CODES.includes(error.name);\nexport const isClockSkewCorrectedError = (error) => error.$metadata?.clockSkewCorrected;\nexport const isThrottlingError = (error) => error.$metadata?.httpStatusCode === 429 ||\n    THROTTLING_ERROR_CODES.includes(error.name) ||\n    error.$retryable?.throttling == true;\nexport const isTransientError = (error, depth = 0) => isClockSkewCorrectedError(error) ||\n    TRANSIENT_ERROR_CODES.includes(error.name) ||\n    NODEJS_TIMEOUT_ERROR_CODES.includes(error?.code || \"\") ||\n    TRANSIENT_ERROR_STATUS_CODES.includes(error.$metadata?.httpStatusCode || 0) ||\n    (error.cause !== undefined && depth <= 10 && isTransientError(error.cause, depth + 1));\nexport const isServerError = (error) => {\n    if (error.$metadata?.httpStatusCode !== undefined) {\n        const statusCode = error.$metadata.httpStatusCode;\n        if (500 <= statusCode && statusCode <= 599 && !isTransientError(error)) {\n            return true;\n        }\n        return false;\n    }\n    return false;\n};\n","import { isThrottlingError } from \"@smithy/service-error-classification\";\nexport class DefaultRateLimiter {\n    constructor(options) {\n        this.currentCapacity = 0;\n        this.enabled = false;\n        this.lastMaxRate = 0;\n        this.measuredTxRate = 0;\n        this.requestCount = 0;\n        this.lastTimestamp = 0;\n        this.timeWindow = 0;\n        this.beta = options?.beta ?? 0.7;\n        this.minCapacity = options?.minCapacity ?? 1;\n        this.minFillRate = options?.minFillRate ?? 0.5;\n        this.scaleConstant = options?.scaleConstant ?? 0.4;\n        this.smooth = options?.smooth ?? 0.8;\n        const currentTimeInSeconds = this.getCurrentTimeInSeconds();\n        this.lastThrottleTime = currentTimeInSeconds;\n        this.lastTxRateBucket = Math.floor(this.getCurrentTimeInSeconds());\n        this.fillRate = this.minFillRate;\n        this.maxCapacity = this.minCapacity;\n    }\n    getCurrentTimeInSeconds() {\n        return Date.now() / 1000;\n    }\n    async getSendToken() {\n        return this.acquireTokenBucket(1);\n    }\n    async acquireTokenBucket(amount) {\n        if (!this.enabled) {\n            return;\n        }\n        this.refillTokenBucket();\n        if (amount > this.currentCapacity) {\n            const delay = ((amount - this.currentCapacity) / this.fillRate) * 1000;\n            await new Promise((resolve) => DefaultRateLimiter.setTimeoutFn(resolve, delay));\n        }\n        this.currentCapacity = this.currentCapacity - amount;\n    }\n    refillTokenBucket() {\n        const timestamp = this.getCurrentTimeInSeconds();\n        if (!this.lastTimestamp) {\n            this.lastTimestamp = timestamp;\n            return;\n        }\n        const fillAmount = (timestamp - this.lastTimestamp) * this.fillRate;\n        this.currentCapacity = Math.min(this.maxCapacity, this.currentCapacity + fillAmount);\n        this.lastTimestamp = timestamp;\n    }\n    updateClientSendingRate(response) {\n        let calculatedRate;\n        this.updateMeasuredRate();\n        if (isThrottlingError(response)) {\n            const rateToUse = !this.enabled ? this.measuredTxRate : Math.min(this.measuredTxRate, this.fillRate);\n            this.lastMaxRate = rateToUse;\n            this.calculateTimeWindow();\n            this.lastThrottleTime = this.getCurrentTimeInSeconds();\n            calculatedRate = this.cubicThrottle(rateToUse);\n            this.enableTokenBucket();\n        }\n        else {\n            this.calculateTimeWindow();\n            calculatedRate = this.cubicSuccess(this.getCurrentTimeInSeconds());\n        }\n        const newRate = Math.min(calculatedRate, 2 * this.measuredTxRate);\n        this.updateTokenBucketRate(newRate);\n    }\n    calculateTimeWindow() {\n        this.timeWindow = this.getPrecise(Math.pow((this.lastMaxRate * (1 - this.beta)) / this.scaleConstant, 1 / 3));\n    }\n    cubicThrottle(rateToUse) {\n        return this.getPrecise(rateToUse * this.beta);\n    }\n    cubicSuccess(timestamp) {\n        return this.getPrecise(this.scaleConstant * Math.pow(timestamp - this.lastThrottleTime - this.timeWindow, 3) + this.lastMaxRate);\n    }\n    enableTokenBucket() {\n        this.enabled = true;\n    }\n    updateTokenBucketRate(newRate) {\n        this.refillTokenBucket();\n        this.fillRate = Math.max(newRate, this.minFillRate);\n        this.maxCapacity = Math.max(newRate, this.minCapacity);\n        this.currentCapacity = Math.min(this.currentCapacity, this.maxCapacity);\n    }\n    updateMeasuredRate() {\n        const t = this.getCurrentTimeInSeconds();\n        const timeBucket = Math.floor(t * 2) / 2;\n        this.requestCount++;\n        if (timeBucket > this.lastTxRateBucket) {\n            const currentRate = this.requestCount / (timeBucket - this.lastTxRateBucket);\n            this.measuredTxRate = this.getPrecise(currentRate * this.smooth + this.measuredTxRate * (1 - this.smooth));\n            this.requestCount = 0;\n            this.lastTxRateBucket = timeBucket;\n        }\n    }\n    getPrecise(num) {\n        return parseFloat(num.toFixed(8));\n    }\n}\nDefaultRateLimiter.setTimeoutFn = setTimeout;\n","export const DEFAULT_RETRY_DELAY_BASE = 100;\nexport const MAXIMUM_RETRY_DELAY = 20 * 1000;\nexport const THROTTLING_RETRY_DELAY_BASE = 500;\nexport const INITIAL_RETRY_TOKENS = 500;\nexport const RETRY_COST = 5;\nexport const TIMEOUT_RETRY_COST = 10;\nexport const NO_RETRY_INCREMENT = 1;\nexport const INVOCATION_ID_HEADER = \"amz-sdk-invocation-id\";\nexport const REQUEST_HEADER = \"amz-sdk-request\";\n","import { MAXIMUM_RETRY_DELAY } from \"./constants\";\nexport const createDefaultRetryToken = ({ retryDelay, retryCount, retryCost, }) => {\n    const getRetryCount = () => retryCount;\n    const getRetryDelay = () => Math.min(MAXIMUM_RETRY_DELAY, retryDelay);\n    const getRetryCost = () => retryCost;\n    return {\n        getRetryCount,\n        getRetryDelay,\n        getRetryCost,\n    };\n};\n","import { DEFAULT_MAX_ATTEMPTS, RETRY_MODES } from \"./config\";\nimport { DEFAULT_RETRY_DELAY_BASE, INITIAL_RETRY_TOKENS, NO_RETRY_INCREMENT, RETRY_COST, THROTTLING_RETRY_DELAY_BASE, TIMEOUT_RETRY_COST, } from \"./constants\";\nimport { getDefaultRetryBackoffStrategy } from \"./defaultRetryBackoffStrategy\";\nimport { createDefaultRetryToken } from \"./defaultRetryToken\";\nexport class StandardRetryStrategy {\n    constructor(maxAttempts) {\n        this.maxAttempts = maxAttempts;\n        this.mode = RETRY_MODES.STANDARD;\n        this.capacity = INITIAL_RETRY_TOKENS;\n        this.retryBackoffStrategy = getDefaultRetryBackoffStrategy();\n        this.maxAttemptsProvider = typeof maxAttempts === \"function\" ? maxAttempts : async () => maxAttempts;\n    }\n    async acquireInitialRetryToken(retryTokenScope) {\n        return createDefaultRetryToken({\n            retryDelay: DEFAULT_RETRY_DELAY_BASE,\n            retryCount: 0,\n        });\n    }\n    async refreshRetryTokenForRetry(token, errorInfo) {\n        const maxAttempts = await this.getMaxAttempts();\n        if (this.shouldRetry(token, errorInfo, maxAttempts)) {\n            const errorType = errorInfo.errorType;\n            this.retryBackoffStrategy.setDelayBase(errorType === \"THROTTLING\" ? THROTTLING_RETRY_DELAY_BASE : DEFAULT_RETRY_DELAY_BASE);\n            const delayFromErrorType = this.retryBackoffStrategy.computeNextBackoffDelay(token.getRetryCount());\n            const retryDelay = errorInfo.retryAfterHint\n                ? Math.max(errorInfo.retryAfterHint.getTime() - Date.now() || 0, delayFromErrorType)\n                : delayFromErrorType;\n            const capacityCost = this.getCapacityCost(errorType);\n            this.capacity -= capacityCost;\n            return createDefaultRetryToken({\n                retryDelay,\n                retryCount: token.getRetryCount() + 1,\n                retryCost: capacityCost,\n            });\n        }\n        throw new Error(\"No retry token available\");\n    }\n    recordSuccess(token) {\n        this.capacity = Math.max(INITIAL_RETRY_TOKENS, this.capacity + (token.getRetryCost() ?? NO_RETRY_INCREMENT));\n    }\n    getCapacity() {\n        return this.capacity;\n    }\n    async getMaxAttempts() {\n        try {\n            return await this.maxAttemptsProvider();\n        }\n        catch (error) {\n            console.warn(`Max attempts provider could not resolve. Using default of ${DEFAULT_MAX_ATTEMPTS}`);\n            return DEFAULT_MAX_ATTEMPTS;\n        }\n    }\n    shouldRetry(tokenToRenew, errorInfo, maxAttempts) {\n        const attempts = tokenToRenew.getRetryCount() + 1;\n        return (attempts < maxAttempts &&\n            this.capacity >= this.getCapacityCost(errorInfo.errorType) &&\n            this.isRetryableError(errorInfo.errorType));\n    }\n    getCapacityCost(errorType) {\n        return errorType === \"TRANSIENT\" ? TIMEOUT_RETRY_COST : RETRY_COST;\n    }\n    isRetryableError(errorType) {\n        return errorType === \"THROTTLING\" || errorType === \"TRANSIENT\";\n    }\n}\n","import { DEFAULT_RETRY_DELAY_BASE, MAXIMUM_RETRY_DELAY } from \"./constants\";\nexport const getDefaultRetryBackoffStrategy = () => {\n    let delayBase = DEFAULT_RETRY_DELAY_BASE;\n    const computeNextBackoffDelay = (attempts) => {\n        return Math.floor(Math.min(MAXIMUM_RETRY_DELAY, Math.random() * 2 ** attempts * delayBase));\n    };\n    const setDelayBase = (delay) => {\n        delayBase = delay;\n    };\n    return {\n        computeNextBackoffDelay,\n        setDelayBase,\n    };\n};\n","import { RETRY_MODES } from \"./config\";\nimport { DefaultRateLimiter } from \"./DefaultRateLimiter\";\nimport { StandardRetryStrategy } from \"./StandardRetryStrategy\";\nexport class AdaptiveRetryStrategy {\n    constructor(maxAttemptsProvider, options) {\n        this.maxAttemptsProvider = maxAttemptsProvider;\n        this.mode = RETRY_MODES.ADAPTIVE;\n        const { rateLimiter } = options ?? {};\n        this.rateLimiter = rateLimiter ?? new DefaultRateLimiter();\n        this.standardRetryStrategy = new StandardRetryStrategy(maxAttemptsProvider);\n    }\n    async acquireInitialRetryToken(retryTokenScope) {\n        await this.rateLimiter.getSendToken();\n        return this.standardRetryStrategy.acquireInitialRetryToken(retryTokenScope);\n    }\n    async refreshRetryTokenForRetry(tokenToRenew, errorInfo) {\n        this.rateLimiter.updateClientSendingRate(errorInfo);\n        return this.standardRetryStrategy.refreshRetryTokenForRetry(tokenToRenew, errorInfo);\n    }\n    recordSuccess(token) {\n        this.rateLimiter.updateClientSendingRate({});\n        this.standardRetryStrategy.recordSuccess(token);\n    }\n}\n","// Unique ID creation requires a high quality random # generator. In the browser we therefore\n// require the crypto API and do not support built-in fallback to lower quality random number\n// generators (like Math.random()).\nlet getRandomValues;\nconst rnds8 = new Uint8Array(16);\nexport default function rng() {\n  // lazy load so that environments that need to polyfill have a chance to do so\n  if (!getRandomValues) {\n    // getRandomValues needs to be invoked in a context where \"this\" is a Crypto implementation.\n    getRandomValues = typeof crypto !== 'undefined' && crypto.getRandomValues && crypto.getRandomValues.bind(crypto);\n\n    if (!getRandomValues) {\n      throw new Error('crypto.getRandomValues() not supported. See https://github.com/uuidjs/uuid#getrandomvalues-not-supported');\n    }\n  }\n\n  return getRandomValues(rnds8);\n}","import validate from './validate.js';\n/**\n * Convert array of 16 byte values to UUID string format of the form:\n * XXXXXXXX-XXXX-XXXX-XXXX-XXXXXXXXXXXX\n */\n\nconst byteToHex = [];\n\nfor (let i = 0; i < 256; ++i) {\n  byteToHex.push((i + 0x100).toString(16).slice(1));\n}\n\nexport function unsafeStringify(arr, offset = 0) {\n  // Note: Be careful editing this code!  It's been tuned for performance\n  // and works in ways you may not expect. See https://github.com/uuidjs/uuid/pull/434\n  return byteToHex[arr[offset + 0]] + byteToHex[arr[offset + 1]] + byteToHex[arr[offset + 2]] + byteToHex[arr[offset + 3]] + '-' + byteToHex[arr[offset + 4]] + byteToHex[arr[offset + 5]] + '-' + byteToHex[arr[offset + 6]] + byteToHex[arr[offset + 7]] + '-' + byteToHex[arr[offset + 8]] + byteToHex[arr[offset + 9]] + '-' + byteToHex[arr[offset + 10]] + byteToHex[arr[offset + 11]] + byteToHex[arr[offset + 12]] + byteToHex[arr[offset + 13]] + byteToHex[arr[offset + 14]] + byteToHex[arr[offset + 15]];\n}\n\nfunction stringify(arr, offset = 0) {\n  const uuid = unsafeStringify(arr, offset); // Consistency check for valid UUID.  If this throws, it's likely due to one\n  // of the following:\n  // - One or more input array values don't map to a hex octet (leading to\n  // \"undefined\" in the uuid)\n  // - Invalid input values for the RFC `version` or `variant` fields\n\n  if (!validate(uuid)) {\n    throw TypeError('Stringified UUID is invalid');\n  }\n\n  return uuid;\n}\n\nexport default stringify;","const randomUUID = typeof crypto !== 'undefined' && crypto.randomUUID && crypto.randomUUID.bind(crypto);\nexport default {\n  randomUUID\n};","import native from './native.js';\nimport rng from './rng.js';\nimport { unsafeStringify } from './stringify.js';\n\nfunction v4(options, buf, offset) {\n  if (native.randomUUID && !buf && !options) {\n    return native.randomUUID();\n  }\n\n  options = options || {};\n  const rnds = options.random || (options.rng || rng)(); // Per 4.4, set bits for version and `clock_seq_hi_and_reserved`\n\n  rnds[6] = rnds[6] & 0x0f | 0x40;\n  rnds[8] = rnds[8] & 0x3f | 0x80; // Copy bytes to buffer, if provided\n\n  if (buf) {\n    offset = offset || 0;\n\n    for (let i = 0; i < 16; ++i) {\n      buf[offset + i] = rnds[i];\n    }\n\n    return buf;\n  }\n\n  return unsafeStringify(rnds);\n}\n\nexport default v4;","export const asSdkError = (error) => {\n    if (error instanceof Error)\n        return error;\n    if (error instanceof Object)\n        return Object.assign(new Error(), error);\n    if (typeof error === \"string\")\n        return new Error(error);\n    return new Error(`AWS SDK error wrapper for ${error}`);\n};\n","import { normalizeProvider } from \"@smithy/util-middleware\";\nimport { AdaptiveRetryStrategy, DEFAULT_MAX_ATTEMPTS, DEFAULT_RETRY_MODE, RETRY_MODES, StandardRetryStrategy, } from \"@smithy/util-retry\";\nexport const ENV_MAX_ATTEMPTS = \"AWS_MAX_ATTEMPTS\";\nexport const CONFIG_MAX_ATTEMPTS = \"max_attempts\";\nexport const NODE_MAX_ATTEMPT_CONFIG_OPTIONS = {\n    environmentVariableSelector: (env) => {\n        const value = env[ENV_MAX_ATTEMPTS];\n        if (!value)\n            return undefined;\n        const maxAttempt = parseInt(value);\n        if (Number.isNaN(maxAttempt)) {\n            throw new Error(`Environment variable ${ENV_MAX_ATTEMPTS} mast be a number, got \"${value}\"`);\n        }\n        return maxAttempt;\n    },\n    configFileSelector: (profile) => {\n        const value = profile[CONFIG_MAX_ATTEMPTS];\n        if (!value)\n            return undefined;\n        const maxAttempt = parseInt(value);\n        if (Number.isNaN(maxAttempt)) {\n            throw new Error(`Shared config file entry ${CONFIG_MAX_ATTEMPTS} mast be a number, got \"${value}\"`);\n        }\n        return maxAttempt;\n    },\n    default: DEFAULT_MAX_ATTEMPTS,\n};\nexport const resolveRetryConfig = (input) => {\n    const { retryStrategy } = input;\n    const maxAttempts = normalizeProvider(input.maxAttempts ?? DEFAULT_MAX_ATTEMPTS);\n    return {\n        ...input,\n        maxAttempts,\n        retryStrategy: async () => {\n            if (retryStrategy) {\n                return retryStrategy;\n            }\n            const retryMode = await normalizeProvider(input.retryMode)();\n            if (retryMode === RETRY_MODES.ADAPTIVE) {\n                return new AdaptiveRetryStrategy(maxAttempts);\n            }\n            return new StandardRetryStrategy(maxAttempts);\n        },\n    };\n};\nexport const ENV_RETRY_MODE = \"AWS_RETRY_MODE\";\nexport const CONFIG_RETRY_MODE = \"retry_mode\";\nexport const NODE_RETRY_MODE_CONFIG_OPTIONS = {\n    environmentVariableSelector: (env) => env[ENV_RETRY_MODE],\n    configFileSelector: (profile) => profile[CONFIG_RETRY_MODE],\n    default: DEFAULT_RETRY_MODE,\n};\n","import { Readable } from \"stream\";\nexport const isStreamingPayload = (request) => request?.body instanceof Readable ||\n    (typeof ReadableStream !== \"undefined\" && request?.body instanceof ReadableStream);\n","import { HttpRequest, HttpResponse } from \"@smithy/protocol-http\";\nimport { isServerError, isThrottlingError, isTransientError } from \"@smithy/service-error-classification\";\nimport { NoOpLogger } from \"@smithy/smithy-client\";\nimport { INVOCATION_ID_HEADER, REQUEST_HEADER } from \"@smithy/util-retry\";\nimport { v4 } from \"uuid\";\nimport { isStreamingPayload } from \"./isStreamingPayload/isStreamingPayload\";\nimport { asSdkError } from \"./util\";\nexport const retryMiddleware = (options) => (next, context) => async (args) => {\n    let retryStrategy = await options.retryStrategy();\n    const maxAttempts = await options.maxAttempts();\n    if (isRetryStrategyV2(retryStrategy)) {\n        retryStrategy = retryStrategy;\n        let retryToken = await retryStrategy.acquireInitialRetryToken(context[\"partition_id\"]);\n        let lastError = new Error();\n        let attempts = 0;\n        let totalRetryDelay = 0;\n        const { request } = args;\n        const isRequest = HttpRequest.isInstance(request);\n        if (isRequest) {\n            request.headers[INVOCATION_ID_HEADER] = v4();\n        }\n        while (true) {\n            try {\n                if (isRequest) {\n                    request.headers[REQUEST_HEADER] = `attempt=${attempts + 1}; max=${maxAttempts}`;\n                }\n                const { response, output } = await next(args);\n                retryStrategy.recordSuccess(retryToken);\n                output.$metadata.attempts = attempts + 1;\n                output.$metadata.totalRetryDelay = totalRetryDelay;\n                return { response, output };\n            }\n            catch (e) {\n                const retryErrorInfo = getRetryErrorInfo(e);\n                lastError = asSdkError(e);\n                if (isRequest && isStreamingPayload(request)) {\n                    (context.logger instanceof NoOpLogger ? console : context.logger)?.warn(\"An error was encountered in a non-retryable streaming request.\");\n                    throw lastError;\n                }\n                try {\n                    retryToken = await retryStrategy.refreshRetryTokenForRetry(retryToken, retryErrorInfo);\n                }\n                catch (refreshError) {\n                    if (!lastError.$metadata) {\n                        lastError.$metadata = {};\n                    }\n                    lastError.$metadata.attempts = attempts + 1;\n                    lastError.$metadata.totalRetryDelay = totalRetryDelay;\n                    throw lastError;\n                }\n                attempts = retryToken.getRetryCount();\n                const delay = retryToken.getRetryDelay();\n                totalRetryDelay += delay;\n                await new Promise((resolve) => setTimeout(resolve, delay));\n            }\n        }\n    }\n    else {\n        retryStrategy = retryStrategy;\n        if (retryStrategy?.mode)\n            context.userAgent = [...(context.userAgent || []), [\"cfg/retry-mode\", retryStrategy.mode]];\n        return retryStrategy.retry(next, args);\n    }\n};\nconst isRetryStrategyV2 = (retryStrategy) => typeof retryStrategy.acquireInitialRetryToken !== \"undefined\" &&\n    typeof retryStrategy.refreshRetryTokenForRetry !== \"undefined\" &&\n    typeof retryStrategy.recordSuccess !== \"undefined\";\nconst getRetryErrorInfo = (error) => {\n    const errorInfo = {\n        error,\n        errorType: getRetryErrorType(error),\n    };\n    const retryAfterHint = getRetryAfterHint(error.$response);\n    if (retryAfterHint) {\n        errorInfo.retryAfterHint = retryAfterHint;\n    }\n    return errorInfo;\n};\nconst getRetryErrorType = (error) => {\n    if (isThrottlingError(error))\n        return \"THROTTLING\";\n    if (isTransientError(error))\n        return \"TRANSIENT\";\n    if (isServerError(error))\n        return \"SERVER_ERROR\";\n    return \"CLIENT_ERROR\";\n};\nexport const retryMiddlewareOptions = {\n    name: \"retryMiddleware\",\n    tags: [\"RETRY\"],\n    step: \"finalizeRequest\",\n    priority: \"high\",\n    override: true,\n};\nexport const getRetryPlugin = (options) => ({\n    applyToStack: (clientStack) => {\n        clientStack.add(retryMiddleware(options), retryMiddlewareOptions);\n    },\n});\nexport const getRetryAfterHint = (response) => {\n    if (!HttpResponse.isInstance(response))\n        return;\n    const retryAfterHeaderName = Object.keys(response.headers).find((key) => key.toLowerCase() === \"retry-after\");\n    if (!retryAfterHeaderName)\n        return;\n    const retryAfter = response.headers[retryAfterHeaderName];\n    const retryAfterSeconds = Number(retryAfter);\n    if (!Number.isNaN(retryAfterSeconds))\n        return new Date(retryAfterSeconds * 1000);\n    const retryAfterDate = new Date(retryAfter);\n    return retryAfterDate;\n};\n","export const signatureV4CrtContainer = {\n    CrtSignerV4: null,\n};\n","import { SignatureV4S3Express } from \"@aws-sdk/middleware-sdk-s3\";\nimport { signatureV4CrtContainer } from \"./signature-v4-crt-container\";\nexport class SignatureV4MultiRegion {\n    sigv4aSigner;\n    sigv4Signer;\n    signerOptions;\n    constructor(options) {\n        this.sigv4Signer = new SignatureV4S3Express(options);\n        this.signerOptions = options;\n    }\n    async sign(requestToSign, options = {}) {\n        if (options.signingRegion === \"*\") {\n            if (this.signerOptions.runtime !== \"node\")\n                throw new Error(\"This request requires signing with SigV4Asymmetric algorithm. It's only available in Node.js\");\n            return this.getSigv4aSigner().sign(requestToSign, options);\n        }\n        return this.sigv4Signer.sign(requestToSign, options);\n    }\n    async signWithCredentials(requestToSign, credentials, options = {}) {\n        if (options.signingRegion === \"*\") {\n            if (this.signerOptions.runtime !== \"node\")\n                throw new Error(\"This request requires signing with SigV4Asymmetric algorithm. It's only available in Node.js\");\n            return this.getSigv4aSigner().signWithCredentials(requestToSign, credentials, options);\n        }\n        return this.sigv4Signer.signWithCredentials(requestToSign, credentials, options);\n    }\n    async presign(originalRequest, options = {}) {\n        if (options.signingRegion === \"*\") {\n            if (this.signerOptions.runtime !== \"node\")\n                throw new Error(\"This request requires signing with SigV4Asymmetric algorithm. It's only available in Node.js\");\n            return this.getSigv4aSigner().presign(originalRequest, options);\n        }\n        return this.sigv4Signer.presign(originalRequest, options);\n    }\n    async presignWithCredentials(originalRequest, credentials, options = {}) {\n        if (options.signingRegion === \"*\") {\n            throw new Error(\"Method presignWithCredentials is not supported for [signingRegion=*].\");\n        }\n        return this.sigv4Signer.presignWithCredentials(originalRequest, credentials, options);\n    }\n    getSigv4aSigner() {\n        if (!this.sigv4aSigner) {\n            let CrtSignerV4 = null;\n            try {\n                CrtSignerV4 = signatureV4CrtContainer.CrtSignerV4;\n                if (typeof CrtSignerV4 !== \"function\")\n                    throw new Error();\n            }\n            catch (e) {\n                e.message =\n                    `${e.message}\\n` +\n                        `Please check whether you have installed the \"@aws-sdk/signature-v4-crt\" package explicitly. \\n` +\n                        `You must also register the package by calling [require(\"@aws-sdk/signature-v4-crt\");] ` +\n                        `or an ESM equivalent such as [import \"@aws-sdk/signature-v4-crt\";]. \\n` +\n                        \"For more information please go to \" +\n                        \"https://github.com/aws/aws-sdk-js-v3#functionality-requiring-aws-common-runtime-crt\";\n                throw e;\n            }\n            this.sigv4aSigner = new CrtSignerV4({\n                ...this.signerOptions,\n                signingAlgorithm: 1,\n            });\n        }\n        return this.sigv4aSigner;\n    }\n}\n","const ci = \"required\", cj = \"type\", ck = \"conditions\", cl = \"fn\", cm = \"argv\", cn = \"ref\", co = \"assign\", cp = \"url\", cq = \"properties\", cr = \"backend\", cs = \"authSchemes\", ct = \"disableDoubleEncoding\", cu = \"signingName\", cv = \"signingRegion\", cw = \"headers\", cx = \"signingRegionSet\";\nconst a = 6, b = false, c = true, d = \"isSet\", e = \"booleanEquals\", f = \"error\", g = \"aws.partition\", h = \"stringEquals\", i = \"getAttr\", j = \"name\", k = \"substring\", l = \"bucketSuffix\", m = \"parseURL\", n = \"{url#scheme}://{url#authority}/{uri_encoded_bucket}{url#path}\", o = \"endpoint\", p = \"tree\", q = \"aws.isVirtualHostableS3Bucket\", r = \"{url#scheme}://{Bucket}.{url#authority}{url#path}\", s = \"not\", t = \"{url#scheme}://{url#authority}{url#path}\", u = \"hardwareType\", v = \"regionPrefix\", w = \"bucketAliasSuffix\", x = \"outpostId\", y = \"isValidHostLabel\", z = \"sigv4a\", A = \"s3-outposts\", B = \"s3\", C = \"{url#scheme}://{url#authority}{url#normalizedPath}{Bucket}\", D = \"https://{Bucket}.s3-accelerate.{partitionResult#dnsSuffix}\", E = \"https://{Bucket}.s3.{partitionResult#dnsSuffix}\", F = \"aws.parseArn\", G = \"bucketArn\", H = \"arnType\", I = \"\", J = \"s3-object-lambda\", K = \"accesspoint\", L = \"accessPointName\", M = \"{url#scheme}://{accessPointName}-{bucketArn#accountId}.{url#authority}{url#path}\", N = \"mrapPartition\", O = \"outpostType\", P = \"arnPrefix\", Q = \"{url#scheme}://{url#authority}{url#normalizedPath}{uri_encoded_bucket}\", R = \"https://s3.{partitionResult#dnsSuffix}/{uri_encoded_bucket}\", S = \"https://s3.{partitionResult#dnsSuffix}\", T = { [ci]: false, [cj]: \"String\" }, U = { [ci]: true, \"default\": false, [cj]: \"Boolean\" }, V = { [ci]: false, [cj]: \"Boolean\" }, W = { [cl]: e, [cm]: [{ [cn]: \"Accelerate\" }, true] }, X = { [cl]: e, [cm]: [{ [cn]: \"UseFIPS\" }, true] }, Y = { [cl]: e, [cm]: [{ [cn]: \"UseDualStack\" }, true] }, Z = { [cl]: d, [cm]: [{ [cn]: \"Endpoint\" }] }, aa = { [cl]: g, [cm]: [{ [cn]: \"Region\" }], [co]: \"partitionResult\" }, ab = { [cl]: h, [cm]: [{ [cl]: i, [cm]: [{ [cn]: \"partitionResult\" }, j] }, \"aws-cn\"] }, ac = { [cl]: d, [cm]: [{ [cn]: \"Bucket\" }] }, ad = { [cn]: \"Bucket\" }, ae = { [cl]: m, [cm]: [{ [cn]: \"Endpoint\" }], [co]: \"url\" }, af = { [cl]: e, [cm]: [{ [cl]: i, [cm]: [{ [cn]: \"url\" }, \"isIp\"] }, true] }, ag = { [cn]: \"url\" }, ah = { [cl]: \"uriEncode\", [cm]: [ad], [co]: \"uri_encoded_bucket\" }, ai = { [cr]: \"S3Express\", [cs]: [{ [ct]: true, [j]: \"sigv4\", [cu]: \"s3express\", [cv]: \"{Region}\" }] }, aj = {}, ak = { [cl]: q, [cm]: [ad, false] }, al = { [f]: \"S3Express bucket name is not a valid virtual hostable name.\", [cj]: f }, am = { [cr]: \"S3Express\", [cs]: [{ [ct]: true, [j]: \"sigv4-s3express\", [cu]: \"s3express\", [cv]: \"{Region}\" }] }, an = { [cl]: d, [cm]: [{ [cn]: \"UseS3ExpressControlEndpoint\" }] }, ao = { [cl]: e, [cm]: [{ [cn]: \"UseS3ExpressControlEndpoint\" }, true] }, ap = { [cl]: s, [cm]: [Z] }, aq = { [f]: \"Unrecognized S3Express bucket name format.\", [cj]: f }, ar = { [cl]: s, [cm]: [ac] }, as = { [cn]: u }, at = { [ck]: [ap], [f]: \"Expected a endpoint to be specified but no endpoint was found\", [cj]: f }, au = { [cs]: [{ [ct]: true, [j]: z, [cu]: A, [cx]: [\"*\"] }, { [ct]: true, [j]: \"sigv4\", [cu]: A, [cv]: \"{Region}\" }] }, av = { [cl]: e, [cm]: [{ [cn]: \"ForcePathStyle\" }, false] }, aw = { [cn]: \"ForcePathStyle\" }, ax = { [cl]: e, [cm]: [{ [cn]: \"Accelerate\" }, false] }, ay = { [cl]: h, [cm]: [{ [cn]: \"Region\" }, \"aws-global\"] }, az = { [cs]: [{ [ct]: true, [j]: \"sigv4\", [cu]: B, [cv]: \"us-east-1\" }] }, aA = { [cl]: s, [cm]: [ay] }, aB = { [cl]: e, [cm]: [{ [cn]: \"UseGlobalEndpoint\" }, true] }, aC = { [cp]: \"https://{Bucket}.s3-fips.dualstack.{Region}.{partitionResult#dnsSuffix}\", [cq]: { [cs]: [{ [ct]: true, [j]: \"sigv4\", [cu]: B, [cv]: \"{Region}\" }] }, [cw]: {} }, aD = { [cs]: [{ [ct]: true, [j]: \"sigv4\", [cu]: B, [cv]: \"{Region}\" }] }, aE = { [cl]: e, [cm]: [{ [cn]: \"UseGlobalEndpoint\" }, false] }, aF = { [cl]: e, [cm]: [{ [cn]: \"UseDualStack\" }, false] }, aG = { [cp]: \"https://{Bucket}.s3-fips.{Region}.{partitionResult#dnsSuffix}\", [cq]: aD, [cw]: {} }, aH = { [cl]: e, [cm]: [{ [cn]: \"UseFIPS\" }, false] }, aI = { [cp]: \"https://{Bucket}.s3-accelerate.dualstack.{partitionResult#dnsSuffix}\", [cq]: aD, [cw]: {} }, aJ = { [cp]: \"https://{Bucket}.s3.dualstack.{Region}.{partitionResult#dnsSuffix}\", [cq]: aD, [cw]: {} }, aK = { [cl]: e, [cm]: [{ [cl]: i, [cm]: [ag, \"isIp\"] }, false] }, aL = { [cp]: C, [cq]: aD, [cw]: {} }, aM = { [cp]: r, [cq]: aD, [cw]: {} }, aN = { [o]: aM, [cj]: o }, aO = { [cp]: D, [cq]: aD, [cw]: {} }, aP = { [cp]: \"https://{Bucket}.s3.{Region}.{partitionResult#dnsSuffix}\", [cq]: aD, [cw]: {} }, aQ = { [f]: \"Invalid region: region was not a valid DNS name.\", [cj]: f }, aR = { [cn]: G }, aS = { [cn]: H }, aT = { [cl]: i, [cm]: [aR, \"service\"] }, aU = { [cn]: L }, aV = { [ck]: [Y], [f]: \"S3 Object Lambda does not support Dual-stack\", [cj]: f }, aW = { [ck]: [W], [f]: \"S3 Object Lambda does not support S3 Accelerate\", [cj]: f }, aX = { [ck]: [{ [cl]: d, [cm]: [{ [cn]: \"DisableAccessPoints\" }] }, { [cl]: e, [cm]: [{ [cn]: \"DisableAccessPoints\" }, true] }], [f]: \"Access points are not supported for this operation\", [cj]: f }, aY = { [ck]: [{ [cl]: d, [cm]: [{ [cn]: \"UseArnRegion\" }] }, { [cl]: e, [cm]: [{ [cn]: \"UseArnRegion\" }, false] }, { [cl]: s, [cm]: [{ [cl]: h, [cm]: [{ [cl]: i, [cm]: [aR, \"region\"] }, \"{Region}\"] }] }], [f]: \"Invalid configuration: region from ARN `{bucketArn#region}` does not match client region `{Region}` and UseArnRegion is `false`\", [cj]: f }, aZ = { [cl]: i, [cm]: [{ [cn]: \"bucketPartition\" }, j] }, ba = { [cl]: i, [cm]: [aR, \"accountId\"] }, bb = { [cs]: [{ [ct]: true, [j]: \"sigv4\", [cu]: J, [cv]: \"{bucketArn#region}\" }] }, bc = { [f]: \"Invalid ARN: The access point name may only contain a-z, A-Z, 0-9 and `-`. Found: `{accessPointName}`\", [cj]: f }, bd = { [f]: \"Invalid ARN: The account id may only contain a-z, A-Z, 0-9 and `-`. Found: `{bucketArn#accountId}`\", [cj]: f }, be = { [f]: \"Invalid region in ARN: `{bucketArn#region}` (invalid DNS name)\", [cj]: f }, bf = { [f]: \"Client was configured for partition `{partitionResult#name}` but ARN (`{Bucket}`) has `{bucketPartition#name}`\", [cj]: f }, bg = { [f]: \"Invalid ARN: The ARN may only contain a single resource component after `accesspoint`.\", [cj]: f }, bh = { [f]: \"Invalid ARN: Expected a resource of the format `accesspoint:<accesspoint name>` but no name was provided\", [cj]: f }, bi = { [cs]: [{ [ct]: true, [j]: \"sigv4\", [cu]: B, [cv]: \"{bucketArn#region}\" }] }, bj = { [cs]: [{ [ct]: true, [j]: z, [cu]: A, [cx]: [\"*\"] }, { [ct]: true, [j]: \"sigv4\", [cu]: A, [cv]: \"{bucketArn#region}\" }] }, bk = { [cl]: F, [cm]: [ad] }, bl = { [cp]: \"https://s3-fips.dualstack.{Region}.{partitionResult#dnsSuffix}/{uri_encoded_bucket}\", [cq]: aD, [cw]: {} }, bm = { [cp]: \"https://s3-fips.{Region}.{partitionResult#dnsSuffix}/{uri_encoded_bucket}\", [cq]: aD, [cw]: {} }, bn = { [cp]: \"https://s3.dualstack.{Region}.{partitionResult#dnsSuffix}/{uri_encoded_bucket}\", [cq]: aD, [cw]: {} }, bo = { [cp]: Q, [cq]: aD, [cw]: {} }, bp = { [cp]: \"https://s3.{Region}.{partitionResult#dnsSuffix}/{uri_encoded_bucket}\", [cq]: aD, [cw]: {} }, bq = { [cn]: \"UseObjectLambdaEndpoint\" }, br = { [cs]: [{ [ct]: true, [j]: \"sigv4\", [cu]: J, [cv]: \"{Region}\" }] }, bs = { [cp]: \"https://s3-fips.dualstack.{Region}.{partitionResult#dnsSuffix}\", [cq]: aD, [cw]: {} }, bt = { [cp]: \"https://s3-fips.{Region}.{partitionResult#dnsSuffix}\", [cq]: aD, [cw]: {} }, bu = { [cp]: \"https://s3.dualstack.{Region}.{partitionResult#dnsSuffix}\", [cq]: aD, [cw]: {} }, bv = { [cp]: t, [cq]: aD, [cw]: {} }, bw = { [cp]: \"https://s3.{Region}.{partitionResult#dnsSuffix}\", [cq]: aD, [cw]: {} }, bx = [{ [cn]: \"Region\" }], by = [{ [cn]: \"Endpoint\" }], bz = [ad], bA = [Y], bB = [W], bC = [Z, ae], bD = [{ [cl]: d, [cm]: [{ [cn]: \"DisableS3ExpressSessionAuth\" }] }, { [cl]: e, [cm]: [{ [cn]: \"DisableS3ExpressSessionAuth\" }, true] }], bE = [af], bF = [ah], bG = [ak], bH = [X], bI = [{ [cl]: k, [cm]: [ad, 6, 14, true], [co]: \"s3expressAvailabilityZoneId\" }, { [cl]: k, [cm]: [ad, 14, 16, true], [co]: \"s3expressAvailabilityZoneDelim\" }, { [cl]: h, [cm]: [{ [cn]: \"s3expressAvailabilityZoneDelim\" }, \"--\"] }], bJ = [{ [ck]: [X], [o]: { [cp]: \"https://{Bucket}.s3express-fips-{s3expressAvailabilityZoneId}.{Region}.amazonaws.com\", [cq]: ai, [cw]: {} }, [cj]: o }, { [o]: { [cp]: \"https://{Bucket}.s3express-{s3expressAvailabilityZoneId}.{Region}.amazonaws.com\", [cq]: ai, [cw]: {} }, [cj]: o }], bK = [{ [cl]: k, [cm]: [ad, 6, 15, true], [co]: \"s3expressAvailabilityZoneId\" }, { [cl]: k, [cm]: [ad, 15, 17, true], [co]: \"s3expressAvailabilityZoneDelim\" }, { [cl]: h, [cm]: [{ [cn]: \"s3expressAvailabilityZoneDelim\" }, \"--\"] }], bL = [{ [cl]: k, [cm]: [ad, 6, 19, true], [co]: \"s3expressAvailabilityZoneId\" }, { [cl]: k, [cm]: [ad, 19, 21, true], [co]: \"s3expressAvailabilityZoneDelim\" }, { [cl]: h, [cm]: [{ [cn]: \"s3expressAvailabilityZoneDelim\" }, \"--\"] }], bM = [{ [cl]: k, [cm]: [ad, 6, 20, true], [co]: \"s3expressAvailabilityZoneId\" }, { [cl]: k, [cm]: [ad, 20, 22, true], [co]: \"s3expressAvailabilityZoneDelim\" }, { [cl]: h, [cm]: [{ [cn]: \"s3expressAvailabilityZoneDelim\" }, \"--\"] }], bN = [{ [cl]: k, [cm]: [ad, 6, 26, true], [co]: \"s3expressAvailabilityZoneId\" }, { [cl]: k, [cm]: [ad, 26, 28, true], [co]: \"s3expressAvailabilityZoneDelim\" }, { [cl]: h, [cm]: [{ [cn]: \"s3expressAvailabilityZoneDelim\" }, \"--\"] }], bO = [{ [ck]: [X], [o]: { [cp]: \"https://{Bucket}.s3express-fips-{s3expressAvailabilityZoneId}.{Region}.amazonaws.com\", [cq]: am, [cw]: {} }, [cj]: o }, { [o]: { [cp]: \"https://{Bucket}.s3express-{s3expressAvailabilityZoneId}.{Region}.amazonaws.com\", [cq]: am, [cw]: {} }, [cj]: o }], bP = [ac], bQ = [{ [cl]: y, [cm]: [{ [cn]: x }, false] }], bR = [{ [cl]: h, [cm]: [{ [cn]: v }, \"beta\"] }], bS = [\"*\"], bT = [aa], bU = [{ [cl]: y, [cm]: [{ [cn]: \"Region\" }, false] }], bV = [{ [cl]: h, [cm]: [{ [cn]: \"Region\" }, \"us-east-1\"] }], bW = [{ [cl]: h, [cm]: [aS, K] }], bX = [{ [cl]: i, [cm]: [aR, \"resourceId[1]\"], [co]: L }, { [cl]: s, [cm]: [{ [cl]: h, [cm]: [aU, I] }] }], bY = [aR, \"resourceId[1]\"], bZ = [{ [cl]: s, [cm]: [{ [cl]: h, [cm]: [{ [cl]: i, [cm]: [aR, \"region\"] }, I] }] }], ca = [{ [cl]: s, [cm]: [{ [cl]: d, [cm]: [{ [cl]: i, [cm]: [aR, \"resourceId[2]\"] }] }] }], cb = [aR, \"resourceId[2]\"], cc = [{ [cl]: g, [cm]: [{ [cl]: i, [cm]: [aR, \"region\"] }], [co]: \"bucketPartition\" }], cd = [{ [cl]: h, [cm]: [aZ, { [cl]: i, [cm]: [{ [cn]: \"partitionResult\" }, j] }] }], ce = [{ [cl]: y, [cm]: [{ [cl]: i, [cm]: [aR, \"region\"] }, true] }], cf = [{ [cl]: y, [cm]: [ba, false] }], cg = [{ [cl]: y, [cm]: [aU, false] }], ch = [{ [cl]: y, [cm]: [{ [cn]: \"Region\" }, true] }];\nconst _data = { version: \"1.0\", parameters: { Bucket: T, Region: T, UseFIPS: U, UseDualStack: U, Endpoint: T, ForcePathStyle: U, Accelerate: U, UseGlobalEndpoint: U, UseObjectLambdaEndpoint: V, Key: T, Prefix: T, CopySource: T, DisableAccessPoints: V, DisableMultiRegionAccessPoints: U, UseArnRegion: V, UseS3ExpressControlEndpoint: V, DisableS3ExpressSessionAuth: V }, rules: [{ [ck]: [{ [cl]: d, [cm]: bx }], rules: [{ [ck]: [W, X], error: \"Accelerate cannot be used with FIPS\", [cj]: f }, { [ck]: [Y, Z], error: \"Cannot set dual-stack in combination with a custom endpoint.\", [cj]: f }, { [ck]: [Z, X], error: \"A custom endpoint cannot be combined with FIPS\", [cj]: f }, { [ck]: [Z, W], error: \"A custom endpoint cannot be combined with S3 Accelerate\", [cj]: f }, { [ck]: [X, aa, ab], error: \"Partition does not support FIPS\", [cj]: f }, { [ck]: [ac, { [cl]: k, [cm]: [ad, 0, a, c], [co]: l }, { [cl]: h, [cm]: [{ [cn]: l }, \"--x-s3\"] }], rules: [{ [ck]: bA, error: \"S3Express does not support Dual-stack.\", [cj]: f }, { [ck]: bB, error: \"S3Express does not support S3 Accelerate.\", [cj]: f }, { [ck]: bC, rules: [{ [ck]: bD, rules: [{ [ck]: bE, rules: [{ [ck]: bF, rules: [{ endpoint: { [cp]: n, [cq]: ai, [cw]: aj }, [cj]: o }], [cj]: p }], [cj]: p }, { [ck]: bG, rules: [{ endpoint: { [cp]: r, [cq]: ai, [cw]: aj }, [cj]: o }], [cj]: p }, al], [cj]: p }, { [ck]: bE, rules: [{ [ck]: bF, rules: [{ endpoint: { [cp]: n, [cq]: am, [cw]: aj }, [cj]: o }], [cj]: p }], [cj]: p }, { [ck]: bG, rules: [{ endpoint: { [cp]: r, [cq]: am, [cw]: aj }, [cj]: o }], [cj]: p }, al], [cj]: p }, { [ck]: [an, ao], rules: [{ [ck]: [ah, ap], rules: [{ [ck]: bH, endpoint: { [cp]: \"https://s3express-control-fips.{Region}.amazonaws.com/{uri_encoded_bucket}\", [cq]: ai, [cw]: aj }, [cj]: o }, { endpoint: { [cp]: \"https://s3express-control.{Region}.amazonaws.com/{uri_encoded_bucket}\", [cq]: ai, [cw]: aj }, [cj]: o }], [cj]: p }], [cj]: p }, { [ck]: bG, rules: [{ [ck]: bD, rules: [{ [ck]: bI, rules: bJ, [cj]: p }, { [ck]: bK, rules: bJ, [cj]: p }, { [ck]: bL, rules: bJ, [cj]: p }, { [ck]: bM, rules: bJ, [cj]: p }, { [ck]: bN, rules: bJ, [cj]: p }, aq], [cj]: p }, { [ck]: bI, rules: bO, [cj]: p }, { [ck]: bK, rules: bO, [cj]: p }, { [ck]: bL, rules: bO, [cj]: p }, { [ck]: bM, rules: bO, [cj]: p }, { [ck]: bN, rules: bO, [cj]: p }, aq], [cj]: p }, al], [cj]: p }, { [ck]: [ar, an, ao], rules: [{ [ck]: bC, endpoint: { [cp]: t, [cq]: ai, [cw]: aj }, [cj]: o }, { [ck]: bH, endpoint: { [cp]: \"https://s3express-control-fips.{Region}.amazonaws.com\", [cq]: ai, [cw]: aj }, [cj]: o }, { endpoint: { [cp]: \"https://s3express-control.{Region}.amazonaws.com\", [cq]: ai, [cw]: aj }, [cj]: o }], [cj]: p }, { [ck]: [ac, { [cl]: k, [cm]: [ad, 49, 50, c], [co]: u }, { [cl]: k, [cm]: [ad, 8, 12, c], [co]: v }, { [cl]: k, [cm]: [ad, 0, 7, c], [co]: w }, { [cl]: k, [cm]: [ad, 32, 49, c], [co]: x }, { [cl]: g, [cm]: bx, [co]: \"regionPartition\" }, { [cl]: h, [cm]: [{ [cn]: w }, \"--op-s3\"] }], rules: [{ [ck]: bQ, rules: [{ [ck]: [{ [cl]: h, [cm]: [as, \"e\"] }], rules: [{ [ck]: bR, rules: [at, { [ck]: bC, endpoint: { [cp]: \"https://{Bucket}.ec2.{url#authority}\", [cq]: au, [cw]: aj }, [cj]: o }], [cj]: p }, { endpoint: { [cp]: \"https://{Bucket}.ec2.s3-outposts.{Region}.{regionPartition#dnsSuffix}\", [cq]: au, [cw]: aj }, [cj]: o }], [cj]: p }, { [ck]: [{ [cl]: h, [cm]: [as, \"o\"] }], rules: [{ [ck]: bR, rules: [at, { [ck]: bC, endpoint: { [cp]: \"https://{Bucket}.op-{outpostId}.{url#authority}\", [cq]: au, [cw]: aj }, [cj]: o }], [cj]: p }, { endpoint: { [cp]: \"https://{Bucket}.op-{outpostId}.s3-outposts.{Region}.{regionPartition#dnsSuffix}\", [cq]: au, [cw]: aj }, [cj]: o }], [cj]: p }, { error: \"Unrecognized hardware type: \\\"Expected hardware type o or e but got {hardwareType}\\\"\", [cj]: f }], [cj]: p }, { error: \"Invalid ARN: The outpost Id must only contain a-z, A-Z, 0-9 and `-`.\", [cj]: f }], [cj]: p }, { [ck]: bP, rules: [{ [ck]: [Z, { [cl]: s, [cm]: [{ [cl]: d, [cm]: [{ [cl]: m, [cm]: by }] }] }], error: \"Custom endpoint `{Endpoint}` was not a valid URI\", [cj]: f }, { [ck]: [av, ak], rules: [{ [ck]: bT, rules: [{ [ck]: bU, rules: [{ [ck]: [W, ab], error: \"S3 Accelerate cannot be used in this region\", [cj]: f }, { [ck]: [Y, X, ax, ap, ay], endpoint: { [cp]: \"https://{Bucket}.s3-fips.dualstack.us-east-1.{partitionResult#dnsSuffix}\", [cq]: az, [cw]: aj }, [cj]: o }, { [ck]: [Y, X, ax, ap, aA, aB], rules: [{ endpoint: aC, [cj]: o }], [cj]: p }, { [ck]: [Y, X, ax, ap, aA, aE], endpoint: aC, [cj]: o }, { [ck]: [aF, X, ax, ap, ay], endpoint: { [cp]: \"https://{Bucket}.s3-fips.us-east-1.{partitionResult#dnsSuffix}\", [cq]: az, [cw]: aj }, [cj]: o }, { [ck]: [aF, X, ax, ap, aA, aB], rules: [{ endpoint: aG, [cj]: o }], [cj]: p }, { [ck]: [aF, X, ax, ap, aA, aE], endpoint: aG, [cj]: o }, { [ck]: [Y, aH, W, ap, ay], endpoint: { [cp]: \"https://{Bucket}.s3-accelerate.dualstack.us-east-1.{partitionResult#dnsSuffix}\", [cq]: az, [cw]: aj }, [cj]: o }, { [ck]: [Y, aH, W, ap, aA, aB], rules: [{ endpoint: aI, [cj]: o }], [cj]: p }, { [ck]: [Y, aH, W, ap, aA, aE], endpoint: aI, [cj]: o }, { [ck]: [Y, aH, ax, ap, ay], endpoint: { [cp]: \"https://{Bucket}.s3.dualstack.us-east-1.{partitionResult#dnsSuffix}\", [cq]: az, [cw]: aj }, [cj]: o }, { [ck]: [Y, aH, ax, ap, aA, aB], rules: [{ endpoint: aJ, [cj]: o }], [cj]: p }, { [ck]: [Y, aH, ax, ap, aA, aE], endpoint: aJ, [cj]: o }, { [ck]: [aF, aH, ax, Z, ae, af, ay], endpoint: { [cp]: C, [cq]: az, [cw]: aj }, [cj]: o }, { [ck]: [aF, aH, ax, Z, ae, aK, ay], endpoint: { [cp]: r, [cq]: az, [cw]: aj }, [cj]: o }, { [ck]: [aF, aH, ax, Z, ae, af, aA, aB], rules: [{ [ck]: bV, endpoint: aL, [cj]: o }, { endpoint: aL, [cj]: o }], [cj]: p }, { [ck]: [aF, aH, ax, Z, ae, aK, aA, aB], rules: [{ [ck]: bV, endpoint: aM, [cj]: o }, aN], [cj]: p }, { [ck]: [aF, aH, ax, Z, ae, af, aA, aE], endpoint: aL, [cj]: o }, { [ck]: [aF, aH, ax, Z, ae, aK, aA, aE], endpoint: aM, [cj]: o }, { [ck]: [aF, aH, W, ap, ay], endpoint: { [cp]: D, [cq]: az, [cw]: aj }, [cj]: o }, { [ck]: [aF, aH, W, ap, aA, aB], rules: [{ [ck]: bV, endpoint: aO, [cj]: o }, { endpoint: aO, [cj]: o }], [cj]: p }, { [ck]: [aF, aH, W, ap, aA, aE], endpoint: aO, [cj]: o }, { [ck]: [aF, aH, ax, ap, ay], endpoint: { [cp]: E, [cq]: az, [cw]: aj }, [cj]: o }, { [ck]: [aF, aH, ax, ap, aA, aB], rules: [{ [ck]: bV, endpoint: { [cp]: E, [cq]: aD, [cw]: aj }, [cj]: o }, { endpoint: aP, [cj]: o }], [cj]: p }, { [ck]: [aF, aH, ax, ap, aA, aE], endpoint: aP, [cj]: o }], [cj]: p }, aQ], [cj]: p }], [cj]: p }, { [ck]: [Z, ae, { [cl]: h, [cm]: [{ [cl]: i, [cm]: [ag, \"scheme\"] }, \"http\"] }, { [cl]: q, [cm]: [ad, c] }, av, aH, aF, ax], rules: [{ [ck]: bT, rules: [{ [ck]: bU, rules: [aN], [cj]: p }, aQ], [cj]: p }], [cj]: p }, { [ck]: [av, { [cl]: F, [cm]: bz, [co]: G }], rules: [{ [ck]: [{ [cl]: i, [cm]: [aR, \"resourceId[0]\"], [co]: H }, { [cl]: s, [cm]: [{ [cl]: h, [cm]: [aS, I] }] }], rules: [{ [ck]: [{ [cl]: h, [cm]: [aT, J] }], rules: [{ [ck]: bW, rules: [{ [ck]: bX, rules: [aV, aW, { [ck]: bZ, rules: [aX, { [ck]: ca, rules: [aY, { [ck]: cc, rules: [{ [ck]: bT, rules: [{ [ck]: cd, rules: [{ [ck]: ce, rules: [{ [ck]: [{ [cl]: h, [cm]: [ba, I] }], error: \"Invalid ARN: Missing account id\", [cj]: f }, { [ck]: cf, rules: [{ [ck]: cg, rules: [{ [ck]: bC, endpoint: { [cp]: M, [cq]: bb, [cw]: aj }, [cj]: o }, { [ck]: bH, endpoint: { [cp]: \"https://{accessPointName}-{bucketArn#accountId}.s3-object-lambda-fips.{bucketArn#region}.{bucketPartition#dnsSuffix}\", [cq]: bb, [cw]: aj }, [cj]: o }, { endpoint: { [cp]: \"https://{accessPointName}-{bucketArn#accountId}.s3-object-lambda.{bucketArn#region}.{bucketPartition#dnsSuffix}\", [cq]: bb, [cw]: aj }, [cj]: o }], [cj]: p }, bc], [cj]: p }, bd], [cj]: p }, be], [cj]: p }, bf], [cj]: p }], [cj]: p }], [cj]: p }, bg], [cj]: p }, { error: \"Invalid ARN: bucket ARN is missing a region\", [cj]: f }], [cj]: p }, bh], [cj]: p }, { error: \"Invalid ARN: Object Lambda ARNs only support `accesspoint` arn types, but found: `{arnType}`\", [cj]: f }], [cj]: p }, { [ck]: bW, rules: [{ [ck]: bX, rules: [{ [ck]: bZ, rules: [{ [ck]: bW, rules: [{ [ck]: bZ, rules: [aX, { [ck]: ca, rules: [aY, { [ck]: cc, rules: [{ [ck]: bT, rules: [{ [ck]: [{ [cl]: h, [cm]: [aZ, \"{partitionResult#name}\"] }], rules: [{ [ck]: ce, rules: [{ [ck]: [{ [cl]: h, [cm]: [aT, B] }], rules: [{ [ck]: cf, rules: [{ [ck]: cg, rules: [{ [ck]: bB, error: \"Access Points do not support S3 Accelerate\", [cj]: f }, { [ck]: [X, Y], endpoint: { [cp]: \"https://{accessPointName}-{bucketArn#accountId}.s3-accesspoint-fips.dualstack.{bucketArn#region}.{bucketPartition#dnsSuffix}\", [cq]: bi, [cw]: aj }, [cj]: o }, { [ck]: [X, aF], endpoint: { [cp]: \"https://{accessPointName}-{bucketArn#accountId}.s3-accesspoint-fips.{bucketArn#region}.{bucketPartition#dnsSuffix}\", [cq]: bi, [cw]: aj }, [cj]: o }, { [ck]: [aH, Y], endpoint: { [cp]: \"https://{accessPointName}-{bucketArn#accountId}.s3-accesspoint.dualstack.{bucketArn#region}.{bucketPartition#dnsSuffix}\", [cq]: bi, [cw]: aj }, [cj]: o }, { [ck]: [aH, aF, Z, ae], endpoint: { [cp]: M, [cq]: bi, [cw]: aj }, [cj]: o }, { [ck]: [aH, aF], endpoint: { [cp]: \"https://{accessPointName}-{bucketArn#accountId}.s3-accesspoint.{bucketArn#region}.{bucketPartition#dnsSuffix}\", [cq]: bi, [cw]: aj }, [cj]: o }], [cj]: p }, bc], [cj]: p }, bd], [cj]: p }, { error: \"Invalid ARN: The ARN was not for the S3 service, found: {bucketArn#service}\", [cj]: f }], [cj]: p }, be], [cj]: p }, bf], [cj]: p }], [cj]: p }], [cj]: p }, bg], [cj]: p }], [cj]: p }], [cj]: p }, { [ck]: [{ [cl]: y, [cm]: [aU, c] }], rules: [{ [ck]: bA, error: \"S3 MRAP does not support dual-stack\", [cj]: f }, { [ck]: bH, error: \"S3 MRAP does not support FIPS\", [cj]: f }, { [ck]: bB, error: \"S3 MRAP does not support S3 Accelerate\", [cj]: f }, { [ck]: [{ [cl]: e, [cm]: [{ [cn]: \"DisableMultiRegionAccessPoints\" }, c] }], error: \"Invalid configuration: Multi-Region Access Point ARNs are disabled.\", [cj]: f }, { [ck]: [{ [cl]: g, [cm]: bx, [co]: N }], rules: [{ [ck]: [{ [cl]: h, [cm]: [{ [cl]: i, [cm]: [{ [cn]: N }, j] }, { [cl]: i, [cm]: [aR, \"partition\"] }] }], rules: [{ endpoint: { [cp]: \"https://{accessPointName}.accesspoint.s3-global.{mrapPartition#dnsSuffix}\", [cq]: { [cs]: [{ [ct]: c, name: z, [cu]: B, [cx]: bS }] }, [cw]: aj }, [cj]: o }], [cj]: p }, { error: \"Client was configured for partition `{mrapPartition#name}` but bucket referred to partition `{bucketArn#partition}`\", [cj]: f }], [cj]: p }], [cj]: p }, { error: \"Invalid Access Point Name\", [cj]: f }], [cj]: p }, bh], [cj]: p }, { [ck]: [{ [cl]: h, [cm]: [aT, A] }], rules: [{ [ck]: bA, error: \"S3 Outposts does not support Dual-stack\", [cj]: f }, { [ck]: bH, error: \"S3 Outposts does not support FIPS\", [cj]: f }, { [ck]: bB, error: \"S3 Outposts does not support S3 Accelerate\", [cj]: f }, { [ck]: [{ [cl]: d, [cm]: [{ [cl]: i, [cm]: [aR, \"resourceId[4]\"] }] }], error: \"Invalid Arn: Outpost Access Point ARN contains sub resources\", [cj]: f }, { [ck]: [{ [cl]: i, [cm]: bY, [co]: x }], rules: [{ [ck]: bQ, rules: [aY, { [ck]: cc, rules: [{ [ck]: bT, rules: [{ [ck]: cd, rules: [{ [ck]: ce, rules: [{ [ck]: cf, rules: [{ [ck]: [{ [cl]: i, [cm]: cb, [co]: O }], rules: [{ [ck]: [{ [cl]: i, [cm]: [aR, \"resourceId[3]\"], [co]: L }], rules: [{ [ck]: [{ [cl]: h, [cm]: [{ [cn]: O }, K] }], rules: [{ [ck]: bC, endpoint: { [cp]: \"https://{accessPointName}-{bucketArn#accountId}.{outpostId}.{url#authority}\", [cq]: bj, [cw]: aj }, [cj]: o }, { endpoint: { [cp]: \"https://{accessPointName}-{bucketArn#accountId}.{outpostId}.s3-outposts.{bucketArn#region}.{bucketPartition#dnsSuffix}\", [cq]: bj, [cw]: aj }, [cj]: o }], [cj]: p }, { error: \"Expected an outpost type `accesspoint`, found {outpostType}\", [cj]: f }], [cj]: p }, { error: \"Invalid ARN: expected an access point name\", [cj]: f }], [cj]: p }, { error: \"Invalid ARN: Expected a 4-component resource\", [cj]: f }], [cj]: p }, bd], [cj]: p }, be], [cj]: p }, bf], [cj]: p }], [cj]: p }], [cj]: p }, { error: \"Invalid ARN: The outpost Id may only contain a-z, A-Z, 0-9 and `-`. Found: `{outpostId}`\", [cj]: f }], [cj]: p }, { error: \"Invalid ARN: The Outpost Id was not set\", [cj]: f }], [cj]: p }, { error: \"Invalid ARN: Unrecognized format: {Bucket} (type: {arnType})\", [cj]: f }], [cj]: p }, { error: \"Invalid ARN: No ARN type specified\", [cj]: f }], [cj]: p }, { [ck]: [{ [cl]: k, [cm]: [ad, 0, 4, b], [co]: P }, { [cl]: h, [cm]: [{ [cn]: P }, \"arn:\"] }, { [cl]: s, [cm]: [{ [cl]: d, [cm]: [bk] }] }], error: \"Invalid ARN: `{Bucket}` was not a valid ARN\", [cj]: f }, { [ck]: [{ [cl]: e, [cm]: [aw, c] }, bk], error: \"Path-style addressing cannot be used with ARN buckets\", [cj]: f }, { [ck]: bF, rules: [{ [ck]: bT, rules: [{ [ck]: [ax], rules: [{ [ck]: [Y, ap, X, ay], endpoint: { [cp]: \"https://s3-fips.dualstack.us-east-1.{partitionResult#dnsSuffix}/{uri_encoded_bucket}\", [cq]: az, [cw]: aj }, [cj]: o }, { [ck]: [Y, ap, X, aA, aB], rules: [{ endpoint: bl, [cj]: o }], [cj]: p }, { [ck]: [Y, ap, X, aA, aE], endpoint: bl, [cj]: o }, { [ck]: [aF, ap, X, ay], endpoint: { [cp]: \"https://s3-fips.us-east-1.{partitionResult#dnsSuffix}/{uri_encoded_bucket}\", [cq]: az, [cw]: aj }, [cj]: o }, { [ck]: [aF, ap, X, aA, aB], rules: [{ endpoint: bm, [cj]: o }], [cj]: p }, { [ck]: [aF, ap, X, aA, aE], endpoint: bm, [cj]: o }, { [ck]: [Y, ap, aH, ay], endpoint: { [cp]: \"https://s3.dualstack.us-east-1.{partitionResult#dnsSuffix}/{uri_encoded_bucket}\", [cq]: az, [cw]: aj }, [cj]: o }, { [ck]: [Y, ap, aH, aA, aB], rules: [{ endpoint: bn, [cj]: o }], [cj]: p }, { [ck]: [Y, ap, aH, aA, aE], endpoint: bn, [cj]: o }, { [ck]: [aF, Z, ae, aH, ay], endpoint: { [cp]: Q, [cq]: az, [cw]: aj }, [cj]: o }, { [ck]: [aF, Z, ae, aH, aA, aB], rules: [{ [ck]: bV, endpoint: bo, [cj]: o }, { endpoint: bo, [cj]: o }], [cj]: p }, { [ck]: [aF, Z, ae, aH, aA, aE], endpoint: bo, [cj]: o }, { [ck]: [aF, ap, aH, ay], endpoint: { [cp]: R, [cq]: az, [cw]: aj }, [cj]: o }, { [ck]: [aF, ap, aH, aA, aB], rules: [{ [ck]: bV, endpoint: { [cp]: R, [cq]: aD, [cw]: aj }, [cj]: o }, { endpoint: bp, [cj]: o }], [cj]: p }, { [ck]: [aF, ap, aH, aA, aE], endpoint: bp, [cj]: o }], [cj]: p }, { error: \"Path-style addressing cannot be used with S3 Accelerate\", [cj]: f }], [cj]: p }], [cj]: p }], [cj]: p }, { [ck]: [{ [cl]: d, [cm]: [bq] }, { [cl]: e, [cm]: [bq, c] }], rules: [{ [ck]: bT, rules: [{ [ck]: ch, rules: [aV, aW, { [ck]: bC, endpoint: { [cp]: t, [cq]: br, [cw]: aj }, [cj]: o }, { [ck]: bH, endpoint: { [cp]: \"https://s3-object-lambda-fips.{Region}.{partitionResult#dnsSuffix}\", [cq]: br, [cw]: aj }, [cj]: o }, { endpoint: { [cp]: \"https://s3-object-lambda.{Region}.{partitionResult#dnsSuffix}\", [cq]: br, [cw]: aj }, [cj]: o }], [cj]: p }, aQ], [cj]: p }], [cj]: p }, { [ck]: [ar], rules: [{ [ck]: bT, rules: [{ [ck]: ch, rules: [{ [ck]: [X, Y, ap, ay], endpoint: { [cp]: \"https://s3-fips.dualstack.us-east-1.{partitionResult#dnsSuffix}\", [cq]: az, [cw]: aj }, [cj]: o }, { [ck]: [X, Y, ap, aA, aB], rules: [{ endpoint: bs, [cj]: o }], [cj]: p }, { [ck]: [X, Y, ap, aA, aE], endpoint: bs, [cj]: o }, { [ck]: [X, aF, ap, ay], endpoint: { [cp]: \"https://s3-fips.us-east-1.{partitionResult#dnsSuffix}\", [cq]: az, [cw]: aj }, [cj]: o }, { [ck]: [X, aF, ap, aA, aB], rules: [{ endpoint: bt, [cj]: o }], [cj]: p }, { [ck]: [X, aF, ap, aA, aE], endpoint: bt, [cj]: o }, { [ck]: [aH, Y, ap, ay], endpoint: { [cp]: \"https://s3.dualstack.us-east-1.{partitionResult#dnsSuffix}\", [cq]: az, [cw]: aj }, [cj]: o }, { [ck]: [aH, Y, ap, aA, aB], rules: [{ endpoint: bu, [cj]: o }], [cj]: p }, { [ck]: [aH, Y, ap, aA, aE], endpoint: bu, [cj]: o }, { [ck]: [aH, aF, Z, ae, ay], endpoint: { [cp]: t, [cq]: az, [cw]: aj }, [cj]: o }, { [ck]: [aH, aF, Z, ae, aA, aB], rules: [{ [ck]: bV, endpoint: bv, [cj]: o }, { endpoint: bv, [cj]: o }], [cj]: p }, { [ck]: [aH, aF, Z, ae, aA, aE], endpoint: bv, [cj]: o }, { [ck]: [aH, aF, ap, ay], endpoint: { [cp]: S, [cq]: az, [cw]: aj }, [cj]: o }, { [ck]: [aH, aF, ap, aA, aB], rules: [{ [ck]: bV, endpoint: { [cp]: S, [cq]: aD, [cw]: aj }, [cj]: o }, { endpoint: bw, [cj]: o }], [cj]: p }, { [ck]: [aH, aF, ap, aA, aE], endpoint: bw, [cj]: o }], [cj]: p }, aQ], [cj]: p }], [cj]: p }], [cj]: p }, { error: \"A region must be set when sending requests to S3.\", [cj]: f }] };\nexport const ruleSet = _data;\n","import { awsEndpointFunctions } from \"@aws-sdk/util-endpoints\";\nimport { customEndpointFunctions, EndpointCache, resolveEndpoint } from \"@smithy/util-endpoints\";\nimport { ruleSet } from \"./ruleset\";\nconst cache = new EndpointCache({\n    size: 50,\n    params: [\n        \"Accelerate\",\n        \"Bucket\",\n        \"DisableAccessPoints\",\n        \"DisableMultiRegionAccessPoints\",\n        \"DisableS3ExpressSessionAuth\",\n        \"Endpoint\",\n        \"ForcePathStyle\",\n        \"Region\",\n        \"UseArnRegion\",\n        \"UseDualStack\",\n        \"UseFIPS\",\n        \"UseGlobalEndpoint\",\n        \"UseObjectLambdaEndpoint\",\n        \"UseS3ExpressControlEndpoint\",\n    ],\n});\nexport const defaultEndpointResolver = (endpointParams, context = {}) => {\n    return cache.get(endpointParams, () => resolveEndpoint(ruleSet, {\n        endpointParams: endpointParams,\n        logger: context.logger,\n    }));\n};\ncustomEndpointFunctions.aws = awsEndpointFunctions;\n","import { resolveAwsSdkSigV4AConfig, resolveAwsSdkSigV4Config, } from \"@aws-sdk/core\";\nimport { signatureV4CrtContainer } from \"@aws-sdk/signature-v4-multi-region\";\nimport { resolveParams } from \"@smithy/middleware-endpoint\";\nimport { getSmithyContext, normalizeProvider } from \"@smithy/util-middleware\";\nimport { defaultEndpointResolver } from \"../endpoint/endpointResolver\";\nconst createEndpointRuleSetHttpAuthSchemeParametersProvider = (defaultHttpAuthSchemeParametersProvider) => async (config, context, input) => {\n    if (!input) {\n        throw new Error(`Could not find \\`input\\` for \\`defaultEndpointRuleSetHttpAuthSchemeParametersProvider\\``);\n    }\n    const defaultParameters = await defaultHttpAuthSchemeParametersProvider(config, context, input);\n    const instructionsFn = getSmithyContext(context)?.commandInstance?.constructor\n        ?.getEndpointParameterInstructions;\n    if (!instructionsFn) {\n        throw new Error(`getEndpointParameterInstructions() is not defined on \\`${context.commandName}\\``);\n    }\n    const endpointParameters = await resolveParams(input, { getEndpointParameterInstructions: instructionsFn }, config);\n    return Object.assign(defaultParameters, endpointParameters);\n};\nconst _defaultS3HttpAuthSchemeParametersProvider = async (config, context, input) => {\n    return {\n        operation: getSmithyContext(context).operation,\n        region: (await normalizeProvider(config.region)()) ||\n            (() => {\n                throw new Error(\"expected `region` to be configured for `aws.auth#sigv4`\");\n            })(),\n    };\n};\nexport const defaultS3HttpAuthSchemeParametersProvider = createEndpointRuleSetHttpAuthSchemeParametersProvider(_defaultS3HttpAuthSchemeParametersProvider);\nfunction createAwsAuthSigv4HttpAuthOption(authParameters) {\n    return {\n        schemeId: \"aws.auth#sigv4\",\n        signingProperties: {\n            name: \"s3\",\n            region: authParameters.region,\n        },\n        propertiesExtractor: (config, context) => ({\n            signingProperties: {\n                config,\n                context,\n            },\n        }),\n    };\n}\nfunction createAwsAuthSigv4aHttpAuthOption(authParameters) {\n    return {\n        schemeId: \"aws.auth#sigv4a\",\n        signingProperties: {\n            name: \"s3\",\n            region: authParameters.region,\n        },\n        propertiesExtractor: (config, context) => ({\n            signingProperties: {\n                config,\n                context,\n            },\n        }),\n    };\n}\nconst createEndpointRuleSetHttpAuthSchemeProvider = (defaultEndpointResolver, defaultHttpAuthSchemeResolver, createHttpAuthOptionFunctions) => {\n    const endpointRuleSetHttpAuthSchemeProvider = (authParameters) => {\n        const endpoint = defaultEndpointResolver(authParameters);\n        const authSchemes = endpoint.properties?.authSchemes;\n        if (!authSchemes) {\n            return defaultHttpAuthSchemeResolver(authParameters);\n        }\n        const options = [];\n        for (const scheme of authSchemes) {\n            const { name: resolvedName, properties = {}, ...rest } = scheme;\n            const name = resolvedName.toLowerCase();\n            if (resolvedName !== name) {\n                console.warn(`HttpAuthScheme has been normalized with lowercasing: \\`${resolvedName}\\` to \\`${name}\\``);\n            }\n            let schemeId;\n            if (name === \"sigv4a\") {\n                schemeId = \"aws.auth#sigv4a\";\n                const sigv4Present = authSchemes.find((s) => {\n                    const name = s.name.toLowerCase();\n                    return name !== \"sigv4a\" && name.startsWith(\"sigv4\");\n                });\n                if (!signatureV4CrtContainer.CrtSignerV4 && sigv4Present) {\n                    continue;\n                }\n            }\n            else if (name.startsWith(\"sigv4\")) {\n                schemeId = \"aws.auth#sigv4\";\n            }\n            else {\n                throw new Error(`Unknown HttpAuthScheme found in \\`@smithy.rules#endpointRuleSet\\`: \\`${name}\\``);\n            }\n            const createOption = createHttpAuthOptionFunctions[schemeId];\n            if (!createOption) {\n                throw new Error(`Could not find HttpAuthOption create function for \\`${schemeId}\\``);\n            }\n            const option = createOption(authParameters);\n            option.schemeId = schemeId;\n            option.signingProperties = { ...(option.signingProperties || {}), ...rest, ...properties };\n            options.push(option);\n        }\n        return options;\n    };\n    return endpointRuleSetHttpAuthSchemeProvider;\n};\nconst _defaultS3HttpAuthSchemeProvider = (authParameters) => {\n    const options = [];\n    switch (authParameters.operation) {\n        default: {\n            options.push(createAwsAuthSigv4HttpAuthOption(authParameters));\n            options.push(createAwsAuthSigv4aHttpAuthOption(authParameters));\n        }\n    }\n    return options;\n};\nexport const defaultS3HttpAuthSchemeProvider = createEndpointRuleSetHttpAuthSchemeProvider(defaultEndpointResolver, _defaultS3HttpAuthSchemeProvider, {\n    \"aws.auth#sigv4\": createAwsAuthSigv4HttpAuthOption,\n    \"aws.auth#sigv4a\": createAwsAuthSigv4aHttpAuthOption,\n});\nexport const resolveHttpAuthSchemeConfig = (config) => {\n    const config_0 = resolveAwsSdkSigV4Config(config);\n    const config_1 = resolveAwsSdkSigV4AConfig(config_0);\n    return {\n        ...config_1,\n    };\n};\n","export const resolveClientEndpointParameters = (options) => {\n    return {\n        ...options,\n        useFipsEndpoint: options.useFipsEndpoint ?? false,\n        useDualstackEndpoint: options.useDualstackEndpoint ?? false,\n        forcePathStyle: options.forcePathStyle ?? false,\n        useAccelerateEndpoint: options.useAccelerateEndpoint ?? false,\n        useGlobalEndpoint: options.useGlobalEndpoint ?? false,\n        disableMultiregionAccessPoints: options.disableMultiregionAccessPoints ?? false,\n        defaultSigningName: \"s3\",\n    };\n};\nexport const commonParams = {\n    ForcePathStyle: { type: \"clientContextParams\", name: \"forcePathStyle\" },\n    UseArnRegion: { type: \"clientContextParams\", name: \"useArnRegion\" },\n    DisableMultiRegionAccessPoints: { type: \"clientContextParams\", name: \"disableMultiregionAccessPoints\" },\n    Accelerate: { type: \"clientContextParams\", name: \"useAccelerateEndpoint\" },\n    DisableS3ExpressSessionAuth: { type: \"clientContextParams\", name: \"disableS3ExpressSessionAuth\" },\n    UseGlobalEndpoint: { type: \"builtInParams\", name: \"useGlobalEndpoint\" },\n    UseFIPS: { type: \"builtInParams\", name: \"useFipsEndpoint\" },\n    Endpoint: { type: \"builtInParams\", name: \"endpoint\" },\n    Region: { type: \"builtInParams\", name: \"region\" },\n    UseDualStack: { type: \"builtInParams\", name: \"useDualstackEndpoint\" },\n};\n","import { ServiceException as __ServiceException, } from \"@smithy/smithy-client\";\nexport { __ServiceException };\nexport class S3ServiceException extends __ServiceException {\n    constructor(options) {\n        super(options);\n        Object.setPrototypeOf(this, S3ServiceException.prototype);\n    }\n}\n","import { SENSITIVE_STRING } from \"@smithy/smithy-client\";\nimport { S3ServiceException as __BaseException } from \"./S3ServiceException\";\nexport const RequestCharged = {\n    requester: \"requester\",\n};\nexport const RequestPayer = {\n    requester: \"requester\",\n};\nexport class NoSuchUpload extends __BaseException {\n    name = \"NoSuchUpload\";\n    $fault = \"client\";\n    constructor(opts) {\n        super({\n            name: \"NoSuchUpload\",\n            $fault: \"client\",\n            ...opts,\n        });\n        Object.setPrototypeOf(this, NoSuchUpload.prototype);\n    }\n}\nexport const BucketAccelerateStatus = {\n    Enabled: \"Enabled\",\n    Suspended: \"Suspended\",\n};\nexport const Type = {\n    AmazonCustomerByEmail: \"AmazonCustomerByEmail\",\n    CanonicalUser: \"CanonicalUser\",\n    Group: \"Group\",\n};\nexport const Permission = {\n    FULL_CONTROL: \"FULL_CONTROL\",\n    READ: \"READ\",\n    READ_ACP: \"READ_ACP\",\n    WRITE: \"WRITE\",\n    WRITE_ACP: \"WRITE_ACP\",\n};\nexport const OwnerOverride = {\n    Destination: \"Destination\",\n};\nexport const ChecksumType = {\n    COMPOSITE: \"COMPOSITE\",\n    FULL_OBJECT: \"FULL_OBJECT\",\n};\nexport const ServerSideEncryption = {\n    AES256: \"AES256\",\n    aws_kms: \"aws:kms\",\n    aws_kms_dsse: \"aws:kms:dsse\",\n};\nexport const ObjectCannedACL = {\n    authenticated_read: \"authenticated-read\",\n    aws_exec_read: \"aws-exec-read\",\n    bucket_owner_full_control: \"bucket-owner-full-control\",\n    bucket_owner_read: \"bucket-owner-read\",\n    private: \"private\",\n    public_read: \"public-read\",\n    public_read_write: \"public-read-write\",\n};\nexport const ChecksumAlgorithm = {\n    CRC32: \"CRC32\",\n    CRC32C: \"CRC32C\",\n    CRC64NVME: \"CRC64NVME\",\n    SHA1: \"SHA1\",\n    SHA256: \"SHA256\",\n};\nexport const MetadataDirective = {\n    COPY: \"COPY\",\n    REPLACE: \"REPLACE\",\n};\nexport const ObjectLockLegalHoldStatus = {\n    OFF: \"OFF\",\n    ON: \"ON\",\n};\nexport const ObjectLockMode = {\n    COMPLIANCE: \"COMPLIANCE\",\n    GOVERNANCE: \"GOVERNANCE\",\n};\nexport const StorageClass = {\n    DEEP_ARCHIVE: \"DEEP_ARCHIVE\",\n    EXPRESS_ONEZONE: \"EXPRESS_ONEZONE\",\n    GLACIER: \"GLACIER\",\n    GLACIER_IR: \"GLACIER_IR\",\n    INTELLIGENT_TIERING: \"INTELLIGENT_TIERING\",\n    ONEZONE_IA: \"ONEZONE_IA\",\n    OUTPOSTS: \"OUTPOSTS\",\n    REDUCED_REDUNDANCY: \"REDUCED_REDUNDANCY\",\n    SNOW: \"SNOW\",\n    STANDARD: \"STANDARD\",\n    STANDARD_IA: \"STANDARD_IA\",\n};\nexport const TaggingDirective = {\n    COPY: \"COPY\",\n    REPLACE: \"REPLACE\",\n};\nexport class ObjectNotInActiveTierError extends __BaseException {\n    name = \"ObjectNotInActiveTierError\";\n    $fault = \"client\";\n    constructor(opts) {\n        super({\n            name: \"ObjectNotInActiveTierError\",\n            $fault: \"client\",\n            ...opts,\n        });\n        Object.setPrototypeOf(this, ObjectNotInActiveTierError.prototype);\n    }\n}\nexport class BucketAlreadyExists extends __BaseException {\n    name = \"BucketAlreadyExists\";\n    $fault = \"client\";\n    constructor(opts) {\n        super({\n            name: \"BucketAlreadyExists\",\n            $fault: \"client\",\n            ...opts,\n        });\n        Object.setPrototypeOf(this, BucketAlreadyExists.prototype);\n    }\n}\nexport class BucketAlreadyOwnedByYou extends __BaseException {\n    name = \"BucketAlreadyOwnedByYou\";\n    $fault = \"client\";\n    constructor(opts) {\n        super({\n            name: \"BucketAlreadyOwnedByYou\",\n            $fault: \"client\",\n            ...opts,\n        });\n        Object.setPrototypeOf(this, BucketAlreadyOwnedByYou.prototype);\n    }\n}\nexport const BucketCannedACL = {\n    authenticated_read: \"authenticated-read\",\n    private: \"private\",\n    public_read: \"public-read\",\n    public_read_write: \"public-read-write\",\n};\nexport const DataRedundancy = {\n    SingleAvailabilityZone: \"SingleAvailabilityZone\",\n    SingleLocalZone: \"SingleLocalZone\",\n};\nexport const BucketType = {\n    Directory: \"Directory\",\n};\nexport const LocationType = {\n    AvailabilityZone: \"AvailabilityZone\",\n    LocalZone: \"LocalZone\",\n};\nexport const BucketLocationConstraint = {\n    EU: \"EU\",\n    af_south_1: \"af-south-1\",\n    ap_east_1: \"ap-east-1\",\n    ap_northeast_1: \"ap-northeast-1\",\n    ap_northeast_2: \"ap-northeast-2\",\n    ap_northeast_3: \"ap-northeast-3\",\n    ap_south_1: \"ap-south-1\",\n    ap_south_2: \"ap-south-2\",\n    ap_southeast_1: \"ap-southeast-1\",\n    ap_southeast_2: \"ap-southeast-2\",\n    ap_southeast_3: \"ap-southeast-3\",\n    ap_southeast_4: \"ap-southeast-4\",\n    ap_southeast_5: \"ap-southeast-5\",\n    ca_central_1: \"ca-central-1\",\n    cn_north_1: \"cn-north-1\",\n    cn_northwest_1: \"cn-northwest-1\",\n    eu_central_1: \"eu-central-1\",\n    eu_central_2: \"eu-central-2\",\n    eu_north_1: \"eu-north-1\",\n    eu_south_1: \"eu-south-1\",\n    eu_south_2: \"eu-south-2\",\n    eu_west_1: \"eu-west-1\",\n    eu_west_2: \"eu-west-2\",\n    eu_west_3: \"eu-west-3\",\n    il_central_1: \"il-central-1\",\n    me_central_1: \"me-central-1\",\n    me_south_1: \"me-south-1\",\n    sa_east_1: \"sa-east-1\",\n    us_east_2: \"us-east-2\",\n    us_gov_east_1: \"us-gov-east-1\",\n    us_gov_west_1: \"us-gov-west-1\",\n    us_west_1: \"us-west-1\",\n    us_west_2: \"us-west-2\",\n};\nexport const ObjectOwnership = {\n    BucketOwnerEnforced: \"BucketOwnerEnforced\",\n    BucketOwnerPreferred: \"BucketOwnerPreferred\",\n    ObjectWriter: \"ObjectWriter\",\n};\nexport const SessionMode = {\n    ReadOnly: \"ReadOnly\",\n    ReadWrite: \"ReadWrite\",\n};\nexport class NoSuchBucket extends __BaseException {\n    name = \"NoSuchBucket\";\n    $fault = \"client\";\n    constructor(opts) {\n        super({\n            name: \"NoSuchBucket\",\n            $fault: \"client\",\n            ...opts,\n        });\n        Object.setPrototypeOf(this, NoSuchBucket.prototype);\n    }\n}\nexport var AnalyticsFilter;\n(function (AnalyticsFilter) {\n    AnalyticsFilter.visit = (value, visitor) => {\n        if (value.Prefix !== undefined)\n            return visitor.Prefix(value.Prefix);\n        if (value.Tag !== undefined)\n            return visitor.Tag(value.Tag);\n        if (value.And !== undefined)\n            return visitor.And(value.And);\n        return visitor._(value.$unknown[0], value.$unknown[1]);\n    };\n})(AnalyticsFilter || (AnalyticsFilter = {}));\nexport const AnalyticsS3ExportFileFormat = {\n    CSV: \"CSV\",\n};\nexport const StorageClassAnalysisSchemaVersion = {\n    V_1: \"V_1\",\n};\nexport const IntelligentTieringStatus = {\n    Disabled: \"Disabled\",\n    Enabled: \"Enabled\",\n};\nexport const IntelligentTieringAccessTier = {\n    ARCHIVE_ACCESS: \"ARCHIVE_ACCESS\",\n    DEEP_ARCHIVE_ACCESS: \"DEEP_ARCHIVE_ACCESS\",\n};\nexport const InventoryFormat = {\n    CSV: \"CSV\",\n    ORC: \"ORC\",\n    Parquet: \"Parquet\",\n};\nexport const InventoryIncludedObjectVersions = {\n    All: \"All\",\n    Current: \"Current\",\n};\nexport const InventoryOptionalField = {\n    BucketKeyStatus: \"BucketKeyStatus\",\n    ChecksumAlgorithm: \"ChecksumAlgorithm\",\n    ETag: \"ETag\",\n    EncryptionStatus: \"EncryptionStatus\",\n    IntelligentTieringAccessTier: \"IntelligentTieringAccessTier\",\n    IsMultipartUploaded: \"IsMultipartUploaded\",\n    LastModifiedDate: \"LastModifiedDate\",\n    ObjectAccessControlList: \"ObjectAccessControlList\",\n    ObjectLockLegalHoldStatus: \"ObjectLockLegalHoldStatus\",\n    ObjectLockMode: \"ObjectLockMode\",\n    ObjectLockRetainUntilDate: \"ObjectLockRetainUntilDate\",\n    ObjectOwner: \"ObjectOwner\",\n    ReplicationStatus: \"ReplicationStatus\",\n    Size: \"Size\",\n    StorageClass: \"StorageClass\",\n};\nexport const InventoryFrequency = {\n    Daily: \"Daily\",\n    Weekly: \"Weekly\",\n};\nexport const TransitionStorageClass = {\n    DEEP_ARCHIVE: \"DEEP_ARCHIVE\",\n    GLACIER: \"GLACIER\",\n    GLACIER_IR: \"GLACIER_IR\",\n    INTELLIGENT_TIERING: \"INTELLIGENT_TIERING\",\n    ONEZONE_IA: \"ONEZONE_IA\",\n    STANDARD_IA: \"STANDARD_IA\",\n};\nexport const ExpirationStatus = {\n    Disabled: \"Disabled\",\n    Enabled: \"Enabled\",\n};\nexport const TransitionDefaultMinimumObjectSize = {\n    all_storage_classes_128K: \"all_storage_classes_128K\",\n    varies_by_storage_class: \"varies_by_storage_class\",\n};\nexport const BucketLogsPermission = {\n    FULL_CONTROL: \"FULL_CONTROL\",\n    READ: \"READ\",\n    WRITE: \"WRITE\",\n};\nexport const PartitionDateSource = {\n    DeliveryTime: \"DeliveryTime\",\n    EventTime: \"EventTime\",\n};\nexport var MetricsFilter;\n(function (MetricsFilter) {\n    MetricsFilter.visit = (value, visitor) => {\n        if (value.Prefix !== undefined)\n            return visitor.Prefix(value.Prefix);\n        if (value.Tag !== undefined)\n            return visitor.Tag(value.Tag);\n        if (value.AccessPointArn !== undefined)\n            return visitor.AccessPointArn(value.AccessPointArn);\n        if (value.And !== undefined)\n            return visitor.And(value.And);\n        return visitor._(value.$unknown[0], value.$unknown[1]);\n    };\n})(MetricsFilter || (MetricsFilter = {}));\nexport const Event = {\n    s3_IntelligentTiering: \"s3:IntelligentTiering\",\n    s3_LifecycleExpiration_: \"s3:LifecycleExpiration:*\",\n    s3_LifecycleExpiration_Delete: \"s3:LifecycleExpiration:Delete\",\n    s3_LifecycleExpiration_DeleteMarkerCreated: \"s3:LifecycleExpiration:DeleteMarkerCreated\",\n    s3_LifecycleTransition: \"s3:LifecycleTransition\",\n    s3_ObjectAcl_Put: \"s3:ObjectAcl:Put\",\n    s3_ObjectCreated_: \"s3:ObjectCreated:*\",\n    s3_ObjectCreated_CompleteMultipartUpload: \"s3:ObjectCreated:CompleteMultipartUpload\",\n    s3_ObjectCreated_Copy: \"s3:ObjectCreated:Copy\",\n    s3_ObjectCreated_Post: \"s3:ObjectCreated:Post\",\n    s3_ObjectCreated_Put: \"s3:ObjectCreated:Put\",\n    s3_ObjectRemoved_: \"s3:ObjectRemoved:*\",\n    s3_ObjectRemoved_Delete: \"s3:ObjectRemoved:Delete\",\n    s3_ObjectRemoved_DeleteMarkerCreated: \"s3:ObjectRemoved:DeleteMarkerCreated\",\n    s3_ObjectRestore_: \"s3:ObjectRestore:*\",\n    s3_ObjectRestore_Completed: \"s3:ObjectRestore:Completed\",\n    s3_ObjectRestore_Delete: \"s3:ObjectRestore:Delete\",\n    s3_ObjectRestore_Post: \"s3:ObjectRestore:Post\",\n    s3_ObjectTagging_: \"s3:ObjectTagging:*\",\n    s3_ObjectTagging_Delete: \"s3:ObjectTagging:Delete\",\n    s3_ObjectTagging_Put: \"s3:ObjectTagging:Put\",\n    s3_ReducedRedundancyLostObject: \"s3:ReducedRedundancyLostObject\",\n    s3_Replication_: \"s3:Replication:*\",\n    s3_Replication_OperationFailedReplication: \"s3:Replication:OperationFailedReplication\",\n    s3_Replication_OperationMissedThreshold: \"s3:Replication:OperationMissedThreshold\",\n    s3_Replication_OperationNotTracked: \"s3:Replication:OperationNotTracked\",\n    s3_Replication_OperationReplicatedAfterThreshold: \"s3:Replication:OperationReplicatedAfterThreshold\",\n};\nexport const FilterRuleName = {\n    prefix: \"prefix\",\n    suffix: \"suffix\",\n};\nexport const DeleteMarkerReplicationStatus = {\n    Disabled: \"Disabled\",\n    Enabled: \"Enabled\",\n};\nexport const MetricsStatus = {\n    Disabled: \"Disabled\",\n    Enabled: \"Enabled\",\n};\nexport const ReplicationTimeStatus = {\n    Disabled: \"Disabled\",\n    Enabled: \"Enabled\",\n};\nexport const ExistingObjectReplicationStatus = {\n    Disabled: \"Disabled\",\n    Enabled: \"Enabled\",\n};\nexport const ReplicaModificationsStatus = {\n    Disabled: \"Disabled\",\n    Enabled: \"Enabled\",\n};\nexport const SseKmsEncryptedObjectsStatus = {\n    Disabled: \"Disabled\",\n    Enabled: \"Enabled\",\n};\nexport const ReplicationRuleStatus = {\n    Disabled: \"Disabled\",\n    Enabled: \"Enabled\",\n};\nexport const Payer = {\n    BucketOwner: \"BucketOwner\",\n    Requester: \"Requester\",\n};\nexport const MFADeleteStatus = {\n    Disabled: \"Disabled\",\n    Enabled: \"Enabled\",\n};\nexport const BucketVersioningStatus = {\n    Enabled: \"Enabled\",\n    Suspended: \"Suspended\",\n};\nexport const Protocol = {\n    http: \"http\",\n    https: \"https\",\n};\nexport const ReplicationStatus = {\n    COMPLETE: \"COMPLETE\",\n    COMPLETED: \"COMPLETED\",\n    FAILED: \"FAILED\",\n    PENDING: \"PENDING\",\n    REPLICA: \"REPLICA\",\n};\nexport const ChecksumMode = {\n    ENABLED: \"ENABLED\",\n};\nexport class InvalidObjectState extends __BaseException {\n    name = \"InvalidObjectState\";\n    $fault = \"client\";\n    StorageClass;\n    AccessTier;\n    constructor(opts) {\n        super({\n            name: \"InvalidObjectState\",\n            $fault: \"client\",\n            ...opts,\n        });\n        Object.setPrototypeOf(this, InvalidObjectState.prototype);\n        this.StorageClass = opts.StorageClass;\n        this.AccessTier = opts.AccessTier;\n    }\n}\nexport class NoSuchKey extends __BaseException {\n    name = \"NoSuchKey\";\n    $fault = \"client\";\n    constructor(opts) {\n        super({\n            name: \"NoSuchKey\",\n            $fault: \"client\",\n            ...opts,\n        });\n        Object.setPrototypeOf(this, NoSuchKey.prototype);\n    }\n}\nexport const ObjectAttributes = {\n    CHECKSUM: \"Checksum\",\n    ETAG: \"ETag\",\n    OBJECT_PARTS: \"ObjectParts\",\n    OBJECT_SIZE: \"ObjectSize\",\n    STORAGE_CLASS: \"StorageClass\",\n};\nexport const ObjectLockEnabled = {\n    Enabled: \"Enabled\",\n};\nexport const ObjectLockRetentionMode = {\n    COMPLIANCE: \"COMPLIANCE\",\n    GOVERNANCE: \"GOVERNANCE\",\n};\nexport class NotFound extends __BaseException {\n    name = \"NotFound\";\n    $fault = \"client\";\n    constructor(opts) {\n        super({\n            name: \"NotFound\",\n            $fault: \"client\",\n            ...opts,\n        });\n        Object.setPrototypeOf(this, NotFound.prototype);\n    }\n}\nexport const ArchiveStatus = {\n    ARCHIVE_ACCESS: \"ARCHIVE_ACCESS\",\n    DEEP_ARCHIVE_ACCESS: \"DEEP_ARCHIVE_ACCESS\",\n};\nexport const EncodingType = {\n    url: \"url\",\n};\nexport const ObjectStorageClass = {\n    DEEP_ARCHIVE: \"DEEP_ARCHIVE\",\n    EXPRESS_ONEZONE: \"EXPRESS_ONEZONE\",\n    GLACIER: \"GLACIER\",\n    GLACIER_IR: \"GLACIER_IR\",\n    INTELLIGENT_TIERING: \"INTELLIGENT_TIERING\",\n    ONEZONE_IA: \"ONEZONE_IA\",\n    OUTPOSTS: \"OUTPOSTS\",\n    REDUCED_REDUNDANCY: \"REDUCED_REDUNDANCY\",\n    SNOW: \"SNOW\",\n    STANDARD: \"STANDARD\",\n    STANDARD_IA: \"STANDARD_IA\",\n};\nexport const OptionalObjectAttributes = {\n    RESTORE_STATUS: \"RestoreStatus\",\n};\nexport const ObjectVersionStorageClass = {\n    STANDARD: \"STANDARD\",\n};\nexport const CompleteMultipartUploadOutputFilterSensitiveLog = (obj) => ({\n    ...obj,\n    ...(obj.SSEKMSKeyId && { SSEKMSKeyId: SENSITIVE_STRING }),\n});\nexport const CompleteMultipartUploadRequestFilterSensitiveLog = (obj) => ({\n    ...obj,\n    ...(obj.SSECustomerKey && { SSECustomerKey: SENSITIVE_STRING }),\n});\nexport const CopyObjectOutputFilterSensitiveLog = (obj) => ({\n    ...obj,\n    ...(obj.SSEKMSKeyId && { SSEKMSKeyId: SENSITIVE_STRING }),\n    ...(obj.SSEKMSEncryptionContext && { SSEKMSEncryptionContext: SENSITIVE_STRING }),\n});\nexport const CopyObjectRequestFilterSensitiveLog = (obj) => ({\n    ...obj,\n    ...(obj.SSECustomerKey && { SSECustomerKey: SENSITIVE_STRING }),\n    ...(obj.SSEKMSKeyId && { SSEKMSKeyId: SENSITIVE_STRING }),\n    ...(obj.SSEKMSEncryptionContext && { SSEKMSEncryptionContext: SENSITIVE_STRING }),\n    ...(obj.CopySourceSSECustomerKey && { CopySourceSSECustomerKey: SENSITIVE_STRING }),\n});\nexport const CreateMultipartUploadOutputFilterSensitiveLog = (obj) => ({\n    ...obj,\n    ...(obj.SSEKMSKeyId && { SSEKMSKeyId: SENSITIVE_STRING }),\n    ...(obj.SSEKMSEncryptionContext && { SSEKMSEncryptionContext: SENSITIVE_STRING }),\n});\nexport const CreateMultipartUploadRequestFilterSensitiveLog = (obj) => ({\n    ...obj,\n    ...(obj.SSECustomerKey && { SSECustomerKey: SENSITIVE_STRING }),\n    ...(obj.SSEKMSKeyId && { SSEKMSKeyId: SENSITIVE_STRING }),\n    ...(obj.SSEKMSEncryptionContext && { SSEKMSEncryptionContext: SENSITIVE_STRING }),\n});\nexport const SessionCredentialsFilterSensitiveLog = (obj) => ({\n    ...obj,\n    ...(obj.SecretAccessKey && { SecretAccessKey: SENSITIVE_STRING }),\n    ...(obj.SessionToken && { SessionToken: SENSITIVE_STRING }),\n});\nexport const CreateSessionOutputFilterSensitiveLog = (obj) => ({\n    ...obj,\n    ...(obj.SSEKMSKeyId && { SSEKMSKeyId: SENSITIVE_STRING }),\n    ...(obj.SSEKMSEncryptionContext && { SSEKMSEncryptionContext: SENSITIVE_STRING }),\n    ...(obj.Credentials && { Credentials: SessionCredentialsFilterSensitiveLog(obj.Credentials) }),\n});\nexport const CreateSessionRequestFilterSensitiveLog = (obj) => ({\n    ...obj,\n    ...(obj.SSEKMSKeyId && { SSEKMSKeyId: SENSITIVE_STRING }),\n    ...(obj.SSEKMSEncryptionContext && { SSEKMSEncryptionContext: SENSITIVE_STRING }),\n});\nexport const ServerSideEncryptionByDefaultFilterSensitiveLog = (obj) => ({\n    ...obj,\n    ...(obj.KMSMasterKeyID && { KMSMasterKeyID: SENSITIVE_STRING }),\n});\nexport const ServerSideEncryptionRuleFilterSensitiveLog = (obj) => ({\n    ...obj,\n    ...(obj.ApplyServerSideEncryptionByDefault && {\n        ApplyServerSideEncryptionByDefault: ServerSideEncryptionByDefaultFilterSensitiveLog(obj.ApplyServerSideEncryptionByDefault),\n    }),\n});\nexport const ServerSideEncryptionConfigurationFilterSensitiveLog = (obj) => ({\n    ...obj,\n    ...(obj.Rules && { Rules: obj.Rules.map((item) => ServerSideEncryptionRuleFilterSensitiveLog(item)) }),\n});\nexport const GetBucketEncryptionOutputFilterSensitiveLog = (obj) => ({\n    ...obj,\n    ...(obj.ServerSideEncryptionConfiguration && {\n        ServerSideEncryptionConfiguration: ServerSideEncryptionConfigurationFilterSensitiveLog(obj.ServerSideEncryptionConfiguration),\n    }),\n});\nexport const SSEKMSFilterSensitiveLog = (obj) => ({\n    ...obj,\n    ...(obj.KeyId && { KeyId: SENSITIVE_STRING }),\n});\nexport const InventoryEncryptionFilterSensitiveLog = (obj) => ({\n    ...obj,\n    ...(obj.SSEKMS && { SSEKMS: SSEKMSFilterSensitiveLog(obj.SSEKMS) }),\n});\nexport const InventoryS3BucketDestinationFilterSensitiveLog = (obj) => ({\n    ...obj,\n    ...(obj.Encryption && { Encryption: InventoryEncryptionFilterSensitiveLog(obj.Encryption) }),\n});\nexport const InventoryDestinationFilterSensitiveLog = (obj) => ({\n    ...obj,\n    ...(obj.S3BucketDestination && {\n        S3BucketDestination: InventoryS3BucketDestinationFilterSensitiveLog(obj.S3BucketDestination),\n    }),\n});\nexport const InventoryConfigurationFilterSensitiveLog = (obj) => ({\n    ...obj,\n    ...(obj.Destination && { Destination: InventoryDestinationFilterSensitiveLog(obj.Destination) }),\n});\nexport const GetBucketInventoryConfigurationOutputFilterSensitiveLog = (obj) => ({\n    ...obj,\n    ...(obj.InventoryConfiguration && {\n        InventoryConfiguration: InventoryConfigurationFilterSensitiveLog(obj.InventoryConfiguration),\n    }),\n});\nexport const GetObjectOutputFilterSensitiveLog = (obj) => ({\n    ...obj,\n    ...(obj.SSEKMSKeyId && { SSEKMSKeyId: SENSITIVE_STRING }),\n});\nexport const GetObjectRequestFilterSensitiveLog = (obj) => ({\n    ...obj,\n    ...(obj.SSECustomerKey && { SSECustomerKey: SENSITIVE_STRING }),\n});\nexport const GetObjectAttributesRequestFilterSensitiveLog = (obj) => ({\n    ...obj,\n    ...(obj.SSECustomerKey && { SSECustomerKey: SENSITIVE_STRING }),\n});\nexport const GetObjectTorrentOutputFilterSensitiveLog = (obj) => ({\n    ...obj,\n});\nexport const HeadObjectOutputFilterSensitiveLog = (obj) => ({\n    ...obj,\n    ...(obj.SSEKMSKeyId && { SSEKMSKeyId: SENSITIVE_STRING }),\n});\nexport const HeadObjectRequestFilterSensitiveLog = (obj) => ({\n    ...obj,\n    ...(obj.SSECustomerKey && { SSECustomerKey: SENSITIVE_STRING }),\n});\nexport const ListBucketInventoryConfigurationsOutputFilterSensitiveLog = (obj) => ({\n    ...obj,\n    ...(obj.InventoryConfigurationList && {\n        InventoryConfigurationList: obj.InventoryConfigurationList.map((item) => InventoryConfigurationFilterSensitiveLog(item)),\n    }),\n});\nexport const ListPartsRequestFilterSensitiveLog = (obj) => ({\n    ...obj,\n    ...(obj.SSECustomerKey && { SSECustomerKey: SENSITIVE_STRING }),\n});\n","import { SENSITIVE_STRING } from \"@smithy/smithy-client\";\nimport { InventoryConfigurationFilterSensitiveLog, ServerSideEncryptionConfigurationFilterSensitiveLog, } from \"./models_0\";\nimport { S3ServiceException as __BaseException } from \"./S3ServiceException\";\nexport const MFADelete = {\n    Disabled: \"Disabled\",\n    Enabled: \"Enabled\",\n};\nexport class EncryptionTypeMismatch extends __BaseException {\n    name = \"EncryptionTypeMismatch\";\n    $fault = \"client\";\n    constructor(opts) {\n        super({\n            name: \"EncryptionTypeMismatch\",\n            $fault: \"client\",\n            ...opts,\n        });\n        Object.setPrototypeOf(this, EncryptionTypeMismatch.prototype);\n    }\n}\nexport class InvalidRequest extends __BaseException {\n    name = \"InvalidRequest\";\n    $fault = \"client\";\n    constructor(opts) {\n        super({\n            name: \"InvalidRequest\",\n            $fault: \"client\",\n            ...opts,\n        });\n        Object.setPrototypeOf(this, InvalidRequest.prototype);\n    }\n}\nexport class InvalidWriteOffset extends __BaseException {\n    name = \"InvalidWriteOffset\";\n    $fault = \"client\";\n    constructor(opts) {\n        super({\n            name: \"InvalidWriteOffset\",\n            $fault: \"client\",\n            ...opts,\n        });\n        Object.setPrototypeOf(this, InvalidWriteOffset.prototype);\n    }\n}\nexport class TooManyParts extends __BaseException {\n    name = \"TooManyParts\";\n    $fault = \"client\";\n    constructor(opts) {\n        super({\n            name: \"TooManyParts\",\n            $fault: \"client\",\n            ...opts,\n        });\n        Object.setPrototypeOf(this, TooManyParts.prototype);\n    }\n}\nexport class ObjectAlreadyInActiveTierError extends __BaseException {\n    name = \"ObjectAlreadyInActiveTierError\";\n    $fault = \"client\";\n    constructor(opts) {\n        super({\n            name: \"ObjectAlreadyInActiveTierError\",\n            $fault: \"client\",\n            ...opts,\n        });\n        Object.setPrototypeOf(this, ObjectAlreadyInActiveTierError.prototype);\n    }\n}\nexport const Tier = {\n    Bulk: \"Bulk\",\n    Expedited: \"Expedited\",\n    Standard: \"Standard\",\n};\nexport const ExpressionType = {\n    SQL: \"SQL\",\n};\nexport const CompressionType = {\n    BZIP2: \"BZIP2\",\n    GZIP: \"GZIP\",\n    NONE: \"NONE\",\n};\nexport const FileHeaderInfo = {\n    IGNORE: \"IGNORE\",\n    NONE: \"NONE\",\n    USE: \"USE\",\n};\nexport const JSONType = {\n    DOCUMENT: \"DOCUMENT\",\n    LINES: \"LINES\",\n};\nexport const QuoteFields = {\n    ALWAYS: \"ALWAYS\",\n    ASNEEDED: \"ASNEEDED\",\n};\nexport const RestoreRequestType = {\n    SELECT: \"SELECT\",\n};\nexport var SelectObjectContentEventStream;\n(function (SelectObjectContentEventStream) {\n    SelectObjectContentEventStream.visit = (value, visitor) => {\n        if (value.Records !== undefined)\n            return visitor.Records(value.Records);\n        if (value.Stats !== undefined)\n            return visitor.Stats(value.Stats);\n        if (value.Progress !== undefined)\n            return visitor.Progress(value.Progress);\n        if (value.Cont !== undefined)\n            return visitor.Cont(value.Cont);\n        if (value.End !== undefined)\n            return visitor.End(value.End);\n        return visitor._(value.$unknown[0], value.$unknown[1]);\n    };\n})(SelectObjectContentEventStream || (SelectObjectContentEventStream = {}));\nexport const PutBucketEncryptionRequestFilterSensitiveLog = (obj) => ({\n    ...obj,\n    ...(obj.ServerSideEncryptionConfiguration && {\n        ServerSideEncryptionConfiguration: ServerSideEncryptionConfigurationFilterSensitiveLog(obj.ServerSideEncryptionConfiguration),\n    }),\n});\nexport const PutBucketInventoryConfigurationRequestFilterSensitiveLog = (obj) => ({\n    ...obj,\n    ...(obj.InventoryConfiguration && {\n        InventoryConfiguration: InventoryConfigurationFilterSensitiveLog(obj.InventoryConfiguration),\n    }),\n});\nexport const PutObjectOutputFilterSensitiveLog = (obj) => ({\n    ...obj,\n    ...(obj.SSEKMSKeyId && { SSEKMSKeyId: SENSITIVE_STRING }),\n    ...(obj.SSEKMSEncryptionContext && { SSEKMSEncryptionContext: SENSITIVE_STRING }),\n});\nexport const PutObjectRequestFilterSensitiveLog = (obj) => ({\n    ...obj,\n    ...(obj.SSECustomerKey && { SSECustomerKey: SENSITIVE_STRING }),\n    ...(obj.SSEKMSKeyId && { SSEKMSKeyId: SENSITIVE_STRING }),\n    ...(obj.SSEKMSEncryptionContext && { SSEKMSEncryptionContext: SENSITIVE_STRING }),\n});\nexport const EncryptionFilterSensitiveLog = (obj) => ({\n    ...obj,\n    ...(obj.KMSKeyId && { KMSKeyId: SENSITIVE_STRING }),\n});\nexport const S3LocationFilterSensitiveLog = (obj) => ({\n    ...obj,\n    ...(obj.Encryption && { Encryption: EncryptionFilterSensitiveLog(obj.Encryption) }),\n});\nexport const OutputLocationFilterSensitiveLog = (obj) => ({\n    ...obj,\n    ...(obj.S3 && { S3: S3LocationFilterSensitiveLog(obj.S3) }),\n});\nexport const RestoreRequestFilterSensitiveLog = (obj) => ({\n    ...obj,\n    ...(obj.OutputLocation && { OutputLocation: OutputLocationFilterSensitiveLog(obj.OutputLocation) }),\n});\nexport const RestoreObjectRequestFilterSensitiveLog = (obj) => ({\n    ...obj,\n    ...(obj.RestoreRequest && { RestoreRequest: RestoreRequestFilterSensitiveLog(obj.RestoreRequest) }),\n});\nexport const SelectObjectContentEventStreamFilterSensitiveLog = (obj) => {\n    if (obj.Records !== undefined)\n        return { Records: obj.Records };\n    if (obj.Stats !== undefined)\n        return { Stats: obj.Stats };\n    if (obj.Progress !== undefined)\n        return { Progress: obj.Progress };\n    if (obj.Cont !== undefined)\n        return { Cont: obj.Cont };\n    if (obj.End !== undefined)\n        return { End: obj.End };\n    if (obj.$unknown !== undefined)\n        return { [obj.$unknown[0]]: \"UNKNOWN\" };\n};\nexport const SelectObjectContentOutputFilterSensitiveLog = (obj) => ({\n    ...obj,\n    ...(obj.Payload && { Payload: \"STREAMING_CONTENT\" }),\n});\nexport const SelectObjectContentRequestFilterSensitiveLog = (obj) => ({\n    ...obj,\n    ...(obj.SSECustomerKey && { SSECustomerKey: SENSITIVE_STRING }),\n});\nexport const UploadPartOutputFilterSensitiveLog = (obj) => ({\n    ...obj,\n    ...(obj.SSEKMSKeyId && { SSEKMSKeyId: SENSITIVE_STRING }),\n});\nexport const UploadPartRequestFilterSensitiveLog = (obj) => ({\n    ...obj,\n    ...(obj.SSECustomerKey && { SSECustomerKey: SENSITIVE_STRING }),\n});\nexport const UploadPartCopyOutputFilterSensitiveLog = (obj) => ({\n    ...obj,\n    ...(obj.SSEKMSKeyId && { SSEKMSKeyId: SENSITIVE_STRING }),\n});\nexport const UploadPartCopyRequestFilterSensitiveLog = (obj) => ({\n    ...obj,\n    ...(obj.SSECustomerKey && { SSECustomerKey: SENSITIVE_STRING }),\n    ...(obj.CopySourceSSECustomerKey && { CopySourceSSECustomerKey: SENSITIVE_STRING }),\n});\nexport const WriteGetObjectResponseRequestFilterSensitiveLog = (obj) => ({\n    ...obj,\n    ...(obj.SSEKMSKeyId && { SSEKMSKeyId: SENSITIVE_STRING }),\n});\n","import { loadRestXmlErrorCode, parseXmlBody as parseBody, parseXmlErrorBody as parseErrorBody } from \"@aws-sdk/core\";\nimport { XmlNode as __XmlNode, XmlText as __XmlText } from \"@aws-sdk/xml-builder\";\nimport { requestBuilder as rb } from \"@smithy/core\";\nimport { isValidHostname as __isValidHostname, } from \"@smithy/protocol-http\";\nimport { collectBody, dateToUtcString as __dateToUtcString, decorateServiceException as __decorateServiceException, expectNonNull as __expectNonNull, expectObject as __expectObject, expectString as __expectString, expectUnion as __expectUnion, getArrayIfSingleItem as __getArrayIfSingleItem, isSerializableHeaderValue, map, parseBoolean as __parseBoolean, parseRfc3339DateTimeWithOffset as __parseRfc3339DateTimeWithOffset, parseRfc7231DateTime as __parseRfc7231DateTime, quoteHeader as __quoteHeader, serializeDateTime as __serializeDateTime, strictParseInt32 as __strictParseInt32, strictParseLong as __strictParseLong, withBaseException, } from \"@smithy/smithy-client\";\nimport { AnalyticsFilter, BucketAlreadyExists, BucketAlreadyOwnedByYou, InvalidObjectState, MetricsFilter, NoSuchBucket, NoSuchKey, NoSuchUpload, NotFound, ObjectNotInActiveTierError, } from \"../models/models_0\";\nimport { EncryptionTypeMismatch, InvalidRequest, InvalidWriteOffset, ObjectAlreadyInActiveTierError, TooManyParts, } from \"../models/models_1\";\nimport { S3ServiceException as __BaseException } from \"../models/S3ServiceException\";\nexport const se_AbortMultipartUploadCommand = async (input, context) => {\n    const b = rb(input, context);\n    const headers = map({}, isSerializableHeaderValue, {\n        [_xarp]: input[_RP],\n        [_xaebo]: input[_EBO],\n        [_xaimit]: [() => isSerializableHeaderValue(input[_IMIT]), () => __dateToUtcString(input[_IMIT]).toString()],\n    });\n    b.bp(\"/{Key+}\");\n    b.p(\"Bucket\", () => input.Bucket, \"{Bucket}\", false);\n    b.p(\"Key\", () => input.Key, \"{Key+}\", true);\n    const query = map({\n        [_xi]: [, \"AbortMultipartUpload\"],\n        [_uI]: [, __expectNonNull(input[_UI], `UploadId`)],\n    });\n    let body;\n    b.m(\"DELETE\").h(headers).q(query).b(body);\n    return b.build();\n};\nexport const se_CompleteMultipartUploadCommand = async (input, context) => {\n    const b = rb(input, context);\n    const headers = map({}, isSerializableHeaderValue, {\n        \"content-type\": \"application/xml\",\n        [_xacc]: input[_CCRC],\n        [_xacc_]: input[_CCRCC],\n        [_xacc__]: input[_CCRCNVME],\n        [_xacs]: input[_CSHA],\n        [_xacs_]: input[_CSHAh],\n        [_xact]: input[_CT],\n        [_xamos]: [() => isSerializableHeaderValue(input[_MOS]), () => input[_MOS].toString()],\n        [_xarp]: input[_RP],\n        [_xaebo]: input[_EBO],\n        [_im]: input[_IM],\n        [_inm]: input[_INM],\n        [_xasseca]: input[_SSECA],\n        [_xasseck]: input[_SSECK],\n        [_xasseckm]: input[_SSECKMD],\n    });\n    b.bp(\"/{Key+}\");\n    b.p(\"Bucket\", () => input.Bucket, \"{Bucket}\", false);\n    b.p(\"Key\", () => input.Key, \"{Key+}\", true);\n    const query = map({\n        [_uI]: [, __expectNonNull(input[_UI], `UploadId`)],\n    });\n    let body;\n    let contents;\n    if (input.MultipartUpload !== undefined) {\n        contents = se_CompletedMultipartUpload(input.MultipartUpload, context);\n        contents = contents.n(\"CompleteMultipartUpload\");\n        body = _ve;\n        contents.a(\"xmlns\", \"http://s3.amazonaws.com/doc/2006-03-01/\");\n        body += contents.toString();\n    }\n    b.m(\"POST\").h(headers).q(query).b(body);\n    return b.build();\n};\nexport const se_CopyObjectCommand = async (input, context) => {\n    const b = rb(input, context);\n    const headers = map({}, isSerializableHeaderValue, {\n        [_xaa]: input[_ACL],\n        [_cc]: input[_CC],\n        [_xaca]: input[_CA],\n        [_cd]: input[_CD],\n        [_ce]: input[_CE],\n        [_cl]: input[_CL],\n        [_ct]: input[_CTo],\n        [_xacs__]: input[_CS],\n        [_xacsim]: input[_CSIM],\n        [_xacsims]: [() => isSerializableHeaderValue(input[_CSIMS]), () => __dateToUtcString(input[_CSIMS]).toString()],\n        [_xacsinm]: input[_CSINM],\n        [_xacsius]: [() => isSerializableHeaderValue(input[_CSIUS]), () => __dateToUtcString(input[_CSIUS]).toString()],\n        [_e]: [() => isSerializableHeaderValue(input[_E]), () => __dateToUtcString(input[_E]).toString()],\n        [_xagfc]: input[_GFC],\n        [_xagr]: input[_GR],\n        [_xagra]: input[_GRACP],\n        [_xagwa]: input[_GWACP],\n        [_xamd]: input[_MD],\n        [_xatd]: input[_TD],\n        [_xasse]: input[_SSE],\n        [_xasc]: input[_SC],\n        [_xawrl]: input[_WRL],\n        [_xasseca]: input[_SSECA],\n        [_xasseck]: input[_SSECK],\n        [_xasseckm]: input[_SSECKMD],\n        [_xasseakki]: input[_SSEKMSKI],\n        [_xassec]: input[_SSEKMSEC],\n        [_xassebke]: [() => isSerializableHeaderValue(input[_BKE]), () => input[_BKE].toString()],\n        [_xacssseca]: input[_CSSSECA],\n        [_xacssseck]: input[_CSSSECK],\n        [_xacssseckm]: input[_CSSSECKMD],\n        [_xarp]: input[_RP],\n        [_xat]: input[_T],\n        [_xaolm]: input[_OLM],\n        [_xaolrud]: [() => isSerializableHeaderValue(input[_OLRUD]), () => __serializeDateTime(input[_OLRUD]).toString()],\n        [_xaollh]: input[_OLLHS],\n        [_xaebo]: input[_EBO],\n        [_xasebo]: input[_ESBO],\n        ...(input.Metadata !== undefined &&\n            Object.keys(input.Metadata).reduce((acc, suffix) => {\n                acc[`x-amz-meta-${suffix.toLowerCase()}`] = input.Metadata[suffix];\n                return acc;\n            }, {})),\n    });\n    b.bp(\"/{Key+}\");\n    b.p(\"Bucket\", () => input.Bucket, \"{Bucket}\", false);\n    b.p(\"Key\", () => input.Key, \"{Key+}\", true);\n    const query = map({\n        [_xi]: [, \"CopyObject\"],\n    });\n    let body;\n    b.m(\"PUT\").h(headers).q(query).b(body);\n    return b.build();\n};\nexport const se_CreateBucketCommand = async (input, context) => {\n    const b = rb(input, context);\n    const headers = map({}, isSerializableHeaderValue, {\n        \"content-type\": \"application/xml\",\n        [_xaa]: input[_ACL],\n        [_xagfc]: input[_GFC],\n        [_xagr]: input[_GR],\n        [_xagra]: input[_GRACP],\n        [_xagw]: input[_GW],\n        [_xagwa]: input[_GWACP],\n        [_xabole]: [() => isSerializableHeaderValue(input[_OLEFB]), () => input[_OLEFB].toString()],\n        [_xaoo]: input[_OO],\n    });\n    b.bp(\"/\");\n    b.p(\"Bucket\", () => input.Bucket, \"{Bucket}\", false);\n    let body;\n    let contents;\n    if (input.CreateBucketConfiguration !== undefined) {\n        contents = se_CreateBucketConfiguration(input.CreateBucketConfiguration, context);\n        body = _ve;\n        contents.a(\"xmlns\", \"http://s3.amazonaws.com/doc/2006-03-01/\");\n        body += contents.toString();\n    }\n    b.m(\"PUT\").h(headers).b(body);\n    return b.build();\n};\nexport const se_CreateBucketMetadataTableConfigurationCommand = async (input, context) => {\n    const b = rb(input, context);\n    const headers = map({}, isSerializableHeaderValue, {\n        \"content-type\": \"application/xml\",\n        [_cm]: input[_CMD],\n        [_xasca]: input[_CA],\n        [_xaebo]: input[_EBO],\n    });\n    b.bp(\"/\");\n    b.p(\"Bucket\", () => input.Bucket, \"{Bucket}\", false);\n    const query = map({\n        [_mT]: [, \"\"],\n    });\n    let body;\n    let contents;\n    if (input.MetadataTableConfiguration !== undefined) {\n        contents = se_MetadataTableConfiguration(input.MetadataTableConfiguration, context);\n        body = _ve;\n        contents.a(\"xmlns\", \"http://s3.amazonaws.com/doc/2006-03-01/\");\n        body += contents.toString();\n    }\n    b.m(\"POST\").h(headers).q(query).b(body);\n    return b.build();\n};\nexport const se_CreateMultipartUploadCommand = async (input, context) => {\n    const b = rb(input, context);\n    const headers = map({}, isSerializableHeaderValue, {\n        [_xaa]: input[_ACL],\n        [_cc]: input[_CC],\n        [_cd]: input[_CD],\n        [_ce]: input[_CE],\n        [_cl]: input[_CL],\n        [_ct]: input[_CTo],\n        [_e]: [() => isSerializableHeaderValue(input[_E]), () => __dateToUtcString(input[_E]).toString()],\n        [_xagfc]: input[_GFC],\n        [_xagr]: input[_GR],\n        [_xagra]: input[_GRACP],\n        [_xagwa]: input[_GWACP],\n        [_xasse]: input[_SSE],\n        [_xasc]: input[_SC],\n        [_xawrl]: input[_WRL],\n        [_xasseca]: input[_SSECA],\n        [_xasseck]: input[_SSECK],\n        [_xasseckm]: input[_SSECKMD],\n        [_xasseakki]: input[_SSEKMSKI],\n        [_xassec]: input[_SSEKMSEC],\n        [_xassebke]: [() => isSerializableHeaderValue(input[_BKE]), () => input[_BKE].toString()],\n        [_xarp]: input[_RP],\n        [_xat]: input[_T],\n        [_xaolm]: input[_OLM],\n        [_xaolrud]: [() => isSerializableHeaderValue(input[_OLRUD]), () => __serializeDateTime(input[_OLRUD]).toString()],\n        [_xaollh]: input[_OLLHS],\n        [_xaebo]: input[_EBO],\n        [_xaca]: input[_CA],\n        [_xact]: input[_CT],\n        ...(input.Metadata !== undefined &&\n            Object.keys(input.Metadata).reduce((acc, suffix) => {\n                acc[`x-amz-meta-${suffix.toLowerCase()}`] = input.Metadata[suffix];\n                return acc;\n            }, {})),\n    });\n    b.bp(\"/{Key+}\");\n    b.p(\"Bucket\", () => input.Bucket, \"{Bucket}\", false);\n    b.p(\"Key\", () => input.Key, \"{Key+}\", true);\n    const query = map({\n        [_u]: [, \"\"],\n    });\n    let body;\n    b.m(\"POST\").h(headers).q(query).b(body);\n    return b.build();\n};\nexport const se_CreateSessionCommand = async (input, context) => {\n    const b = rb(input, context);\n    const headers = map({}, isSerializableHeaderValue, {\n        [_xacsm]: input[_SM],\n        [_xasse]: input[_SSE],\n        [_xasseakki]: input[_SSEKMSKI],\n        [_xassec]: input[_SSEKMSEC],\n        [_xassebke]: [() => isSerializableHeaderValue(input[_BKE]), () => input[_BKE].toString()],\n    });\n    b.bp(\"/\");\n    b.p(\"Bucket\", () => input.Bucket, \"{Bucket}\", false);\n    const query = map({\n        [_s]: [, \"\"],\n    });\n    let body;\n    b.m(\"GET\").h(headers).q(query).b(body);\n    return b.build();\n};\nexport const se_DeleteBucketCommand = async (input, context) => {\n    const b = rb(input, context);\n    const headers = map({}, isSerializableHeaderValue, {\n        [_xaebo]: input[_EBO],\n    });\n    b.bp(\"/\");\n    b.p(\"Bucket\", () => input.Bucket, \"{Bucket}\", false);\n    let body;\n    b.m(\"DELETE\").h(headers).b(body);\n    return b.build();\n};\nexport const se_DeleteBucketAnalyticsConfigurationCommand = async (input, context) => {\n    const b = rb(input, context);\n    const headers = map({}, isSerializableHeaderValue, {\n        [_xaebo]: input[_EBO],\n    });\n    b.bp(\"/\");\n    b.p(\"Bucket\", () => input.Bucket, \"{Bucket}\", false);\n    const query = map({\n        [_a]: [, \"\"],\n        [_i]: [, __expectNonNull(input[_I], `Id`)],\n    });\n    let body;\n    b.m(\"DELETE\").h(headers).q(query).b(body);\n    return b.build();\n};\nexport const se_DeleteBucketCorsCommand = async (input, context) => {\n    const b = rb(input, context);\n    const headers = map({}, isSerializableHeaderValue, {\n        [_xaebo]: input[_EBO],\n    });\n    b.bp(\"/\");\n    b.p(\"Bucket\", () => input.Bucket, \"{Bucket}\", false);\n    const query = map({\n        [_c]: [, \"\"],\n    });\n    let body;\n    b.m(\"DELETE\").h(headers).q(query).b(body);\n    return b.build();\n};\nexport const se_DeleteBucketEncryptionCommand = async (input, context) => {\n    const b = rb(input, context);\n    const headers = map({}, isSerializableHeaderValue, {\n        [_xaebo]: input[_EBO],\n    });\n    b.bp(\"/\");\n    b.p(\"Bucket\", () => input.Bucket, \"{Bucket}\", false);\n    const query = map({\n        [_en]: [, \"\"],\n    });\n    let body;\n    b.m(\"DELETE\").h(headers).q(query).b(body);\n    return b.build();\n};\nexport const se_DeleteBucketIntelligentTieringConfigurationCommand = async (input, context) => {\n    const b = rb(input, context);\n    const headers = {};\n    b.bp(\"/\");\n    b.p(\"Bucket\", () => input.Bucket, \"{Bucket}\", false);\n    const query = map({\n        [_it]: [, \"\"],\n        [_i]: [, __expectNonNull(input[_I], `Id`)],\n    });\n    let body;\n    b.m(\"DELETE\").h(headers).q(query).b(body);\n    return b.build();\n};\nexport const se_DeleteBucketInventoryConfigurationCommand = async (input, context) => {\n    const b = rb(input, context);\n    const headers = map({}, isSerializableHeaderValue, {\n        [_xaebo]: input[_EBO],\n    });\n    b.bp(\"/\");\n    b.p(\"Bucket\", () => input.Bucket, \"{Bucket}\", false);\n    const query = map({\n        [_in]: [, \"\"],\n        [_i]: [, __expectNonNull(input[_I], `Id`)],\n    });\n    let body;\n    b.m(\"DELETE\").h(headers).q(query).b(body);\n    return b.build();\n};\nexport const se_DeleteBucketLifecycleCommand = async (input, context) => {\n    const b = rb(input, context);\n    const headers = map({}, isSerializableHeaderValue, {\n        [_xaebo]: input[_EBO],\n    });\n    b.bp(\"/\");\n    b.p(\"Bucket\", () => input.Bucket, \"{Bucket}\", false);\n    const query = map({\n        [_l]: [, \"\"],\n    });\n    let body;\n    b.m(\"DELETE\").h(headers).q(query).b(body);\n    return b.build();\n};\nexport const se_DeleteBucketMetadataTableConfigurationCommand = async (input, context) => {\n    const b = rb(input, context);\n    const headers = map({}, isSerializableHeaderValue, {\n        [_xaebo]: input[_EBO],\n    });\n    b.bp(\"/\");\n    b.p(\"Bucket\", () => input.Bucket, \"{Bucket}\", false);\n    const query = map({\n        [_mT]: [, \"\"],\n    });\n    let body;\n    b.m(\"DELETE\").h(headers).q(query).b(body);\n    return b.build();\n};\nexport const se_DeleteBucketMetricsConfigurationCommand = async (input, context) => {\n    const b = rb(input, context);\n    const headers = map({}, isSerializableHeaderValue, {\n        [_xaebo]: input[_EBO],\n    });\n    b.bp(\"/\");\n    b.p(\"Bucket\", () => input.Bucket, \"{Bucket}\", false);\n    const query = map({\n        [_m]: [, \"\"],\n        [_i]: [, __expectNonNull(input[_I], `Id`)],\n    });\n    let body;\n    b.m(\"DELETE\").h(headers).q(query).b(body);\n    return b.build();\n};\nexport const se_DeleteBucketOwnershipControlsCommand = async (input, context) => {\n    const b = rb(input, context);\n    const headers = map({}, isSerializableHeaderValue, {\n        [_xaebo]: input[_EBO],\n    });\n    b.bp(\"/\");\n    b.p(\"Bucket\", () => input.Bucket, \"{Bucket}\", false);\n    const query = map({\n        [_oC]: [, \"\"],\n    });\n    let body;\n    b.m(\"DELETE\").h(headers).q(query).b(body);\n    return b.build();\n};\nexport const se_DeleteBucketPolicyCommand = async (input, context) => {\n    const b = rb(input, context);\n    const headers = map({}, isSerializableHeaderValue, {\n        [_xaebo]: input[_EBO],\n    });\n    b.bp(\"/\");\n    b.p(\"Bucket\", () => input.Bucket, \"{Bucket}\", false);\n    const query = map({\n        [_p]: [, \"\"],\n    });\n    let body;\n    b.m(\"DELETE\").h(headers).q(query).b(body);\n    return b.build();\n};\nexport const se_DeleteBucketReplicationCommand = async (input, context) => {\n    const b = rb(input, context);\n    const headers = map({}, isSerializableHeaderValue, {\n        [_xaebo]: input[_EBO],\n    });\n    b.bp(\"/\");\n    b.p(\"Bucket\", () => input.Bucket, \"{Bucket}\", false);\n    const query = map({\n        [_r]: [, \"\"],\n    });\n    let body;\n    b.m(\"DELETE\").h(headers).q(query).b(body);\n    return b.build();\n};\nexport const se_DeleteBucketTaggingCommand = async (input, context) => {\n    const b = rb(input, context);\n    const headers = map({}, isSerializableHeaderValue, {\n        [_xaebo]: input[_EBO],\n    });\n    b.bp(\"/\");\n    b.p(\"Bucket\", () => input.Bucket, \"{Bucket}\", false);\n    const query = map({\n        [_t]: [, \"\"],\n    });\n    let body;\n    b.m(\"DELETE\").h(headers).q(query).b(body);\n    return b.build();\n};\nexport const se_DeleteBucketWebsiteCommand = async (input, context) => {\n    const b = rb(input, context);\n    const headers = map({}, isSerializableHeaderValue, {\n        [_xaebo]: input[_EBO],\n    });\n    b.bp(\"/\");\n    b.p(\"Bucket\", () => input.Bucket, \"{Bucket}\", false);\n    const query = map({\n        [_w]: [, \"\"],\n    });\n    let body;\n    b.m(\"DELETE\").h(headers).q(query).b(body);\n    return b.build();\n};\nexport const se_DeleteObjectCommand = async (input, context) => {\n    const b = rb(input, context);\n    const headers = map({}, isSerializableHeaderValue, {\n        [_xam]: input[_MFA],\n        [_xarp]: input[_RP],\n        [_xabgr]: [() => isSerializableHeaderValue(input[_BGR]), () => input[_BGR].toString()],\n        [_xaebo]: input[_EBO],\n        [_im]: input[_IM],\n        [_xaimlmt]: [() => isSerializableHeaderValue(input[_IMLMT]), () => __dateToUtcString(input[_IMLMT]).toString()],\n        [_xaims]: [() => isSerializableHeaderValue(input[_IMS]), () => input[_IMS].toString()],\n    });\n    b.bp(\"/{Key+}\");\n    b.p(\"Bucket\", () => input.Bucket, \"{Bucket}\", false);\n    b.p(\"Key\", () => input.Key, \"{Key+}\", true);\n    const query = map({\n        [_xi]: [, \"DeleteObject\"],\n        [_vI]: [, input[_VI]],\n    });\n    let body;\n    b.m(\"DELETE\").h(headers).q(query).b(body);\n    return b.build();\n};\nexport const se_DeleteObjectsCommand = async (input, context) => {\n    const b = rb(input, context);\n    const headers = map({}, isSerializableHeaderValue, {\n        \"content-type\": \"application/xml\",\n        [_xam]: input[_MFA],\n        [_xarp]: input[_RP],\n        [_xabgr]: [() => isSerializableHeaderValue(input[_BGR]), () => input[_BGR].toString()],\n        [_xaebo]: input[_EBO],\n        [_xasca]: input[_CA],\n    });\n    b.bp(\"/\");\n    b.p(\"Bucket\", () => input.Bucket, \"{Bucket}\", false);\n    const query = map({\n        [_d]: [, \"\"],\n    });\n    let body;\n    let contents;\n    if (input.Delete !== undefined) {\n        contents = se_Delete(input.Delete, context);\n        body = _ve;\n        contents.a(\"xmlns\", \"http://s3.amazonaws.com/doc/2006-03-01/\");\n        body += contents.toString();\n    }\n    b.m(\"POST\").h(headers).q(query).b(body);\n    return b.build();\n};\nexport const se_DeleteObjectTaggingCommand = async (input, context) => {\n    const b = rb(input, context);\n    const headers = map({}, isSerializableHeaderValue, {\n        [_xaebo]: input[_EBO],\n    });\n    b.bp(\"/{Key+}\");\n    b.p(\"Bucket\", () => input.Bucket, \"{Bucket}\", false);\n    b.p(\"Key\", () => input.Key, \"{Key+}\", true);\n    const query = map({\n        [_t]: [, \"\"],\n        [_vI]: [, input[_VI]],\n    });\n    let body;\n    b.m(\"DELETE\").h(headers).q(query).b(body);\n    return b.build();\n};\nexport const se_DeletePublicAccessBlockCommand = async (input, context) => {\n    const b = rb(input, context);\n    const headers = map({}, isSerializableHeaderValue, {\n        [_xaebo]: input[_EBO],\n    });\n    b.bp(\"/\");\n    b.p(\"Bucket\", () => input.Bucket, \"{Bucket}\", false);\n    const query = map({\n        [_pAB]: [, \"\"],\n    });\n    let body;\n    b.m(\"DELETE\").h(headers).q(query).b(body);\n    return b.build();\n};\nexport const se_GetBucketAccelerateConfigurationCommand = async (input, context) => {\n    const b = rb(input, context);\n    const headers = map({}, isSerializableHeaderValue, {\n        [_xaebo]: input[_EBO],\n        [_xarp]: input[_RP],\n    });\n    b.bp(\"/\");\n    b.p(\"Bucket\", () => input.Bucket, \"{Bucket}\", false);\n    const query = map({\n        [_ac]: [, \"\"],\n    });\n    let body;\n    b.m(\"GET\").h(headers).q(query).b(body);\n    return b.build();\n};\nexport const se_GetBucketAclCommand = async (input, context) => {\n    const b = rb(input, context);\n    const headers = map({}, isSerializableHeaderValue, {\n        [_xaebo]: input[_EBO],\n    });\n    b.bp(\"/\");\n    b.p(\"Bucket\", () => input.Bucket, \"{Bucket}\", false);\n    const query = map({\n        [_acl]: [, \"\"],\n    });\n    let body;\n    b.m(\"GET\").h(headers).q(query).b(body);\n    return b.build();\n};\nexport const se_GetBucketAnalyticsConfigurationCommand = async (input, context) => {\n    const b = rb(input, context);\n    const headers = map({}, isSerializableHeaderValue, {\n        [_xaebo]: input[_EBO],\n    });\n    b.bp(\"/\");\n    b.p(\"Bucket\", () => input.Bucket, \"{Bucket}\", false);\n    const query = map({\n        [_a]: [, \"\"],\n        [_xi]: [, \"GetBucketAnalyticsConfiguration\"],\n        [_i]: [, __expectNonNull(input[_I], `Id`)],\n    });\n    let body;\n    b.m(\"GET\").h(headers).q(query).b(body);\n    return b.build();\n};\nexport const se_GetBucketCorsCommand = async (input, context) => {\n    const b = rb(input, context);\n    const headers = map({}, isSerializableHeaderValue, {\n        [_xaebo]: input[_EBO],\n    });\n    b.bp(\"/\");\n    b.p(\"Bucket\", () => input.Bucket, \"{Bucket}\", false);\n    const query = map({\n        [_c]: [, \"\"],\n    });\n    let body;\n    b.m(\"GET\").h(headers).q(query).b(body);\n    return b.build();\n};\nexport const se_GetBucketEncryptionCommand = async (input, context) => {\n    const b = rb(input, context);\n    const headers = map({}, isSerializableHeaderValue, {\n        [_xaebo]: input[_EBO],\n    });\n    b.bp(\"/\");\n    b.p(\"Bucket\", () => input.Bucket, \"{Bucket}\", false);\n    const query = map({\n        [_en]: [, \"\"],\n    });\n    let body;\n    b.m(\"GET\").h(headers).q(query).b(body);\n    return b.build();\n};\nexport const se_GetBucketIntelligentTieringConfigurationCommand = async (input, context) => {\n    const b = rb(input, context);\n    const headers = {};\n    b.bp(\"/\");\n    b.p(\"Bucket\", () => input.Bucket, \"{Bucket}\", false);\n    const query = map({\n        [_it]: [, \"\"],\n        [_xi]: [, \"GetBucketIntelligentTieringConfiguration\"],\n        [_i]: [, __expectNonNull(input[_I], `Id`)],\n    });\n    let body;\n    b.m(\"GET\").h(headers).q(query).b(body);\n    return b.build();\n};\nexport const se_GetBucketInventoryConfigurationCommand = async (input, context) => {\n    const b = rb(input, context);\n    const headers = map({}, isSerializableHeaderValue, {\n        [_xaebo]: input[_EBO],\n    });\n    b.bp(\"/\");\n    b.p(\"Bucket\", () => input.Bucket, \"{Bucket}\", false);\n    const query = map({\n        [_in]: [, \"\"],\n        [_xi]: [, \"GetBucketInventoryConfiguration\"],\n        [_i]: [, __expectNonNull(input[_I], `Id`)],\n    });\n    let body;\n    b.m(\"GET\").h(headers).q(query).b(body);\n    return b.build();\n};\nexport const se_GetBucketLifecycleConfigurationCommand = async (input, context) => {\n    const b = rb(input, context);\n    const headers = map({}, isSerializableHeaderValue, {\n        [_xaebo]: input[_EBO],\n    });\n    b.bp(\"/\");\n    b.p(\"Bucket\", () => input.Bucket, \"{Bucket}\", false);\n    const query = map({\n        [_l]: [, \"\"],\n    });\n    let body;\n    b.m(\"GET\").h(headers).q(query).b(body);\n    return b.build();\n};\nexport const se_GetBucketLocationCommand = async (input, context) => {\n    const b = rb(input, context);\n    const headers = map({}, isSerializableHeaderValue, {\n        [_xaebo]: input[_EBO],\n    });\n    b.bp(\"/\");\n    b.p(\"Bucket\", () => input.Bucket, \"{Bucket}\", false);\n    const query = map({\n        [_lo]: [, \"\"],\n    });\n    let body;\n    b.m(\"GET\").h(headers).q(query).b(body);\n    return b.build();\n};\nexport const se_GetBucketLoggingCommand = async (input, context) => {\n    const b = rb(input, context);\n    const headers = map({}, isSerializableHeaderValue, {\n        [_xaebo]: input[_EBO],\n    });\n    b.bp(\"/\");\n    b.p(\"Bucket\", () => input.Bucket, \"{Bucket}\", false);\n    const query = map({\n        [_log]: [, \"\"],\n    });\n    let body;\n    b.m(\"GET\").h(headers).q(query).b(body);\n    return b.build();\n};\nexport const se_GetBucketMetadataTableConfigurationCommand = async (input, context) => {\n    const b = rb(input, context);\n    const headers = map({}, isSerializableHeaderValue, {\n        [_xaebo]: input[_EBO],\n    });\n    b.bp(\"/\");\n    b.p(\"Bucket\", () => input.Bucket, \"{Bucket}\", false);\n    const query = map({\n        [_mT]: [, \"\"],\n    });\n    let body;\n    b.m(\"GET\").h(headers).q(query).b(body);\n    return b.build();\n};\nexport const se_GetBucketMetricsConfigurationCommand = async (input, context) => {\n    const b = rb(input, context);\n    const headers = map({}, isSerializableHeaderValue, {\n        [_xaebo]: input[_EBO],\n    });\n    b.bp(\"/\");\n    b.p(\"Bucket\", () => input.Bucket, \"{Bucket}\", false);\n    const query = map({\n        [_m]: [, \"\"],\n        [_xi]: [, \"GetBucketMetricsConfiguration\"],\n        [_i]: [, __expectNonNull(input[_I], `Id`)],\n    });\n    let body;\n    b.m(\"GET\").h(headers).q(query).b(body);\n    return b.build();\n};\nexport const se_GetBucketNotificationConfigurationCommand = async (input, context) => {\n    const b = rb(input, context);\n    const headers = map({}, isSerializableHeaderValue, {\n        [_xaebo]: input[_EBO],\n    });\n    b.bp(\"/\");\n    b.p(\"Bucket\", () => input.Bucket, \"{Bucket}\", false);\n    const query = map({\n        [_n]: [, \"\"],\n    });\n    let body;\n    b.m(\"GET\").h(headers).q(query).b(body);\n    return b.build();\n};\nexport const se_GetBucketOwnershipControlsCommand = async (input, context) => {\n    const b = rb(input, context);\n    const headers = map({}, isSerializableHeaderValue, {\n        [_xaebo]: input[_EBO],\n    });\n    b.bp(\"/\");\n    b.p(\"Bucket\", () => input.Bucket, \"{Bucket}\", false);\n    const query = map({\n        [_oC]: [, \"\"],\n    });\n    let body;\n    b.m(\"GET\").h(headers).q(query).b(body);\n    return b.build();\n};\nexport const se_GetBucketPolicyCommand = async (input, context) => {\n    const b = rb(input, context);\n    const headers = map({}, isSerializableHeaderValue, {\n        [_xaebo]: input[_EBO],\n    });\n    b.bp(\"/\");\n    b.p(\"Bucket\", () => input.Bucket, \"{Bucket}\", false);\n    const query = map({\n        [_p]: [, \"\"],\n    });\n    let body;\n    b.m(\"GET\").h(headers).q(query).b(body);\n    return b.build();\n};\nexport const se_GetBucketPolicyStatusCommand = async (input, context) => {\n    const b = rb(input, context);\n    const headers = map({}, isSerializableHeaderValue, {\n        [_xaebo]: input[_EBO],\n    });\n    b.bp(\"/\");\n    b.p(\"Bucket\", () => input.Bucket, \"{Bucket}\", false);\n    const query = map({\n        [_pS]: [, \"\"],\n    });\n    let body;\n    b.m(\"GET\").h(headers).q(query).b(body);\n    return b.build();\n};\nexport const se_GetBucketReplicationCommand = async (input, context) => {\n    const b = rb(input, context);\n    const headers = map({}, isSerializableHeaderValue, {\n        [_xaebo]: input[_EBO],\n    });\n    b.bp(\"/\");\n    b.p(\"Bucket\", () => input.Bucket, \"{Bucket}\", false);\n    const query = map({\n        [_r]: [, \"\"],\n    });\n    let body;\n    b.m(\"GET\").h(headers).q(query).b(body);\n    return b.build();\n};\nexport const se_GetBucketRequestPaymentCommand = async (input, context) => {\n    const b = rb(input, context);\n    const headers = map({}, isSerializableHeaderValue, {\n        [_xaebo]: input[_EBO],\n    });\n    b.bp(\"/\");\n    b.p(\"Bucket\", () => input.Bucket, \"{Bucket}\", false);\n    const query = map({\n        [_rP]: [, \"\"],\n    });\n    let body;\n    b.m(\"GET\").h(headers).q(query).b(body);\n    return b.build();\n};\nexport const se_GetBucketTaggingCommand = async (input, context) => {\n    const b = rb(input, context);\n    const headers = map({}, isSerializableHeaderValue, {\n        [_xaebo]: input[_EBO],\n    });\n    b.bp(\"/\");\n    b.p(\"Bucket\", () => input.Bucket, \"{Bucket}\", false);\n    const query = map({\n        [_t]: [, \"\"],\n    });\n    let body;\n    b.m(\"GET\").h(headers).q(query).b(body);\n    return b.build();\n};\nexport const se_GetBucketVersioningCommand = async (input, context) => {\n    const b = rb(input, context);\n    const headers = map({}, isSerializableHeaderValue, {\n        [_xaebo]: input[_EBO],\n    });\n    b.bp(\"/\");\n    b.p(\"Bucket\", () => input.Bucket, \"{Bucket}\", false);\n    const query = map({\n        [_v]: [, \"\"],\n    });\n    let body;\n    b.m(\"GET\").h(headers).q(query).b(body);\n    return b.build();\n};\nexport const se_GetBucketWebsiteCommand = async (input, context) => {\n    const b = rb(input, context);\n    const headers = map({}, isSerializableHeaderValue, {\n        [_xaebo]: input[_EBO],\n    });\n    b.bp(\"/\");\n    b.p(\"Bucket\", () => input.Bucket, \"{Bucket}\", false);\n    const query = map({\n        [_w]: [, \"\"],\n    });\n    let body;\n    b.m(\"GET\").h(headers).q(query).b(body);\n    return b.build();\n};\nexport const se_GetObjectCommand = async (input, context) => {\n    const b = rb(input, context);\n    const headers = map({}, isSerializableHeaderValue, {\n        [_im]: input[_IM],\n        [_ims]: [() => isSerializableHeaderValue(input[_IMSf]), () => __dateToUtcString(input[_IMSf]).toString()],\n        [_inm]: input[_INM],\n        [_ius]: [() => isSerializableHeaderValue(input[_IUS]), () => __dateToUtcString(input[_IUS]).toString()],\n        [_ra]: input[_R],\n        [_xasseca]: input[_SSECA],\n        [_xasseck]: input[_SSECK],\n        [_xasseckm]: input[_SSECKMD],\n        [_xarp]: input[_RP],\n        [_xaebo]: input[_EBO],\n        [_xacm]: input[_CM],\n    });\n    b.bp(\"/{Key+}\");\n    b.p(\"Bucket\", () => input.Bucket, \"{Bucket}\", false);\n    b.p(\"Key\", () => input.Key, \"{Key+}\", true);\n    const query = map({\n        [_xi]: [, \"GetObject\"],\n        [_rcc]: [, input[_RCC]],\n        [_rcd]: [, input[_RCD]],\n        [_rce]: [, input[_RCE]],\n        [_rcl]: [, input[_RCL]],\n        [_rct]: [, input[_RCT]],\n        [_re]: [() => input.ResponseExpires !== void 0, () => __dateToUtcString(input[_RE]).toString()],\n        [_vI]: [, input[_VI]],\n        [_pN]: [() => input.PartNumber !== void 0, () => input[_PN].toString()],\n    });\n    let body;\n    b.m(\"GET\").h(headers).q(query).b(body);\n    return b.build();\n};\nexport const se_GetObjectAclCommand = async (input, context) => {\n    const b = rb(input, context);\n    const headers = map({}, isSerializableHeaderValue, {\n        [_xarp]: input[_RP],\n        [_xaebo]: input[_EBO],\n    });\n    b.bp(\"/{Key+}\");\n    b.p(\"Bucket\", () => input.Bucket, \"{Bucket}\", false);\n    b.p(\"Key\", () => input.Key, \"{Key+}\", true);\n    const query = map({\n        [_acl]: [, \"\"],\n        [_vI]: [, input[_VI]],\n    });\n    let body;\n    b.m(\"GET\").h(headers).q(query).b(body);\n    return b.build();\n};\nexport const se_GetObjectAttributesCommand = async (input, context) => {\n    const b = rb(input, context);\n    const headers = map({}, isSerializableHeaderValue, {\n        [_xamp]: [() => isSerializableHeaderValue(input[_MP]), () => input[_MP].toString()],\n        [_xapnm]: input[_PNM],\n        [_xasseca]: input[_SSECA],\n        [_xasseck]: input[_SSECK],\n        [_xasseckm]: input[_SSECKMD],\n        [_xarp]: input[_RP],\n        [_xaebo]: input[_EBO],\n        [_xaoa]: [() => isSerializableHeaderValue(input[_OA]), () => (input[_OA] || []).map(__quoteHeader).join(\", \")],\n    });\n    b.bp(\"/{Key+}\");\n    b.p(\"Bucket\", () => input.Bucket, \"{Bucket}\", false);\n    b.p(\"Key\", () => input.Key, \"{Key+}\", true);\n    const query = map({\n        [_at]: [, \"\"],\n        [_vI]: [, input[_VI]],\n    });\n    let body;\n    b.m(\"GET\").h(headers).q(query).b(body);\n    return b.build();\n};\nexport const se_GetObjectLegalHoldCommand = async (input, context) => {\n    const b = rb(input, context);\n    const headers = map({}, isSerializableHeaderValue, {\n        [_xarp]: input[_RP],\n        [_xaebo]: input[_EBO],\n    });\n    b.bp(\"/{Key+}\");\n    b.p(\"Bucket\", () => input.Bucket, \"{Bucket}\", false);\n    b.p(\"Key\", () => input.Key, \"{Key+}\", true);\n    const query = map({\n        [_lh]: [, \"\"],\n        [_vI]: [, input[_VI]],\n    });\n    let body;\n    b.m(\"GET\").h(headers).q(query).b(body);\n    return b.build();\n};\nexport const se_GetObjectLockConfigurationCommand = async (input, context) => {\n    const b = rb(input, context);\n    const headers = map({}, isSerializableHeaderValue, {\n        [_xaebo]: input[_EBO],\n    });\n    b.bp(\"/\");\n    b.p(\"Bucket\", () => input.Bucket, \"{Bucket}\", false);\n    const query = map({\n        [_ol]: [, \"\"],\n    });\n    let body;\n    b.m(\"GET\").h(headers).q(query).b(body);\n    return b.build();\n};\nexport const se_GetObjectRetentionCommand = async (input, context) => {\n    const b = rb(input, context);\n    const headers = map({}, isSerializableHeaderValue, {\n        [_xarp]: input[_RP],\n        [_xaebo]: input[_EBO],\n    });\n    b.bp(\"/{Key+}\");\n    b.p(\"Bucket\", () => input.Bucket, \"{Bucket}\", false);\n    b.p(\"Key\", () => input.Key, \"{Key+}\", true);\n    const query = map({\n        [_ret]: [, \"\"],\n        [_vI]: [, input[_VI]],\n    });\n    let body;\n    b.m(\"GET\").h(headers).q(query).b(body);\n    return b.build();\n};\nexport const se_GetObjectTaggingCommand = async (input, context) => {\n    const b = rb(input, context);\n    const headers = map({}, isSerializableHeaderValue, {\n        [_xaebo]: input[_EBO],\n        [_xarp]: input[_RP],\n    });\n    b.bp(\"/{Key+}\");\n    b.p(\"Bucket\", () => input.Bucket, \"{Bucket}\", false);\n    b.p(\"Key\", () => input.Key, \"{Key+}\", true);\n    const query = map({\n        [_t]: [, \"\"],\n        [_vI]: [, input[_VI]],\n    });\n    let body;\n    b.m(\"GET\").h(headers).q(query).b(body);\n    return b.build();\n};\nexport const se_GetObjectTorrentCommand = async (input, context) => {\n    const b = rb(input, context);\n    const headers = map({}, isSerializableHeaderValue, {\n        [_xarp]: input[_RP],\n        [_xaebo]: input[_EBO],\n    });\n    b.bp(\"/{Key+}\");\n    b.p(\"Bucket\", () => input.Bucket, \"{Bucket}\", false);\n    b.p(\"Key\", () => input.Key, \"{Key+}\", true);\n    const query = map({\n        [_to]: [, \"\"],\n    });\n    let body;\n    b.m(\"GET\").h(headers).q(query).b(body);\n    return b.build();\n};\nexport const se_GetPublicAccessBlockCommand = async (input, context) => {\n    const b = rb(input, context);\n    const headers = map({}, isSerializableHeaderValue, {\n        [_xaebo]: input[_EBO],\n    });\n    b.bp(\"/\");\n    b.p(\"Bucket\", () => input.Bucket, \"{Bucket}\", false);\n    const query = map({\n        [_pAB]: [, \"\"],\n    });\n    let body;\n    b.m(\"GET\").h(headers).q(query).b(body);\n    return b.build();\n};\nexport const se_HeadBucketCommand = async (input, context) => {\n    const b = rb(input, context);\n    const headers = map({}, isSerializableHeaderValue, {\n        [_xaebo]: input[_EBO],\n    });\n    b.bp(\"/\");\n    b.p(\"Bucket\", () => input.Bucket, \"{Bucket}\", false);\n    let body;\n    b.m(\"HEAD\").h(headers).b(body);\n    return b.build();\n};\nexport const se_HeadObjectCommand = async (input, context) => {\n    const b = rb(input, context);\n    const headers = map({}, isSerializableHeaderValue, {\n        [_im]: input[_IM],\n        [_ims]: [() => isSerializableHeaderValue(input[_IMSf]), () => __dateToUtcString(input[_IMSf]).toString()],\n        [_inm]: input[_INM],\n        [_ius]: [() => isSerializableHeaderValue(input[_IUS]), () => __dateToUtcString(input[_IUS]).toString()],\n        [_ra]: input[_R],\n        [_xasseca]: input[_SSECA],\n        [_xasseck]: input[_SSECK],\n        [_xasseckm]: input[_SSECKMD],\n        [_xarp]: input[_RP],\n        [_xaebo]: input[_EBO],\n        [_xacm]: input[_CM],\n    });\n    b.bp(\"/{Key+}\");\n    b.p(\"Bucket\", () => input.Bucket, \"{Bucket}\", false);\n    b.p(\"Key\", () => input.Key, \"{Key+}\", true);\n    const query = map({\n        [_rcc]: [, input[_RCC]],\n        [_rcd]: [, input[_RCD]],\n        [_rce]: [, input[_RCE]],\n        [_rcl]: [, input[_RCL]],\n        [_rct]: [, input[_RCT]],\n        [_re]: [() => input.ResponseExpires !== void 0, () => __dateToUtcString(input[_RE]).toString()],\n        [_vI]: [, input[_VI]],\n        [_pN]: [() => input.PartNumber !== void 0, () => input[_PN].toString()],\n    });\n    let body;\n    b.m(\"HEAD\").h(headers).q(query).b(body);\n    return b.build();\n};\nexport const se_ListBucketAnalyticsConfigurationsCommand = async (input, context) => {\n    const b = rb(input, context);\n    const headers = map({}, isSerializableHeaderValue, {\n        [_xaebo]: input[_EBO],\n    });\n    b.bp(\"/\");\n    b.p(\"Bucket\", () => input.Bucket, \"{Bucket}\", false);\n    const query = map({\n        [_a]: [, \"\"],\n        [_xi]: [, \"ListBucketAnalyticsConfigurations\"],\n        [_ct_]: [, input[_CTon]],\n    });\n    let body;\n    b.m(\"GET\").h(headers).q(query).b(body);\n    return b.build();\n};\nexport const se_ListBucketIntelligentTieringConfigurationsCommand = async (input, context) => {\n    const b = rb(input, context);\n    const headers = {};\n    b.bp(\"/\");\n    b.p(\"Bucket\", () => input.Bucket, \"{Bucket}\", false);\n    const query = map({\n        [_it]: [, \"\"],\n        [_xi]: [, \"ListBucketIntelligentTieringConfigurations\"],\n        [_ct_]: [, input[_CTon]],\n    });\n    let body;\n    b.m(\"GET\").h(headers).q(query).b(body);\n    return b.build();\n};\nexport const se_ListBucketInventoryConfigurationsCommand = async (input, context) => {\n    const b = rb(input, context);\n    const headers = map({}, isSerializableHeaderValue, {\n        [_xaebo]: input[_EBO],\n    });\n    b.bp(\"/\");\n    b.p(\"Bucket\", () => input.Bucket, \"{Bucket}\", false);\n    const query = map({\n        [_in]: [, \"\"],\n        [_xi]: [, \"ListBucketInventoryConfigurations\"],\n        [_ct_]: [, input[_CTon]],\n    });\n    let body;\n    b.m(\"GET\").h(headers).q(query).b(body);\n    return b.build();\n};\nexport const se_ListBucketMetricsConfigurationsCommand = async (input, context) => {\n    const b = rb(input, context);\n    const headers = map({}, isSerializableHeaderValue, {\n        [_xaebo]: input[_EBO],\n    });\n    b.bp(\"/\");\n    b.p(\"Bucket\", () => input.Bucket, \"{Bucket}\", false);\n    const query = map({\n        [_m]: [, \"\"],\n        [_xi]: [, \"ListBucketMetricsConfigurations\"],\n        [_ct_]: [, input[_CTon]],\n    });\n    let body;\n    b.m(\"GET\").h(headers).q(query).b(body);\n    return b.build();\n};\nexport const se_ListBucketsCommand = async (input, context) => {\n    const b = rb(input, context);\n    const headers = {};\n    b.bp(\"/\");\n    const query = map({\n        [_xi]: [, \"ListBuckets\"],\n        [_mb]: [() => input.MaxBuckets !== void 0, () => input[_MB].toString()],\n        [_ct_]: [, input[_CTon]],\n        [_pr]: [, input[_P]],\n        [_br]: [, input[_BR]],\n    });\n    let body;\n    b.m(\"GET\").h(headers).q(query).b(body);\n    return b.build();\n};\nexport const se_ListDirectoryBucketsCommand = async (input, context) => {\n    const b = rb(input, context);\n    const headers = {};\n    b.bp(\"/\");\n    const query = map({\n        [_xi]: [, \"ListDirectoryBuckets\"],\n        [_ct_]: [, input[_CTon]],\n        [_mdb]: [() => input.MaxDirectoryBuckets !== void 0, () => input[_MDB].toString()],\n    });\n    let body;\n    b.m(\"GET\").h(headers).q(query).b(body);\n    return b.build();\n};\nexport const se_ListMultipartUploadsCommand = async (input, context) => {\n    const b = rb(input, context);\n    const headers = map({}, isSerializableHeaderValue, {\n        [_xaebo]: input[_EBO],\n        [_xarp]: input[_RP],\n    });\n    b.bp(\"/\");\n    b.p(\"Bucket\", () => input.Bucket, \"{Bucket}\", false);\n    const query = map({\n        [_u]: [, \"\"],\n        [_de]: [, input[_D]],\n        [_et]: [, input[_ET]],\n        [_km]: [, input[_KM]],\n        [_mu]: [() => input.MaxUploads !== void 0, () => input[_MU].toString()],\n        [_pr]: [, input[_P]],\n        [_uim]: [, input[_UIM]],\n    });\n    let body;\n    b.m(\"GET\").h(headers).q(query).b(body);\n    return b.build();\n};\nexport const se_ListObjectsCommand = async (input, context) => {\n    const b = rb(input, context);\n    const headers = map({}, isSerializableHeaderValue, {\n        [_xarp]: input[_RP],\n        [_xaebo]: input[_EBO],\n        [_xaooa]: [() => isSerializableHeaderValue(input[_OOA]), () => (input[_OOA] || []).map(__quoteHeader).join(\", \")],\n    });\n    b.bp(\"/\");\n    b.p(\"Bucket\", () => input.Bucket, \"{Bucket}\", false);\n    const query = map({\n        [_de]: [, input[_D]],\n        [_et]: [, input[_ET]],\n        [_ma]: [, input[_M]],\n        [_mk]: [() => input.MaxKeys !== void 0, () => input[_MK].toString()],\n        [_pr]: [, input[_P]],\n    });\n    let body;\n    b.m(\"GET\").h(headers).q(query).b(body);\n    return b.build();\n};\nexport const se_ListObjectsV2Command = async (input, context) => {\n    const b = rb(input, context);\n    const headers = map({}, isSerializableHeaderValue, {\n        [_xarp]: input[_RP],\n        [_xaebo]: input[_EBO],\n        [_xaooa]: [() => isSerializableHeaderValue(input[_OOA]), () => (input[_OOA] || []).map(__quoteHeader).join(\", \")],\n    });\n    b.bp(\"/\");\n    b.p(\"Bucket\", () => input.Bucket, \"{Bucket}\", false);\n    const query = map({\n        [_lt]: [, \"2\"],\n        [_de]: [, input[_D]],\n        [_et]: [, input[_ET]],\n        [_mk]: [() => input.MaxKeys !== void 0, () => input[_MK].toString()],\n        [_pr]: [, input[_P]],\n        [_ct_]: [, input[_CTon]],\n        [_fo]: [() => input.FetchOwner !== void 0, () => input[_FO].toString()],\n        [_sa]: [, input[_SA]],\n    });\n    let body;\n    b.m(\"GET\").h(headers).q(query).b(body);\n    return b.build();\n};\nexport const se_ListObjectVersionsCommand = async (input, context) => {\n    const b = rb(input, context);\n    const headers = map({}, isSerializableHeaderValue, {\n        [_xaebo]: input[_EBO],\n        [_xarp]: input[_RP],\n        [_xaooa]: [() => isSerializableHeaderValue(input[_OOA]), () => (input[_OOA] || []).map(__quoteHeader).join(\", \")],\n    });\n    b.bp(\"/\");\n    b.p(\"Bucket\", () => input.Bucket, \"{Bucket}\", false);\n    const query = map({\n        [_ver]: [, \"\"],\n        [_de]: [, input[_D]],\n        [_et]: [, input[_ET]],\n        [_km]: [, input[_KM]],\n        [_mk]: [() => input.MaxKeys !== void 0, () => input[_MK].toString()],\n        [_pr]: [, input[_P]],\n        [_vim]: [, input[_VIM]],\n    });\n    let body;\n    b.m(\"GET\").h(headers).q(query).b(body);\n    return b.build();\n};\nexport const se_ListPartsCommand = async (input, context) => {\n    const b = rb(input, context);\n    const headers = map({}, isSerializableHeaderValue, {\n        [_xarp]: input[_RP],\n        [_xaebo]: input[_EBO],\n        [_xasseca]: input[_SSECA],\n        [_xasseck]: input[_SSECK],\n        [_xasseckm]: input[_SSECKMD],\n    });\n    b.bp(\"/{Key+}\");\n    b.p(\"Bucket\", () => input.Bucket, \"{Bucket}\", false);\n    b.p(\"Key\", () => input.Key, \"{Key+}\", true);\n    const query = map({\n        [_xi]: [, \"ListParts\"],\n        [_mp]: [() => input.MaxParts !== void 0, () => input[_MP].toString()],\n        [_pnm]: [, input[_PNM]],\n        [_uI]: [, __expectNonNull(input[_UI], `UploadId`)],\n    });\n    let body;\n    b.m(\"GET\").h(headers).q(query).b(body);\n    return b.build();\n};\nexport const se_PutBucketAccelerateConfigurationCommand = async (input, context) => {\n    const b = rb(input, context);\n    const headers = map({}, isSerializableHeaderValue, {\n        \"content-type\": \"application/xml\",\n        [_xaebo]: input[_EBO],\n        [_xasca]: input[_CA],\n    });\n    b.bp(\"/\");\n    b.p(\"Bucket\", () => input.Bucket, \"{Bucket}\", false);\n    const query = map({\n        [_ac]: [, \"\"],\n    });\n    let body;\n    let contents;\n    if (input.AccelerateConfiguration !== undefined) {\n        contents = se_AccelerateConfiguration(input.AccelerateConfiguration, context);\n        body = _ve;\n        contents.a(\"xmlns\", \"http://s3.amazonaws.com/doc/2006-03-01/\");\n        body += contents.toString();\n    }\n    b.m(\"PUT\").h(headers).q(query).b(body);\n    return b.build();\n};\nexport const se_PutBucketAclCommand = async (input, context) => {\n    const b = rb(input, context);\n    const headers = map({}, isSerializableHeaderValue, {\n        \"content-type\": \"application/xml\",\n        [_xaa]: input[_ACL],\n        [_cm]: input[_CMD],\n        [_xasca]: input[_CA],\n        [_xagfc]: input[_GFC],\n        [_xagr]: input[_GR],\n        [_xagra]: input[_GRACP],\n        [_xagw]: input[_GW],\n        [_xagwa]: input[_GWACP],\n        [_xaebo]: input[_EBO],\n    });\n    b.bp(\"/\");\n    b.p(\"Bucket\", () => input.Bucket, \"{Bucket}\", false);\n    const query = map({\n        [_acl]: [, \"\"],\n    });\n    let body;\n    let contents;\n    if (input.AccessControlPolicy !== undefined) {\n        contents = se_AccessControlPolicy(input.AccessControlPolicy, context);\n        body = _ve;\n        contents.a(\"xmlns\", \"http://s3.amazonaws.com/doc/2006-03-01/\");\n        body += contents.toString();\n    }\n    b.m(\"PUT\").h(headers).q(query).b(body);\n    return b.build();\n};\nexport const se_PutBucketAnalyticsConfigurationCommand = async (input, context) => {\n    const b = rb(input, context);\n    const headers = map({}, isSerializableHeaderValue, {\n        \"content-type\": \"application/xml\",\n        [_xaebo]: input[_EBO],\n    });\n    b.bp(\"/\");\n    b.p(\"Bucket\", () => input.Bucket, \"{Bucket}\", false);\n    const query = map({\n        [_a]: [, \"\"],\n        [_i]: [, __expectNonNull(input[_I], `Id`)],\n    });\n    let body;\n    let contents;\n    if (input.AnalyticsConfiguration !== undefined) {\n        contents = se_AnalyticsConfiguration(input.AnalyticsConfiguration, context);\n        body = _ve;\n        contents.a(\"xmlns\", \"http://s3.amazonaws.com/doc/2006-03-01/\");\n        body += contents.toString();\n    }\n    b.m(\"PUT\").h(headers).q(query).b(body);\n    return b.build();\n};\nexport const se_PutBucketCorsCommand = async (input, context) => {\n    const b = rb(input, context);\n    const headers = map({}, isSerializableHeaderValue, {\n        \"content-type\": \"application/xml\",\n        [_cm]: input[_CMD],\n        [_xasca]: input[_CA],\n        [_xaebo]: input[_EBO],\n    });\n    b.bp(\"/\");\n    b.p(\"Bucket\", () => input.Bucket, \"{Bucket}\", false);\n    const query = map({\n        [_c]: [, \"\"],\n    });\n    let body;\n    let contents;\n    if (input.CORSConfiguration !== undefined) {\n        contents = se_CORSConfiguration(input.CORSConfiguration, context);\n        body = _ve;\n        contents.a(\"xmlns\", \"http://s3.amazonaws.com/doc/2006-03-01/\");\n        body += contents.toString();\n    }\n    b.m(\"PUT\").h(headers).q(query).b(body);\n    return b.build();\n};\nexport const se_PutBucketEncryptionCommand = async (input, context) => {\n    const b = rb(input, context);\n    const headers = map({}, isSerializableHeaderValue, {\n        \"content-type\": \"application/xml\",\n        [_cm]: input[_CMD],\n        [_xasca]: input[_CA],\n        [_xaebo]: input[_EBO],\n    });\n    b.bp(\"/\");\n    b.p(\"Bucket\", () => input.Bucket, \"{Bucket}\", false);\n    const query = map({\n        [_en]: [, \"\"],\n    });\n    let body;\n    let contents;\n    if (input.ServerSideEncryptionConfiguration !== undefined) {\n        contents = se_ServerSideEncryptionConfiguration(input.ServerSideEncryptionConfiguration, context);\n        body = _ve;\n        contents.a(\"xmlns\", \"http://s3.amazonaws.com/doc/2006-03-01/\");\n        body += contents.toString();\n    }\n    b.m(\"PUT\").h(headers).q(query).b(body);\n    return b.build();\n};\nexport const se_PutBucketIntelligentTieringConfigurationCommand = async (input, context) => {\n    const b = rb(input, context);\n    const headers = {\n        \"content-type\": \"application/xml\",\n    };\n    b.bp(\"/\");\n    b.p(\"Bucket\", () => input.Bucket, \"{Bucket}\", false);\n    const query = map({\n        [_it]: [, \"\"],\n        [_i]: [, __expectNonNull(input[_I], `Id`)],\n    });\n    let body;\n    let contents;\n    if (input.IntelligentTieringConfiguration !== undefined) {\n        contents = se_IntelligentTieringConfiguration(input.IntelligentTieringConfiguration, context);\n        body = _ve;\n        contents.a(\"xmlns\", \"http://s3.amazonaws.com/doc/2006-03-01/\");\n        body += contents.toString();\n    }\n    b.m(\"PUT\").h(headers).q(query).b(body);\n    return b.build();\n};\nexport const se_PutBucketInventoryConfigurationCommand = async (input, context) => {\n    const b = rb(input, context);\n    const headers = map({}, isSerializableHeaderValue, {\n        \"content-type\": \"application/xml\",\n        [_xaebo]: input[_EBO],\n    });\n    b.bp(\"/\");\n    b.p(\"Bucket\", () => input.Bucket, \"{Bucket}\", false);\n    const query = map({\n        [_in]: [, \"\"],\n        [_i]: [, __expectNonNull(input[_I], `Id`)],\n    });\n    let body;\n    let contents;\n    if (input.InventoryConfiguration !== undefined) {\n        contents = se_InventoryConfiguration(input.InventoryConfiguration, context);\n        body = _ve;\n        contents.a(\"xmlns\", \"http://s3.amazonaws.com/doc/2006-03-01/\");\n        body += contents.toString();\n    }\n    b.m(\"PUT\").h(headers).q(query).b(body);\n    return b.build();\n};\nexport const se_PutBucketLifecycleConfigurationCommand = async (input, context) => {\n    const b = rb(input, context);\n    const headers = map({}, isSerializableHeaderValue, {\n        \"content-type\": \"application/xml\",\n        [_xasca]: input[_CA],\n        [_xaebo]: input[_EBO],\n        [_xatdmos]: input[_TDMOS],\n    });\n    b.bp(\"/\");\n    b.p(\"Bucket\", () => input.Bucket, \"{Bucket}\", false);\n    const query = map({\n        [_l]: [, \"\"],\n    });\n    let body;\n    let contents;\n    if (input.LifecycleConfiguration !== undefined) {\n        contents = se_BucketLifecycleConfiguration(input.LifecycleConfiguration, context);\n        contents = contents.n(\"LifecycleConfiguration\");\n        body = _ve;\n        contents.a(\"xmlns\", \"http://s3.amazonaws.com/doc/2006-03-01/\");\n        body += contents.toString();\n    }\n    b.m(\"PUT\").h(headers).q(query).b(body);\n    return b.build();\n};\nexport const se_PutBucketLoggingCommand = async (input, context) => {\n    const b = rb(input, context);\n    const headers = map({}, isSerializableHeaderValue, {\n        \"content-type\": \"application/xml\",\n        [_cm]: input[_CMD],\n        [_xasca]: input[_CA],\n        [_xaebo]: input[_EBO],\n    });\n    b.bp(\"/\");\n    b.p(\"Bucket\", () => input.Bucket, \"{Bucket}\", false);\n    const query = map({\n        [_log]: [, \"\"],\n    });\n    let body;\n    let contents;\n    if (input.BucketLoggingStatus !== undefined) {\n        contents = se_BucketLoggingStatus(input.BucketLoggingStatus, context);\n        body = _ve;\n        contents.a(\"xmlns\", \"http://s3.amazonaws.com/doc/2006-03-01/\");\n        body += contents.toString();\n    }\n    b.m(\"PUT\").h(headers).q(query).b(body);\n    return b.build();\n};\nexport const se_PutBucketMetricsConfigurationCommand = async (input, context) => {\n    const b = rb(input, context);\n    const headers = map({}, isSerializableHeaderValue, {\n        \"content-type\": \"application/xml\",\n        [_xaebo]: input[_EBO],\n    });\n    b.bp(\"/\");\n    b.p(\"Bucket\", () => input.Bucket, \"{Bucket}\", false);\n    const query = map({\n        [_m]: [, \"\"],\n        [_i]: [, __expectNonNull(input[_I], `Id`)],\n    });\n    let body;\n    let contents;\n    if (input.MetricsConfiguration !== undefined) {\n        contents = se_MetricsConfiguration(input.MetricsConfiguration, context);\n        body = _ve;\n        contents.a(\"xmlns\", \"http://s3.amazonaws.com/doc/2006-03-01/\");\n        body += contents.toString();\n    }\n    b.m(\"PUT\").h(headers).q(query).b(body);\n    return b.build();\n};\nexport const se_PutBucketNotificationConfigurationCommand = async (input, context) => {\n    const b = rb(input, context);\n    const headers = map({}, isSerializableHeaderValue, {\n        \"content-type\": \"application/xml\",\n        [_xaebo]: input[_EBO],\n        [_xasdv]: [() => isSerializableHeaderValue(input[_SDV]), () => input[_SDV].toString()],\n    });\n    b.bp(\"/\");\n    b.p(\"Bucket\", () => input.Bucket, \"{Bucket}\", false);\n    const query = map({\n        [_n]: [, \"\"],\n    });\n    let body;\n    let contents;\n    if (input.NotificationConfiguration !== undefined) {\n        contents = se_NotificationConfiguration(input.NotificationConfiguration, context);\n        body = _ve;\n        contents.a(\"xmlns\", \"http://s3.amazonaws.com/doc/2006-03-01/\");\n        body += contents.toString();\n    }\n    b.m(\"PUT\").h(headers).q(query).b(body);\n    return b.build();\n};\nexport const se_PutBucketOwnershipControlsCommand = async (input, context) => {\n    const b = rb(input, context);\n    const headers = map({}, isSerializableHeaderValue, {\n        \"content-type\": \"application/xml\",\n        [_cm]: input[_CMD],\n        [_xaebo]: input[_EBO],\n    });\n    b.bp(\"/\");\n    b.p(\"Bucket\", () => input.Bucket, \"{Bucket}\", false);\n    const query = map({\n        [_oC]: [, \"\"],\n    });\n    let body;\n    let contents;\n    if (input.OwnershipControls !== undefined) {\n        contents = se_OwnershipControls(input.OwnershipControls, context);\n        body = _ve;\n        contents.a(\"xmlns\", \"http://s3.amazonaws.com/doc/2006-03-01/\");\n        body += contents.toString();\n    }\n    b.m(\"PUT\").h(headers).q(query).b(body);\n    return b.build();\n};\nexport const se_PutBucketPolicyCommand = async (input, context) => {\n    const b = rb(input, context);\n    const headers = map({}, isSerializableHeaderValue, {\n        \"content-type\": \"text/plain\",\n        [_cm]: input[_CMD],\n        [_xasca]: input[_CA],\n        [_xacrsba]: [() => isSerializableHeaderValue(input[_CRSBA]), () => input[_CRSBA].toString()],\n        [_xaebo]: input[_EBO],\n    });\n    b.bp(\"/\");\n    b.p(\"Bucket\", () => input.Bucket, \"{Bucket}\", false);\n    const query = map({\n        [_p]: [, \"\"],\n    });\n    let body;\n    let contents;\n    if (input.Policy !== undefined) {\n        contents = input.Policy;\n        body = contents;\n    }\n    b.m(\"PUT\").h(headers).q(query).b(body);\n    return b.build();\n};\nexport const se_PutBucketReplicationCommand = async (input, context) => {\n    const b = rb(input, context);\n    const headers = map({}, isSerializableHeaderValue, {\n        \"content-type\": \"application/xml\",\n        [_cm]: input[_CMD],\n        [_xasca]: input[_CA],\n        [_xabolt]: input[_To],\n        [_xaebo]: input[_EBO],\n    });\n    b.bp(\"/\");\n    b.p(\"Bucket\", () => input.Bucket, \"{Bucket}\", false);\n    const query = map({\n        [_r]: [, \"\"],\n    });\n    let body;\n    let contents;\n    if (input.ReplicationConfiguration !== undefined) {\n        contents = se_ReplicationConfiguration(input.ReplicationConfiguration, context);\n        body = _ve;\n        contents.a(\"xmlns\", \"http://s3.amazonaws.com/doc/2006-03-01/\");\n        body += contents.toString();\n    }\n    b.m(\"PUT\").h(headers).q(query).b(body);\n    return b.build();\n};\nexport const se_PutBucketRequestPaymentCommand = async (input, context) => {\n    const b = rb(input, context);\n    const headers = map({}, isSerializableHeaderValue, {\n        \"content-type\": \"application/xml\",\n        [_cm]: input[_CMD],\n        [_xasca]: input[_CA],\n        [_xaebo]: input[_EBO],\n    });\n    b.bp(\"/\");\n    b.p(\"Bucket\", () => input.Bucket, \"{Bucket}\", false);\n    const query = map({\n        [_rP]: [, \"\"],\n    });\n    let body;\n    let contents;\n    if (input.RequestPaymentConfiguration !== undefined) {\n        contents = se_RequestPaymentConfiguration(input.RequestPaymentConfiguration, context);\n        body = _ve;\n        contents.a(\"xmlns\", \"http://s3.amazonaws.com/doc/2006-03-01/\");\n        body += contents.toString();\n    }\n    b.m(\"PUT\").h(headers).q(query).b(body);\n    return b.build();\n};\nexport const se_PutBucketTaggingCommand = async (input, context) => {\n    const b = rb(input, context);\n    const headers = map({}, isSerializableHeaderValue, {\n        \"content-type\": \"application/xml\",\n        [_cm]: input[_CMD],\n        [_xasca]: input[_CA],\n        [_xaebo]: input[_EBO],\n    });\n    b.bp(\"/\");\n    b.p(\"Bucket\", () => input.Bucket, \"{Bucket}\", false);\n    const query = map({\n        [_t]: [, \"\"],\n    });\n    let body;\n    let contents;\n    if (input.Tagging !== undefined) {\n        contents = se_Tagging(input.Tagging, context);\n        body = _ve;\n        contents.a(\"xmlns\", \"http://s3.amazonaws.com/doc/2006-03-01/\");\n        body += contents.toString();\n    }\n    b.m(\"PUT\").h(headers).q(query).b(body);\n    return b.build();\n};\nexport const se_PutBucketVersioningCommand = async (input, context) => {\n    const b = rb(input, context);\n    const headers = map({}, isSerializableHeaderValue, {\n        \"content-type\": \"application/xml\",\n        [_cm]: input[_CMD],\n        [_xasca]: input[_CA],\n        [_xam]: input[_MFA],\n        [_xaebo]: input[_EBO],\n    });\n    b.bp(\"/\");\n    b.p(\"Bucket\", () => input.Bucket, \"{Bucket}\", false);\n    const query = map({\n        [_v]: [, \"\"],\n    });\n    let body;\n    let contents;\n    if (input.VersioningConfiguration !== undefined) {\n        contents = se_VersioningConfiguration(input.VersioningConfiguration, context);\n        body = _ve;\n        contents.a(\"xmlns\", \"http://s3.amazonaws.com/doc/2006-03-01/\");\n        body += contents.toString();\n    }\n    b.m(\"PUT\").h(headers).q(query).b(body);\n    return b.build();\n};\nexport const se_PutBucketWebsiteCommand = async (input, context) => {\n    const b = rb(input, context);\n    const headers = map({}, isSerializableHeaderValue, {\n        \"content-type\": \"application/xml\",\n        [_cm]: input[_CMD],\n        [_xasca]: input[_CA],\n        [_xaebo]: input[_EBO],\n    });\n    b.bp(\"/\");\n    b.p(\"Bucket\", () => input.Bucket, \"{Bucket}\", false);\n    const query = map({\n        [_w]: [, \"\"],\n    });\n    let body;\n    let contents;\n    if (input.WebsiteConfiguration !== undefined) {\n        contents = se_WebsiteConfiguration(input.WebsiteConfiguration, context);\n        body = _ve;\n        contents.a(\"xmlns\", \"http://s3.amazonaws.com/doc/2006-03-01/\");\n        body += contents.toString();\n    }\n    b.m(\"PUT\").h(headers).q(query).b(body);\n    return b.build();\n};\nexport const se_PutObjectCommand = async (input, context) => {\n    const b = rb(input, context);\n    const headers = map({}, isSerializableHeaderValue, {\n        [_ct]: input[_CTo] || \"application/octet-stream\",\n        [_xaa]: input[_ACL],\n        [_cc]: input[_CC],\n        [_cd]: input[_CD],\n        [_ce]: input[_CE],\n        [_cl]: input[_CL],\n        [_cl_]: [() => isSerializableHeaderValue(input[_CLo]), () => input[_CLo].toString()],\n        [_cm]: input[_CMD],\n        [_xasca]: input[_CA],\n        [_xacc]: input[_CCRC],\n        [_xacc_]: input[_CCRCC],\n        [_xacc__]: input[_CCRCNVME],\n        [_xacs]: input[_CSHA],\n        [_xacs_]: input[_CSHAh],\n        [_e]: [() => isSerializableHeaderValue(input[_E]), () => __dateToUtcString(input[_E]).toString()],\n        [_im]: input[_IM],\n        [_inm]: input[_INM],\n        [_xagfc]: input[_GFC],\n        [_xagr]: input[_GR],\n        [_xagra]: input[_GRACP],\n        [_xagwa]: input[_GWACP],\n        [_xawob]: [() => isSerializableHeaderValue(input[_WOB]), () => input[_WOB].toString()],\n        [_xasse]: input[_SSE],\n        [_xasc]: input[_SC],\n        [_xawrl]: input[_WRL],\n        [_xasseca]: input[_SSECA],\n        [_xasseck]: input[_SSECK],\n        [_xasseckm]: input[_SSECKMD],\n        [_xasseakki]: input[_SSEKMSKI],\n        [_xassec]: input[_SSEKMSEC],\n        [_xassebke]: [() => isSerializableHeaderValue(input[_BKE]), () => input[_BKE].toString()],\n        [_xarp]: input[_RP],\n        [_xat]: input[_T],\n        [_xaolm]: input[_OLM],\n        [_xaolrud]: [() => isSerializableHeaderValue(input[_OLRUD]), () => __serializeDateTime(input[_OLRUD]).toString()],\n        [_xaollh]: input[_OLLHS],\n        [_xaebo]: input[_EBO],\n        ...(input.Metadata !== undefined &&\n            Object.keys(input.Metadata).reduce((acc, suffix) => {\n                acc[`x-amz-meta-${suffix.toLowerCase()}`] = input.Metadata[suffix];\n                return acc;\n            }, {})),\n    });\n    b.bp(\"/{Key+}\");\n    b.p(\"Bucket\", () => input.Bucket, \"{Bucket}\", false);\n    b.p(\"Key\", () => input.Key, \"{Key+}\", true);\n    const query = map({\n        [_xi]: [, \"PutObject\"],\n    });\n    let body;\n    let contents;\n    if (input.Body !== undefined) {\n        contents = input.Body;\n        body = contents;\n    }\n    b.m(\"PUT\").h(headers).q(query).b(body);\n    return b.build();\n};\nexport const se_PutObjectAclCommand = async (input, context) => {\n    const b = rb(input, context);\n    const headers = map({}, isSerializableHeaderValue, {\n        \"content-type\": \"application/xml\",\n        [_xaa]: input[_ACL],\n        [_cm]: input[_CMD],\n        [_xasca]: input[_CA],\n        [_xagfc]: input[_GFC],\n        [_xagr]: input[_GR],\n        [_xagra]: input[_GRACP],\n        [_xagw]: input[_GW],\n        [_xagwa]: input[_GWACP],\n        [_xarp]: input[_RP],\n        [_xaebo]: input[_EBO],\n    });\n    b.bp(\"/{Key+}\");\n    b.p(\"Bucket\", () => input.Bucket, \"{Bucket}\", false);\n    b.p(\"Key\", () => input.Key, \"{Key+}\", true);\n    const query = map({\n        [_acl]: [, \"\"],\n        [_vI]: [, input[_VI]],\n    });\n    let body;\n    let contents;\n    if (input.AccessControlPolicy !== undefined) {\n        contents = se_AccessControlPolicy(input.AccessControlPolicy, context);\n        body = _ve;\n        contents.a(\"xmlns\", \"http://s3.amazonaws.com/doc/2006-03-01/\");\n        body += contents.toString();\n    }\n    b.m(\"PUT\").h(headers).q(query).b(body);\n    return b.build();\n};\nexport const se_PutObjectLegalHoldCommand = async (input, context) => {\n    const b = rb(input, context);\n    const headers = map({}, isSerializableHeaderValue, {\n        \"content-type\": \"application/xml\",\n        [_xarp]: input[_RP],\n        [_cm]: input[_CMD],\n        [_xasca]: input[_CA],\n        [_xaebo]: input[_EBO],\n    });\n    b.bp(\"/{Key+}\");\n    b.p(\"Bucket\", () => input.Bucket, \"{Bucket}\", false);\n    b.p(\"Key\", () => input.Key, \"{Key+}\", true);\n    const query = map({\n        [_lh]: [, \"\"],\n        [_vI]: [, input[_VI]],\n    });\n    let body;\n    let contents;\n    if (input.LegalHold !== undefined) {\n        contents = se_ObjectLockLegalHold(input.LegalHold, context);\n        contents = contents.n(\"LegalHold\");\n        body = _ve;\n        contents.a(\"xmlns\", \"http://s3.amazonaws.com/doc/2006-03-01/\");\n        body += contents.toString();\n    }\n    b.m(\"PUT\").h(headers).q(query).b(body);\n    return b.build();\n};\nexport const se_PutObjectLockConfigurationCommand = async (input, context) => {\n    const b = rb(input, context);\n    const headers = map({}, isSerializableHeaderValue, {\n        \"content-type\": \"application/xml\",\n        [_xarp]: input[_RP],\n        [_xabolt]: input[_To],\n        [_cm]: input[_CMD],\n        [_xasca]: input[_CA],\n        [_xaebo]: input[_EBO],\n    });\n    b.bp(\"/\");\n    b.p(\"Bucket\", () => input.Bucket, \"{Bucket}\", false);\n    const query = map({\n        [_ol]: [, \"\"],\n    });\n    let body;\n    let contents;\n    if (input.ObjectLockConfiguration !== undefined) {\n        contents = se_ObjectLockConfiguration(input.ObjectLockConfiguration, context);\n        body = _ve;\n        contents.a(\"xmlns\", \"http://s3.amazonaws.com/doc/2006-03-01/\");\n        body += contents.toString();\n    }\n    b.m(\"PUT\").h(headers).q(query).b(body);\n    return b.build();\n};\nexport const se_PutObjectRetentionCommand = async (input, context) => {\n    const b = rb(input, context);\n    const headers = map({}, isSerializableHeaderValue, {\n        \"content-type\": \"application/xml\",\n        [_xarp]: input[_RP],\n        [_xabgr]: [() => isSerializableHeaderValue(input[_BGR]), () => input[_BGR].toString()],\n        [_cm]: input[_CMD],\n        [_xasca]: input[_CA],\n        [_xaebo]: input[_EBO],\n    });\n    b.bp(\"/{Key+}\");\n    b.p(\"Bucket\", () => input.Bucket, \"{Bucket}\", false);\n    b.p(\"Key\", () => input.Key, \"{Key+}\", true);\n    const query = map({\n        [_ret]: [, \"\"],\n        [_vI]: [, input[_VI]],\n    });\n    let body;\n    let contents;\n    if (input.Retention !== undefined) {\n        contents = se_ObjectLockRetention(input.Retention, context);\n        contents = contents.n(\"Retention\");\n        body = _ve;\n        contents.a(\"xmlns\", \"http://s3.amazonaws.com/doc/2006-03-01/\");\n        body += contents.toString();\n    }\n    b.m(\"PUT\").h(headers).q(query).b(body);\n    return b.build();\n};\nexport const se_PutObjectTaggingCommand = async (input, context) => {\n    const b = rb(input, context);\n    const headers = map({}, isSerializableHeaderValue, {\n        \"content-type\": \"application/xml\",\n        [_cm]: input[_CMD],\n        [_xasca]: input[_CA],\n        [_xaebo]: input[_EBO],\n        [_xarp]: input[_RP],\n    });\n    b.bp(\"/{Key+}\");\n    b.p(\"Bucket\", () => input.Bucket, \"{Bucket}\", false);\n    b.p(\"Key\", () => input.Key, \"{Key+}\", true);\n    const query = map({\n        [_t]: [, \"\"],\n        [_vI]: [, input[_VI]],\n    });\n    let body;\n    let contents;\n    if (input.Tagging !== undefined) {\n        contents = se_Tagging(input.Tagging, context);\n        body = _ve;\n        contents.a(\"xmlns\", \"http://s3.amazonaws.com/doc/2006-03-01/\");\n        body += contents.toString();\n    }\n    b.m(\"PUT\").h(headers).q(query).b(body);\n    return b.build();\n};\nexport const se_PutPublicAccessBlockCommand = async (input, context) => {\n    const b = rb(input, context);\n    const headers = map({}, isSerializableHeaderValue, {\n        \"content-type\": \"application/xml\",\n        [_cm]: input[_CMD],\n        [_xasca]: input[_CA],\n        [_xaebo]: input[_EBO],\n    });\n    b.bp(\"/\");\n    b.p(\"Bucket\", () => input.Bucket, \"{Bucket}\", false);\n    const query = map({\n        [_pAB]: [, \"\"],\n    });\n    let body;\n    let contents;\n    if (input.PublicAccessBlockConfiguration !== undefined) {\n        contents = se_PublicAccessBlockConfiguration(input.PublicAccessBlockConfiguration, context);\n        body = _ve;\n        contents.a(\"xmlns\", \"http://s3.amazonaws.com/doc/2006-03-01/\");\n        body += contents.toString();\n    }\n    b.m(\"PUT\").h(headers).q(query).b(body);\n    return b.build();\n};\nexport const se_RestoreObjectCommand = async (input, context) => {\n    const b = rb(input, context);\n    const headers = map({}, isSerializableHeaderValue, {\n        \"content-type\": \"application/xml\",\n        [_xarp]: input[_RP],\n        [_xasca]: input[_CA],\n        [_xaebo]: input[_EBO],\n    });\n    b.bp(\"/{Key+}\");\n    b.p(\"Bucket\", () => input.Bucket, \"{Bucket}\", false);\n    b.p(\"Key\", () => input.Key, \"{Key+}\", true);\n    const query = map({\n        [_res]: [, \"\"],\n        [_vI]: [, input[_VI]],\n    });\n    let body;\n    let contents;\n    if (input.RestoreRequest !== undefined) {\n        contents = se_RestoreRequest(input.RestoreRequest, context);\n        body = _ve;\n        contents.a(\"xmlns\", \"http://s3.amazonaws.com/doc/2006-03-01/\");\n        body += contents.toString();\n    }\n    b.m(\"POST\").h(headers).q(query).b(body);\n    return b.build();\n};\nexport const se_SelectObjectContentCommand = async (input, context) => {\n    const b = rb(input, context);\n    const headers = map({}, isSerializableHeaderValue, {\n        \"content-type\": \"application/xml\",\n        [_xasseca]: input[_SSECA],\n        [_xasseck]: input[_SSECK],\n        [_xasseckm]: input[_SSECKMD],\n        [_xaebo]: input[_EBO],\n    });\n    b.bp(\"/{Key+}\");\n    b.p(\"Bucket\", () => input.Bucket, \"{Bucket}\", false);\n    b.p(\"Key\", () => input.Key, \"{Key+}\", true);\n    const query = map({\n        [_se]: [, \"\"],\n        [_st]: [, \"2\"],\n    });\n    let body;\n    body = _ve;\n    const bn = new __XmlNode(_SOCR);\n    bn.a(\"xmlns\", \"http://s3.amazonaws.com/doc/2006-03-01/\");\n    bn.cc(input, _Ex);\n    bn.cc(input, _ETx);\n    if (input[_IS] != null) {\n        bn.c(se_InputSerialization(input[_IS], context).n(_IS));\n    }\n    if (input[_OS] != null) {\n        bn.c(se_OutputSerialization(input[_OS], context).n(_OS));\n    }\n    if (input[_RPe] != null) {\n        bn.c(se_RequestProgress(input[_RPe], context).n(_RPe));\n    }\n    if (input[_SR] != null) {\n        bn.c(se_ScanRange(input[_SR], context).n(_SR));\n    }\n    body += bn.toString();\n    b.m(\"POST\").h(headers).q(query).b(body);\n    return b.build();\n};\nexport const se_UploadPartCommand = async (input, context) => {\n    const b = rb(input, context);\n    const headers = map({}, isSerializableHeaderValue, {\n        \"content-type\": \"application/octet-stream\",\n        [_cl_]: [() => isSerializableHeaderValue(input[_CLo]), () => input[_CLo].toString()],\n        [_cm]: input[_CMD],\n        [_xasca]: input[_CA],\n        [_xacc]: input[_CCRC],\n        [_xacc_]: input[_CCRCC],\n        [_xacc__]: input[_CCRCNVME],\n        [_xacs]: input[_CSHA],\n        [_xacs_]: input[_CSHAh],\n        [_xasseca]: input[_SSECA],\n        [_xasseck]: input[_SSECK],\n        [_xasseckm]: input[_SSECKMD],\n        [_xarp]: input[_RP],\n        [_xaebo]: input[_EBO],\n    });\n    b.bp(\"/{Key+}\");\n    b.p(\"Bucket\", () => input.Bucket, \"{Bucket}\", false);\n    b.p(\"Key\", () => input.Key, \"{Key+}\", true);\n    const query = map({\n        [_xi]: [, \"UploadPart\"],\n        [_pN]: [__expectNonNull(input.PartNumber, `PartNumber`) != null, () => input[_PN].toString()],\n        [_uI]: [, __expectNonNull(input[_UI], `UploadId`)],\n    });\n    let body;\n    let contents;\n    if (input.Body !== undefined) {\n        contents = input.Body;\n        body = contents;\n    }\n    b.m(\"PUT\").h(headers).q(query).b(body);\n    return b.build();\n};\nexport const se_UploadPartCopyCommand = async (input, context) => {\n    const b = rb(input, context);\n    const headers = map({}, isSerializableHeaderValue, {\n        [_xacs__]: input[_CS],\n        [_xacsim]: input[_CSIM],\n        [_xacsims]: [() => isSerializableHeaderValue(input[_CSIMS]), () => __dateToUtcString(input[_CSIMS]).toString()],\n        [_xacsinm]: input[_CSINM],\n        [_xacsius]: [() => isSerializableHeaderValue(input[_CSIUS]), () => __dateToUtcString(input[_CSIUS]).toString()],\n        [_xacsr]: input[_CSR],\n        [_xasseca]: input[_SSECA],\n        [_xasseck]: input[_SSECK],\n        [_xasseckm]: input[_SSECKMD],\n        [_xacssseca]: input[_CSSSECA],\n        [_xacssseck]: input[_CSSSECK],\n        [_xacssseckm]: input[_CSSSECKMD],\n        [_xarp]: input[_RP],\n        [_xaebo]: input[_EBO],\n        [_xasebo]: input[_ESBO],\n    });\n    b.bp(\"/{Key+}\");\n    b.p(\"Bucket\", () => input.Bucket, \"{Bucket}\", false);\n    b.p(\"Key\", () => input.Key, \"{Key+}\", true);\n    const query = map({\n        [_xi]: [, \"UploadPartCopy\"],\n        [_pN]: [__expectNonNull(input.PartNumber, `PartNumber`) != null, () => input[_PN].toString()],\n        [_uI]: [, __expectNonNull(input[_UI], `UploadId`)],\n    });\n    let body;\n    b.m(\"PUT\").h(headers).q(query).b(body);\n    return b.build();\n};\nexport const se_WriteGetObjectResponseCommand = async (input, context) => {\n    const b = rb(input, context);\n    const headers = map({}, isSerializableHeaderValue, {\n        \"x-amz-content-sha256\": \"UNSIGNED-PAYLOAD\",\n        \"content-type\": \"application/octet-stream\",\n        [_xarr]: input[_RR],\n        [_xart]: input[_RT],\n        [_xafs]: [() => isSerializableHeaderValue(input[_SCt]), () => input[_SCt].toString()],\n        [_xafec]: input[_EC],\n        [_xafem]: input[_EM],\n        [_xafhar]: input[_AR],\n        [_xafhcc]: input[_CC],\n        [_xafhcd]: input[_CD],\n        [_xafhce]: input[_CE],\n        [_xafhcl]: input[_CL],\n        [_cl_]: [() => isSerializableHeaderValue(input[_CLo]), () => input[_CLo].toString()],\n        [_xafhcr]: input[_CR],\n        [_xafhct]: input[_CTo],\n        [_xafhxacc]: input[_CCRC],\n        [_xafhxacc_]: input[_CCRCC],\n        [_xafhxacc__]: input[_CCRCNVME],\n        [_xafhxacs]: input[_CSHA],\n        [_xafhxacs_]: input[_CSHAh],\n        [_xafhxadm]: [() => isSerializableHeaderValue(input[_DM]), () => input[_DM].toString()],\n        [_xafhe]: input[_ETa],\n        [_xafhe_]: [() => isSerializableHeaderValue(input[_E]), () => __dateToUtcString(input[_E]).toString()],\n        [_xafhxae]: input[_Exp],\n        [_xafhlm]: [() => isSerializableHeaderValue(input[_LM]), () => __dateToUtcString(input[_LM]).toString()],\n        [_xafhxamm]: [() => isSerializableHeaderValue(input[_MM]), () => input[_MM].toString()],\n        [_xafhxaolm]: input[_OLM],\n        [_xafhxaollh]: input[_OLLHS],\n        [_xafhxaolrud]: [\n            () => isSerializableHeaderValue(input[_OLRUD]),\n            () => __serializeDateTime(input[_OLRUD]).toString(),\n        ],\n        [_xafhxampc]: [() => isSerializableHeaderValue(input[_PC]), () => input[_PC].toString()],\n        [_xafhxars]: input[_RS],\n        [_xafhxarc]: input[_RC],\n        [_xafhxar]: input[_Re],\n        [_xafhxasse]: input[_SSE],\n        [_xafhxasseca]: input[_SSECA],\n        [_xafhxasseakki]: input[_SSEKMSKI],\n        [_xafhxasseckm]: input[_SSECKMD],\n        [_xafhxasc]: input[_SC],\n        [_xafhxatc]: [() => isSerializableHeaderValue(input[_TC]), () => input[_TC].toString()],\n        [_xafhxavi]: input[_VI],\n        [_xafhxassebke]: [() => isSerializableHeaderValue(input[_BKE]), () => input[_BKE].toString()],\n        ...(input.Metadata !== undefined &&\n            Object.keys(input.Metadata).reduce((acc, suffix) => {\n                acc[`x-amz-meta-${suffix.toLowerCase()}`] = input.Metadata[suffix];\n                return acc;\n            }, {})),\n    });\n    b.bp(\"/WriteGetObjectResponse\");\n    let body;\n    let contents;\n    if (input.Body !== undefined) {\n        contents = input.Body;\n        body = contents;\n    }\n    let { hostname: resolvedHostname } = await context.endpoint();\n    if (context.disableHostPrefix !== true) {\n        resolvedHostname = \"{RequestRoute}.\" + resolvedHostname;\n        if (input.RequestRoute === undefined) {\n            throw new Error(\"Empty value provided for input host prefix: RequestRoute.\");\n        }\n        resolvedHostname = resolvedHostname.replace(\"{RequestRoute}\", input.RequestRoute);\n        if (!__isValidHostname(resolvedHostname)) {\n            throw new Error(\"ValidationError: prefixed hostname must be hostname compatible.\");\n        }\n    }\n    b.hn(resolvedHostname);\n    b.m(\"POST\").h(headers).b(body);\n    return b.build();\n};\nexport const de_AbortMultipartUploadCommand = async (output, context) => {\n    if (output.statusCode !== 204 && output.statusCode >= 300) {\n        return de_CommandError(output, context);\n    }\n    const contents = map({\n        $metadata: deserializeMetadata(output),\n        [_RC]: [, output.headers[_xarc]],\n    });\n    await collectBody(output.body, context);\n    return contents;\n};\nexport const de_CompleteMultipartUploadCommand = async (output, context) => {\n    if (output.statusCode !== 200 && output.statusCode >= 300) {\n        return de_CommandError(output, context);\n    }\n    const contents = map({\n        $metadata: deserializeMetadata(output),\n        [_Exp]: [, output.headers[_xae]],\n        [_SSE]: [, output.headers[_xasse]],\n        [_VI]: [, output.headers[_xavi]],\n        [_SSEKMSKI]: [, output.headers[_xasseakki]],\n        [_BKE]: [() => void 0 !== output.headers[_xassebke], () => __parseBoolean(output.headers[_xassebke])],\n        [_RC]: [, output.headers[_xarc]],\n    });\n    const data = __expectNonNull(__expectObject(await parseBody(output.body, context)), \"body\");\n    if (data[_B] != null) {\n        contents[_B] = __expectString(data[_B]);\n    }\n    if (data[_CCRC] != null) {\n        contents[_CCRC] = __expectString(data[_CCRC]);\n    }\n    if (data[_CCRCC] != null) {\n        contents[_CCRCC] = __expectString(data[_CCRCC]);\n    }\n    if (data[_CCRCNVME] != null) {\n        contents[_CCRCNVME] = __expectString(data[_CCRCNVME]);\n    }\n    if (data[_CSHA] != null) {\n        contents[_CSHA] = __expectString(data[_CSHA]);\n    }\n    if (data[_CSHAh] != null) {\n        contents[_CSHAh] = __expectString(data[_CSHAh]);\n    }\n    if (data[_CT] != null) {\n        contents[_CT] = __expectString(data[_CT]);\n    }\n    if (data[_ETa] != null) {\n        contents[_ETa] = __expectString(data[_ETa]);\n    }\n    if (data[_K] != null) {\n        contents[_K] = __expectString(data[_K]);\n    }\n    if (data[_L] != null) {\n        contents[_L] = __expectString(data[_L]);\n    }\n    return contents;\n};\nexport const de_CopyObjectCommand = async (output, context) => {\n    if (output.statusCode !== 200 && output.statusCode >= 300) {\n        return de_CommandError(output, context);\n    }\n    const contents = map({\n        $metadata: deserializeMetadata(output),\n        [_Exp]: [, output.headers[_xae]],\n        [_CSVI]: [, output.headers[_xacsvi]],\n        [_VI]: [, output.headers[_xavi]],\n        [_SSE]: [, output.headers[_xasse]],\n        [_SSECA]: [, output.headers[_xasseca]],\n        [_SSECKMD]: [, output.headers[_xasseckm]],\n        [_SSEKMSKI]: [, output.headers[_xasseakki]],\n        [_SSEKMSEC]: [, output.headers[_xassec]],\n        [_BKE]: [() => void 0 !== output.headers[_xassebke], () => __parseBoolean(output.headers[_xassebke])],\n        [_RC]: [, output.headers[_xarc]],\n    });\n    const data = __expectObject(await parseBody(output.body, context));\n    contents.CopyObjectResult = de_CopyObjectResult(data, context);\n    return contents;\n};\nexport const de_CreateBucketCommand = async (output, context) => {\n    if (output.statusCode !== 200 && output.statusCode >= 300) {\n        return de_CommandError(output, context);\n    }\n    const contents = map({\n        $metadata: deserializeMetadata(output),\n        [_L]: [, output.headers[_lo]],\n    });\n    await collectBody(output.body, context);\n    return contents;\n};\nexport const de_CreateBucketMetadataTableConfigurationCommand = async (output, context) => {\n    if (output.statusCode !== 200 && output.statusCode >= 300) {\n        return de_CommandError(output, context);\n    }\n    const contents = map({\n        $metadata: deserializeMetadata(output),\n    });\n    await collectBody(output.body, context);\n    return contents;\n};\nexport const de_CreateMultipartUploadCommand = async (output, context) => {\n    if (output.statusCode !== 200 && output.statusCode >= 300) {\n        return de_CommandError(output, context);\n    }\n    const contents = map({\n        $metadata: deserializeMetadata(output),\n        [_AD]: [\n            () => void 0 !== output.headers[_xaad],\n            () => __expectNonNull(__parseRfc7231DateTime(output.headers[_xaad])),\n        ],\n        [_ARI]: [, output.headers[_xaari]],\n        [_SSE]: [, output.headers[_xasse]],\n        [_SSECA]: [, output.headers[_xasseca]],\n        [_SSECKMD]: [, output.headers[_xasseckm]],\n        [_SSEKMSKI]: [, output.headers[_xasseakki]],\n        [_SSEKMSEC]: [, output.headers[_xassec]],\n        [_BKE]: [() => void 0 !== output.headers[_xassebke], () => __parseBoolean(output.headers[_xassebke])],\n        [_RC]: [, output.headers[_xarc]],\n        [_CA]: [, output.headers[_xaca]],\n        [_CT]: [, output.headers[_xact]],\n    });\n    const data = __expectNonNull(__expectObject(await parseBody(output.body, context)), \"body\");\n    if (data[_B] != null) {\n        contents[_B] = __expectString(data[_B]);\n    }\n    if (data[_K] != null) {\n        contents[_K] = __expectString(data[_K]);\n    }\n    if (data[_UI] != null) {\n        contents[_UI] = __expectString(data[_UI]);\n    }\n    return contents;\n};\nexport const de_CreateSessionCommand = async (output, context) => {\n    if (output.statusCode !== 200 && output.statusCode >= 300) {\n        return de_CommandError(output, context);\n    }\n    const contents = map({\n        $metadata: deserializeMetadata(output),\n        [_SSE]: [, output.headers[_xasse]],\n        [_SSEKMSKI]: [, output.headers[_xasseakki]],\n        [_SSEKMSEC]: [, output.headers[_xassec]],\n        [_BKE]: [() => void 0 !== output.headers[_xassebke], () => __parseBoolean(output.headers[_xassebke])],\n    });\n    const data = __expectNonNull(__expectObject(await parseBody(output.body, context)), \"body\");\n    if (data[_C] != null) {\n        contents[_C] = de_SessionCredentials(data[_C], context);\n    }\n    return contents;\n};\nexport const de_DeleteBucketCommand = async (output, context) => {\n    if (output.statusCode !== 204 && output.statusCode >= 300) {\n        return de_CommandError(output, context);\n    }\n    const contents = map({\n        $metadata: deserializeMetadata(output),\n    });\n    await collectBody(output.body, context);\n    return contents;\n};\nexport const de_DeleteBucketAnalyticsConfigurationCommand = async (output, context) => {\n    if (output.statusCode !== 204 && output.statusCode >= 300) {\n        return de_CommandError(output, context);\n    }\n    const contents = map({\n        $metadata: deserializeMetadata(output),\n    });\n    await collectBody(output.body, context);\n    return contents;\n};\nexport const de_DeleteBucketCorsCommand = async (output, context) => {\n    if (output.statusCode !== 204 && output.statusCode >= 300) {\n        return de_CommandError(output, context);\n    }\n    const contents = map({\n        $metadata: deserializeMetadata(output),\n    });\n    await collectBody(output.body, context);\n    return contents;\n};\nexport const de_DeleteBucketEncryptionCommand = async (output, context) => {\n    if (output.statusCode !== 204 && output.statusCode >= 300) {\n        return de_CommandError(output, context);\n    }\n    const contents = map({\n        $metadata: deserializeMetadata(output),\n    });\n    await collectBody(output.body, context);\n    return contents;\n};\nexport const de_DeleteBucketIntelligentTieringConfigurationCommand = async (output, context) => {\n    if (output.statusCode !== 204 && output.statusCode >= 300) {\n        return de_CommandError(output, context);\n    }\n    const contents = map({\n        $metadata: deserializeMetadata(output),\n    });\n    await collectBody(output.body, context);\n    return contents;\n};\nexport const de_DeleteBucketInventoryConfigurationCommand = async (output, context) => {\n    if (output.statusCode !== 204 && output.statusCode >= 300) {\n        return de_CommandError(output, context);\n    }\n    const contents = map({\n        $metadata: deserializeMetadata(output),\n    });\n    await collectBody(output.body, context);\n    return contents;\n};\nexport const de_DeleteBucketLifecycleCommand = async (output, context) => {\n    if (output.statusCode !== 204 && output.statusCode >= 300) {\n        return de_CommandError(output, context);\n    }\n    const contents = map({\n        $metadata: deserializeMetadata(output),\n    });\n    await collectBody(output.body, context);\n    return contents;\n};\nexport const de_DeleteBucketMetadataTableConfigurationCommand = async (output, context) => {\n    if (output.statusCode !== 204 && output.statusCode >= 300) {\n        return de_CommandError(output, context);\n    }\n    const contents = map({\n        $metadata: deserializeMetadata(output),\n    });\n    await collectBody(output.body, context);\n    return contents;\n};\nexport const de_DeleteBucketMetricsConfigurationCommand = async (output, context) => {\n    if (output.statusCode !== 204 && output.statusCode >= 300) {\n        return de_CommandError(output, context);\n    }\n    const contents = map({\n        $metadata: deserializeMetadata(output),\n    });\n    await collectBody(output.body, context);\n    return contents;\n};\nexport const de_DeleteBucketOwnershipControlsCommand = async (output, context) => {\n    if (output.statusCode !== 204 && output.statusCode >= 300) {\n        return de_CommandError(output, context);\n    }\n    const contents = map({\n        $metadata: deserializeMetadata(output),\n    });\n    await collectBody(output.body, context);\n    return contents;\n};\nexport const de_DeleteBucketPolicyCommand = async (output, context) => {\n    if (output.statusCode !== 204 && output.statusCode >= 300) {\n        return de_CommandError(output, context);\n    }\n    const contents = map({\n        $metadata: deserializeMetadata(output),\n    });\n    await collectBody(output.body, context);\n    return contents;\n};\nexport const de_DeleteBucketReplicationCommand = async (output, context) => {\n    if (output.statusCode !== 204 && output.statusCode >= 300) {\n        return de_CommandError(output, context);\n    }\n    const contents = map({\n        $metadata: deserializeMetadata(output),\n    });\n    await collectBody(output.body, context);\n    return contents;\n};\nexport const de_DeleteBucketTaggingCommand = async (output, context) => {\n    if (output.statusCode !== 204 && output.statusCode >= 300) {\n        return de_CommandError(output, context);\n    }\n    const contents = map({\n        $metadata: deserializeMetadata(output),\n    });\n    await collectBody(output.body, context);\n    return contents;\n};\nexport const de_DeleteBucketWebsiteCommand = async (output, context) => {\n    if (output.statusCode !== 204 && output.statusCode >= 300) {\n        return de_CommandError(output, context);\n    }\n    const contents = map({\n        $metadata: deserializeMetadata(output),\n    });\n    await collectBody(output.body, context);\n    return contents;\n};\nexport const de_DeleteObjectCommand = async (output, context) => {\n    if (output.statusCode !== 204 && output.statusCode >= 300) {\n        return de_CommandError(output, context);\n    }\n    const contents = map({\n        $metadata: deserializeMetadata(output),\n        [_DM]: [() => void 0 !== output.headers[_xadm], () => __parseBoolean(output.headers[_xadm])],\n        [_VI]: [, output.headers[_xavi]],\n        [_RC]: [, output.headers[_xarc]],\n    });\n    await collectBody(output.body, context);\n    return contents;\n};\nexport const de_DeleteObjectsCommand = async (output, context) => {\n    if (output.statusCode !== 200 && output.statusCode >= 300) {\n        return de_CommandError(output, context);\n    }\n    const contents = map({\n        $metadata: deserializeMetadata(output),\n        [_RC]: [, output.headers[_xarc]],\n    });\n    const data = __expectNonNull(__expectObject(await parseBody(output.body, context)), \"body\");\n    if (data.Deleted === \"\") {\n        contents[_De] = [];\n    }\n    else if (data[_De] != null) {\n        contents[_De] = de_DeletedObjects(__getArrayIfSingleItem(data[_De]), context);\n    }\n    if (data.Error === \"\") {\n        contents[_Err] = [];\n    }\n    else if (data[_Er] != null) {\n        contents[_Err] = de_Errors(__getArrayIfSingleItem(data[_Er]), context);\n    }\n    return contents;\n};\nexport const de_DeleteObjectTaggingCommand = async (output, context) => {\n    if (output.statusCode !== 204 && output.statusCode >= 300) {\n        return de_CommandError(output, context);\n    }\n    const contents = map({\n        $metadata: deserializeMetadata(output),\n        [_VI]: [, output.headers[_xavi]],\n    });\n    await collectBody(output.body, context);\n    return contents;\n};\nexport const de_DeletePublicAccessBlockCommand = async (output, context) => {\n    if (output.statusCode !== 204 && output.statusCode >= 300) {\n        return de_CommandError(output, context);\n    }\n    const contents = map({\n        $metadata: deserializeMetadata(output),\n    });\n    await collectBody(output.body, context);\n    return contents;\n};\nexport const de_GetBucketAccelerateConfigurationCommand = async (output, context) => {\n    if (output.statusCode !== 200 && output.statusCode >= 300) {\n        return de_CommandError(output, context);\n    }\n    const contents = map({\n        $metadata: deserializeMetadata(output),\n        [_RC]: [, output.headers[_xarc]],\n    });\n    const data = __expectNonNull(__expectObject(await parseBody(output.body, context)), \"body\");\n    if (data[_S] != null) {\n        contents[_S] = __expectString(data[_S]);\n    }\n    return contents;\n};\nexport const de_GetBucketAclCommand = async (output, context) => {\n    if (output.statusCode !== 200 && output.statusCode >= 300) {\n        return de_CommandError(output, context);\n    }\n    const contents = map({\n        $metadata: deserializeMetadata(output),\n    });\n    const data = __expectNonNull(__expectObject(await parseBody(output.body, context)), \"body\");\n    if (data.AccessControlList === \"\") {\n        contents[_Gr] = [];\n    }\n    else if (data[_ACLc] != null && data[_ACLc][_G] != null) {\n        contents[_Gr] = de_Grants(__getArrayIfSingleItem(data[_ACLc][_G]), context);\n    }\n    if (data[_O] != null) {\n        contents[_O] = de_Owner(data[_O], context);\n    }\n    return contents;\n};\nexport const de_GetBucketAnalyticsConfigurationCommand = async (output, context) => {\n    if (output.statusCode !== 200 && output.statusCode >= 300) {\n        return de_CommandError(output, context);\n    }\n    const contents = map({\n        $metadata: deserializeMetadata(output),\n    });\n    const data = __expectObject(await parseBody(output.body, context));\n    contents.AnalyticsConfiguration = de_AnalyticsConfiguration(data, context);\n    return contents;\n};\nexport const de_GetBucketCorsCommand = async (output, context) => {\n    if (output.statusCode !== 200 && output.statusCode >= 300) {\n        return de_CommandError(output, context);\n    }\n    const contents = map({\n        $metadata: deserializeMetadata(output),\n    });\n    const data = __expectNonNull(__expectObject(await parseBody(output.body, context)), \"body\");\n    if (data.CORSRule === \"\") {\n        contents[_CORSRu] = [];\n    }\n    else if (data[_CORSR] != null) {\n        contents[_CORSRu] = de_CORSRules(__getArrayIfSingleItem(data[_CORSR]), context);\n    }\n    return contents;\n};\nexport const de_GetBucketEncryptionCommand = async (output, context) => {\n    if (output.statusCode !== 200 && output.statusCode >= 300) {\n        return de_CommandError(output, context);\n    }\n    const contents = map({\n        $metadata: deserializeMetadata(output),\n    });\n    const data = __expectObject(await parseBody(output.body, context));\n    contents.ServerSideEncryptionConfiguration = de_ServerSideEncryptionConfiguration(data, context);\n    return contents;\n};\nexport const de_GetBucketIntelligentTieringConfigurationCommand = async (output, context) => {\n    if (output.statusCode !== 200 && output.statusCode >= 300) {\n        return de_CommandError(output, context);\n    }\n    const contents = map({\n        $metadata: deserializeMetadata(output),\n    });\n    const data = __expectObject(await parseBody(output.body, context));\n    contents.IntelligentTieringConfiguration = de_IntelligentTieringConfiguration(data, context);\n    return contents;\n};\nexport const de_GetBucketInventoryConfigurationCommand = async (output, context) => {\n    if (output.statusCode !== 200 && output.statusCode >= 300) {\n        return de_CommandError(output, context);\n    }\n    const contents = map({\n        $metadata: deserializeMetadata(output),\n    });\n    const data = __expectObject(await parseBody(output.body, context));\n    contents.InventoryConfiguration = de_InventoryConfiguration(data, context);\n    return contents;\n};\nexport const de_GetBucketLifecycleConfigurationCommand = async (output, context) => {\n    if (output.statusCode !== 200 && output.statusCode >= 300) {\n        return de_CommandError(output, context);\n    }\n    const contents = map({\n        $metadata: deserializeMetadata(output),\n        [_TDMOS]: [, output.headers[_xatdmos]],\n    });\n    const data = __expectNonNull(__expectObject(await parseBody(output.body, context)), \"body\");\n    if (data.Rule === \"\") {\n        contents[_Rul] = [];\n    }\n    else if (data[_Ru] != null) {\n        contents[_Rul] = de_LifecycleRules(__getArrayIfSingleItem(data[_Ru]), context);\n    }\n    return contents;\n};\nexport const de_GetBucketLocationCommand = async (output, context) => {\n    if (output.statusCode !== 200 && output.statusCode >= 300) {\n        return de_CommandError(output, context);\n    }\n    const contents = map({\n        $metadata: deserializeMetadata(output),\n    });\n    const data = __expectNonNull(__expectObject(await parseBody(output.body, context)), \"body\");\n    if (data[_LC] != null) {\n        contents[_LC] = __expectString(data[_LC]);\n    }\n    return contents;\n};\nexport const de_GetBucketLoggingCommand = async (output, context) => {\n    if (output.statusCode !== 200 && output.statusCode >= 300) {\n        return de_CommandError(output, context);\n    }\n    const contents = map({\n        $metadata: deserializeMetadata(output),\n    });\n    const data = __expectNonNull(__expectObject(await parseBody(output.body, context)), \"body\");\n    if (data[_LE] != null) {\n        contents[_LE] = de_LoggingEnabled(data[_LE], context);\n    }\n    return contents;\n};\nexport const de_GetBucketMetadataTableConfigurationCommand = async (output, context) => {\n    if (output.statusCode !== 200 && output.statusCode >= 300) {\n        return de_CommandError(output, context);\n    }\n    const contents = map({\n        $metadata: deserializeMetadata(output),\n    });\n    const data = __expectObject(await parseBody(output.body, context));\n    contents.GetBucketMetadataTableConfigurationResult = de_GetBucketMetadataTableConfigurationResult(data, context);\n    return contents;\n};\nexport const de_GetBucketMetricsConfigurationCommand = async (output, context) => {\n    if (output.statusCode !== 200 && output.statusCode >= 300) {\n        return de_CommandError(output, context);\n    }\n    const contents = map({\n        $metadata: deserializeMetadata(output),\n    });\n    const data = __expectObject(await parseBody(output.body, context));\n    contents.MetricsConfiguration = de_MetricsConfiguration(data, context);\n    return contents;\n};\nexport const de_GetBucketNotificationConfigurationCommand = async (output, context) => {\n    if (output.statusCode !== 200 && output.statusCode >= 300) {\n        return de_CommandError(output, context);\n    }\n    const contents = map({\n        $metadata: deserializeMetadata(output),\n    });\n    const data = __expectNonNull(__expectObject(await parseBody(output.body, context)), \"body\");\n    if (data[_EBC] != null) {\n        contents[_EBC] = de_EventBridgeConfiguration(data[_EBC], context);\n    }\n    if (data.CloudFunctionConfiguration === \"\") {\n        contents[_LFC] = [];\n    }\n    else if (data[_CFC] != null) {\n        contents[_LFC] = de_LambdaFunctionConfigurationList(__getArrayIfSingleItem(data[_CFC]), context);\n    }\n    if (data.QueueConfiguration === \"\") {\n        contents[_QCu] = [];\n    }\n    else if (data[_QC] != null) {\n        contents[_QCu] = de_QueueConfigurationList(__getArrayIfSingleItem(data[_QC]), context);\n    }\n    if (data.TopicConfiguration === \"\") {\n        contents[_TCop] = [];\n    }\n    else if (data[_TCo] != null) {\n        contents[_TCop] = de_TopicConfigurationList(__getArrayIfSingleItem(data[_TCo]), context);\n    }\n    return contents;\n};\nexport const de_GetBucketOwnershipControlsCommand = async (output, context) => {\n    if (output.statusCode !== 200 && output.statusCode >= 300) {\n        return de_CommandError(output, context);\n    }\n    const contents = map({\n        $metadata: deserializeMetadata(output),\n    });\n    const data = __expectObject(await parseBody(output.body, context));\n    contents.OwnershipControls = de_OwnershipControls(data, context);\n    return contents;\n};\nexport const de_GetBucketPolicyCommand = async (output, context) => {\n    if (output.statusCode !== 200 && output.statusCode >= 300) {\n        return de_CommandError(output, context);\n    }\n    const contents = map({\n        $metadata: deserializeMetadata(output),\n    });\n    const data = await collectBodyString(output.body, context);\n    contents.Policy = __expectString(data);\n    return contents;\n};\nexport const de_GetBucketPolicyStatusCommand = async (output, context) => {\n    if (output.statusCode !== 200 && output.statusCode >= 300) {\n        return de_CommandError(output, context);\n    }\n    const contents = map({\n        $metadata: deserializeMetadata(output),\n    });\n    const data = __expectObject(await parseBody(output.body, context));\n    contents.PolicyStatus = de_PolicyStatus(data, context);\n    return contents;\n};\nexport const de_GetBucketReplicationCommand = async (output, context) => {\n    if (output.statusCode !== 200 && output.statusCode >= 300) {\n        return de_CommandError(output, context);\n    }\n    const contents = map({\n        $metadata: deserializeMetadata(output),\n    });\n    const data = __expectObject(await parseBody(output.body, context));\n    contents.ReplicationConfiguration = de_ReplicationConfiguration(data, context);\n    return contents;\n};\nexport const de_GetBucketRequestPaymentCommand = async (output, context) => {\n    if (output.statusCode !== 200 && output.statusCode >= 300) {\n        return de_CommandError(output, context);\n    }\n    const contents = map({\n        $metadata: deserializeMetadata(output),\n    });\n    const data = __expectNonNull(__expectObject(await parseBody(output.body, context)), \"body\");\n    if (data[_Pa] != null) {\n        contents[_Pa] = __expectString(data[_Pa]);\n    }\n    return contents;\n};\nexport const de_GetBucketTaggingCommand = async (output, context) => {\n    if (output.statusCode !== 200 && output.statusCode >= 300) {\n        return de_CommandError(output, context);\n    }\n    const contents = map({\n        $metadata: deserializeMetadata(output),\n    });\n    const data = __expectNonNull(__expectObject(await parseBody(output.body, context)), \"body\");\n    if (data.TagSet === \"\") {\n        contents[_TS] = [];\n    }\n    else if (data[_TS] != null && data[_TS][_Ta] != null) {\n        contents[_TS] = de_TagSet(__getArrayIfSingleItem(data[_TS][_Ta]), context);\n    }\n    return contents;\n};\nexport const de_GetBucketVersioningCommand = async (output, context) => {\n    if (output.statusCode !== 200 && output.statusCode >= 300) {\n        return de_CommandError(output, context);\n    }\n    const contents = map({\n        $metadata: deserializeMetadata(output),\n    });\n    const data = __expectNonNull(__expectObject(await parseBody(output.body, context)), \"body\");\n    if (data[_MDf] != null) {\n        contents[_MFAD] = __expectString(data[_MDf]);\n    }\n    if (data[_S] != null) {\n        contents[_S] = __expectString(data[_S]);\n    }\n    return contents;\n};\nexport const de_GetBucketWebsiteCommand = async (output, context) => {\n    if (output.statusCode !== 200 && output.statusCode >= 300) {\n        return de_CommandError(output, context);\n    }\n    const contents = map({\n        $metadata: deserializeMetadata(output),\n    });\n    const data = __expectNonNull(__expectObject(await parseBody(output.body, context)), \"body\");\n    if (data[_ED] != null) {\n        contents[_ED] = de_ErrorDocument(data[_ED], context);\n    }\n    if (data[_ID] != null) {\n        contents[_ID] = de_IndexDocument(data[_ID], context);\n    }\n    if (data[_RART] != null) {\n        contents[_RART] = de_RedirectAllRequestsTo(data[_RART], context);\n    }\n    if (data.RoutingRules === \"\") {\n        contents[_RRo] = [];\n    }\n    else if (data[_RRo] != null && data[_RRo][_RRou] != null) {\n        contents[_RRo] = de_RoutingRules(__getArrayIfSingleItem(data[_RRo][_RRou]), context);\n    }\n    return contents;\n};\nexport const de_GetObjectCommand = async (output, context) => {\n    if (output.statusCode !== 200 && output.statusCode >= 300) {\n        return de_CommandError(output, context);\n    }\n    const contents = map({\n        $metadata: deserializeMetadata(output),\n        [_DM]: [() => void 0 !== output.headers[_xadm], () => __parseBoolean(output.headers[_xadm])],\n        [_AR]: [, output.headers[_ar]],\n        [_Exp]: [, output.headers[_xae]],\n        [_Re]: [, output.headers[_xar]],\n        [_LM]: [() => void 0 !== output.headers[_lm], () => __expectNonNull(__parseRfc7231DateTime(output.headers[_lm]))],\n        [_CLo]: [() => void 0 !== output.headers[_cl_], () => __strictParseLong(output.headers[_cl_])],\n        [_ETa]: [, output.headers[_eta]],\n        [_CCRC]: [, output.headers[_xacc]],\n        [_CCRCC]: [, output.headers[_xacc_]],\n        [_CCRCNVME]: [, output.headers[_xacc__]],\n        [_CSHA]: [, output.headers[_xacs]],\n        [_CSHAh]: [, output.headers[_xacs_]],\n        [_CT]: [, output.headers[_xact]],\n        [_MM]: [() => void 0 !== output.headers[_xamm], () => __strictParseInt32(output.headers[_xamm])],\n        [_VI]: [, output.headers[_xavi]],\n        [_CC]: [, output.headers[_cc]],\n        [_CD]: [, output.headers[_cd]],\n        [_CE]: [, output.headers[_ce]],\n        [_CL]: [, output.headers[_cl]],\n        [_CR]: [, output.headers[_cr]],\n        [_CTo]: [, output.headers[_ct]],\n        [_E]: [() => void 0 !== output.headers[_e], () => __expectNonNull(__parseRfc7231DateTime(output.headers[_e]))],\n        [_ES]: [, output.headers[_ex]],\n        [_WRL]: [, output.headers[_xawrl]],\n        [_SSE]: [, output.headers[_xasse]],\n        [_SSECA]: [, output.headers[_xasseca]],\n        [_SSECKMD]: [, output.headers[_xasseckm]],\n        [_SSEKMSKI]: [, output.headers[_xasseakki]],\n        [_BKE]: [() => void 0 !== output.headers[_xassebke], () => __parseBoolean(output.headers[_xassebke])],\n        [_SC]: [, output.headers[_xasc]],\n        [_RC]: [, output.headers[_xarc]],\n        [_RS]: [, output.headers[_xars]],\n        [_PC]: [() => void 0 !== output.headers[_xampc], () => __strictParseInt32(output.headers[_xampc])],\n        [_TC]: [() => void 0 !== output.headers[_xatc], () => __strictParseInt32(output.headers[_xatc])],\n        [_OLM]: [, output.headers[_xaolm]],\n        [_OLRUD]: [\n            () => void 0 !== output.headers[_xaolrud],\n            () => __expectNonNull(__parseRfc3339DateTimeWithOffset(output.headers[_xaolrud])),\n        ],\n        [_OLLHS]: [, output.headers[_xaollh]],\n        Metadata: [\n            ,\n            Object.keys(output.headers)\n                .filter((header) => header.startsWith(\"x-amz-meta-\"))\n                .reduce((acc, header) => {\n                acc[header.substring(11)] = output.headers[header];\n                return acc;\n            }, {}),\n        ],\n    });\n    const data = output.body;\n    context.sdkStreamMixin(data);\n    contents.Body = data;\n    return contents;\n};\nexport const de_GetObjectAclCommand = async (output, context) => {\n    if (output.statusCode !== 200 && output.statusCode >= 300) {\n        return de_CommandError(output, context);\n    }\n    const contents = map({\n        $metadata: deserializeMetadata(output),\n        [_RC]: [, output.headers[_xarc]],\n    });\n    const data = __expectNonNull(__expectObject(await parseBody(output.body, context)), \"body\");\n    if (data.AccessControlList === \"\") {\n        contents[_Gr] = [];\n    }\n    else if (data[_ACLc] != null && data[_ACLc][_G] != null) {\n        contents[_Gr] = de_Grants(__getArrayIfSingleItem(data[_ACLc][_G]), context);\n    }\n    if (data[_O] != null) {\n        contents[_O] = de_Owner(data[_O], context);\n    }\n    return contents;\n};\nexport const de_GetObjectAttributesCommand = async (output, context) => {\n    if (output.statusCode !== 200 && output.statusCode >= 300) {\n        return de_CommandError(output, context);\n    }\n    const contents = map({\n        $metadata: deserializeMetadata(output),\n        [_DM]: [() => void 0 !== output.headers[_xadm], () => __parseBoolean(output.headers[_xadm])],\n        [_LM]: [() => void 0 !== output.headers[_lm], () => __expectNonNull(__parseRfc7231DateTime(output.headers[_lm]))],\n        [_VI]: [, output.headers[_xavi]],\n        [_RC]: [, output.headers[_xarc]],\n    });\n    const data = __expectNonNull(__expectObject(await parseBody(output.body, context)), \"body\");\n    if (data[_Ch] != null) {\n        contents[_Ch] = de_Checksum(data[_Ch], context);\n    }\n    if (data[_ETa] != null) {\n        contents[_ETa] = __expectString(data[_ETa]);\n    }\n    if (data[_OP] != null) {\n        contents[_OP] = de_GetObjectAttributesParts(data[_OP], context);\n    }\n    if (data[_OSb] != null) {\n        contents[_OSb] = __strictParseLong(data[_OSb]);\n    }\n    if (data[_SC] != null) {\n        contents[_SC] = __expectString(data[_SC]);\n    }\n    return contents;\n};\nexport const de_GetObjectLegalHoldCommand = async (output, context) => {\n    if (output.statusCode !== 200 && output.statusCode >= 300) {\n        return de_CommandError(output, context);\n    }\n    const contents = map({\n        $metadata: deserializeMetadata(output),\n    });\n    const data = __expectObject(await parseBody(output.body, context));\n    contents.LegalHold = de_ObjectLockLegalHold(data, context);\n    return contents;\n};\nexport const de_GetObjectLockConfigurationCommand = async (output, context) => {\n    if (output.statusCode !== 200 && output.statusCode >= 300) {\n        return de_CommandError(output, context);\n    }\n    const contents = map({\n        $metadata: deserializeMetadata(output),\n    });\n    const data = __expectObject(await parseBody(output.body, context));\n    contents.ObjectLockConfiguration = de_ObjectLockConfiguration(data, context);\n    return contents;\n};\nexport const de_GetObjectRetentionCommand = async (output, context) => {\n    if (output.statusCode !== 200 && output.statusCode >= 300) {\n        return de_CommandError(output, context);\n    }\n    const contents = map({\n        $metadata: deserializeMetadata(output),\n    });\n    const data = __expectObject(await parseBody(output.body, context));\n    contents.Retention = de_ObjectLockRetention(data, context);\n    return contents;\n};\nexport const de_GetObjectTaggingCommand = async (output, context) => {\n    if (output.statusCode !== 200 && output.statusCode >= 300) {\n        return de_CommandError(output, context);\n    }\n    const contents = map({\n        $metadata: deserializeMetadata(output),\n        [_VI]: [, output.headers[_xavi]],\n    });\n    const data = __expectNonNull(__expectObject(await parseBody(output.body, context)), \"body\");\n    if (data.TagSet === \"\") {\n        contents[_TS] = [];\n    }\n    else if (data[_TS] != null && data[_TS][_Ta] != null) {\n        contents[_TS] = de_TagSet(__getArrayIfSingleItem(data[_TS][_Ta]), context);\n    }\n    return contents;\n};\nexport const de_GetObjectTorrentCommand = async (output, context) => {\n    if (output.statusCode !== 200 && output.statusCode >= 300) {\n        return de_CommandError(output, context);\n    }\n    const contents = map({\n        $metadata: deserializeMetadata(output),\n        [_RC]: [, output.headers[_xarc]],\n    });\n    const data = output.body;\n    context.sdkStreamMixin(data);\n    contents.Body = data;\n    return contents;\n};\nexport const de_GetPublicAccessBlockCommand = async (output, context) => {\n    if (output.statusCode !== 200 && output.statusCode >= 300) {\n        return de_CommandError(output, context);\n    }\n    const contents = map({\n        $metadata: deserializeMetadata(output),\n    });\n    const data = __expectObject(await parseBody(output.body, context));\n    contents.PublicAccessBlockConfiguration = de_PublicAccessBlockConfiguration(data, context);\n    return contents;\n};\nexport const de_HeadBucketCommand = async (output, context) => {\n    if (output.statusCode !== 200 && output.statusCode >= 300) {\n        return de_CommandError(output, context);\n    }\n    const contents = map({\n        $metadata: deserializeMetadata(output),\n        [_BLT]: [, output.headers[_xablt]],\n        [_BLN]: [, output.headers[_xabln]],\n        [_BR]: [, output.headers[_xabr]],\n        [_APA]: [() => void 0 !== output.headers[_xaapa], () => __parseBoolean(output.headers[_xaapa])],\n    });\n    await collectBody(output.body, context);\n    return contents;\n};\nexport const de_HeadObjectCommand = async (output, context) => {\n    if (output.statusCode !== 200 && output.statusCode >= 300) {\n        return de_CommandError(output, context);\n    }\n    const contents = map({\n        $metadata: deserializeMetadata(output),\n        [_DM]: [() => void 0 !== output.headers[_xadm], () => __parseBoolean(output.headers[_xadm])],\n        [_AR]: [, output.headers[_ar]],\n        [_Exp]: [, output.headers[_xae]],\n        [_Re]: [, output.headers[_xar]],\n        [_AS]: [, output.headers[_xaas]],\n        [_LM]: [() => void 0 !== output.headers[_lm], () => __expectNonNull(__parseRfc7231DateTime(output.headers[_lm]))],\n        [_CLo]: [() => void 0 !== output.headers[_cl_], () => __strictParseLong(output.headers[_cl_])],\n        [_CCRC]: [, output.headers[_xacc]],\n        [_CCRCC]: [, output.headers[_xacc_]],\n        [_CCRCNVME]: [, output.headers[_xacc__]],\n        [_CSHA]: [, output.headers[_xacs]],\n        [_CSHAh]: [, output.headers[_xacs_]],\n        [_CT]: [, output.headers[_xact]],\n        [_ETa]: [, output.headers[_eta]],\n        [_MM]: [() => void 0 !== output.headers[_xamm], () => __strictParseInt32(output.headers[_xamm])],\n        [_VI]: [, output.headers[_xavi]],\n        [_CC]: [, output.headers[_cc]],\n        [_CD]: [, output.headers[_cd]],\n        [_CE]: [, output.headers[_ce]],\n        [_CL]: [, output.headers[_cl]],\n        [_CTo]: [, output.headers[_ct]],\n        [_E]: [() => void 0 !== output.headers[_e], () => __expectNonNull(__parseRfc7231DateTime(output.headers[_e]))],\n        [_ES]: [, output.headers[_ex]],\n        [_WRL]: [, output.headers[_xawrl]],\n        [_SSE]: [, output.headers[_xasse]],\n        [_SSECA]: [, output.headers[_xasseca]],\n        [_SSECKMD]: [, output.headers[_xasseckm]],\n        [_SSEKMSKI]: [, output.headers[_xasseakki]],\n        [_BKE]: [() => void 0 !== output.headers[_xassebke], () => __parseBoolean(output.headers[_xassebke])],\n        [_SC]: [, output.headers[_xasc]],\n        [_RC]: [, output.headers[_xarc]],\n        [_RS]: [, output.headers[_xars]],\n        [_PC]: [() => void 0 !== output.headers[_xampc], () => __strictParseInt32(output.headers[_xampc])],\n        [_OLM]: [, output.headers[_xaolm]],\n        [_OLRUD]: [\n            () => void 0 !== output.headers[_xaolrud],\n            () => __expectNonNull(__parseRfc3339DateTimeWithOffset(output.headers[_xaolrud])),\n        ],\n        [_OLLHS]: [, output.headers[_xaollh]],\n        Metadata: [\n            ,\n            Object.keys(output.headers)\n                .filter((header) => header.startsWith(\"x-amz-meta-\"))\n                .reduce((acc, header) => {\n                acc[header.substring(11)] = output.headers[header];\n                return acc;\n            }, {}),\n        ],\n    });\n    await collectBody(output.body, context);\n    return contents;\n};\nexport const de_ListBucketAnalyticsConfigurationsCommand = async (output, context) => {\n    if (output.statusCode !== 200 && output.statusCode >= 300) {\n        return de_CommandError(output, context);\n    }\n    const contents = map({\n        $metadata: deserializeMetadata(output),\n    });\n    const data = __expectNonNull(__expectObject(await parseBody(output.body, context)), \"body\");\n    if (data.AnalyticsConfiguration === \"\") {\n        contents[_ACLn] = [];\n    }\n    else if (data[_AC] != null) {\n        contents[_ACLn] = de_AnalyticsConfigurationList(__getArrayIfSingleItem(data[_AC]), context);\n    }\n    if (data[_CTon] != null) {\n        contents[_CTon] = __expectString(data[_CTon]);\n    }\n    if (data[_IT] != null) {\n        contents[_IT] = __parseBoolean(data[_IT]);\n    }\n    if (data[_NCT] != null) {\n        contents[_NCT] = __expectString(data[_NCT]);\n    }\n    return contents;\n};\nexport const de_ListBucketIntelligentTieringConfigurationsCommand = async (output, context) => {\n    if (output.statusCode !== 200 && output.statusCode >= 300) {\n        return de_CommandError(output, context);\n    }\n    const contents = map({\n        $metadata: deserializeMetadata(output),\n    });\n    const data = __expectNonNull(__expectObject(await parseBody(output.body, context)), \"body\");\n    if (data[_CTon] != null) {\n        contents[_CTon] = __expectString(data[_CTon]);\n    }\n    if (data.IntelligentTieringConfiguration === \"\") {\n        contents[_ITCL] = [];\n    }\n    else if (data[_ITC] != null) {\n        contents[_ITCL] = de_IntelligentTieringConfigurationList(__getArrayIfSingleItem(data[_ITC]), context);\n    }\n    if (data[_IT] != null) {\n        contents[_IT] = __parseBoolean(data[_IT]);\n    }\n    if (data[_NCT] != null) {\n        contents[_NCT] = __expectString(data[_NCT]);\n    }\n    return contents;\n};\nexport const de_ListBucketInventoryConfigurationsCommand = async (output, context) => {\n    if (output.statusCode !== 200 && output.statusCode >= 300) {\n        return de_CommandError(output, context);\n    }\n    const contents = map({\n        $metadata: deserializeMetadata(output),\n    });\n    const data = __expectNonNull(__expectObject(await parseBody(output.body, context)), \"body\");\n    if (data[_CTon] != null) {\n        contents[_CTon] = __expectString(data[_CTon]);\n    }\n    if (data.InventoryConfiguration === \"\") {\n        contents[_ICL] = [];\n    }\n    else if (data[_IC] != null) {\n        contents[_ICL] = de_InventoryConfigurationList(__getArrayIfSingleItem(data[_IC]), context);\n    }\n    if (data[_IT] != null) {\n        contents[_IT] = __parseBoolean(data[_IT]);\n    }\n    if (data[_NCT] != null) {\n        contents[_NCT] = __expectString(data[_NCT]);\n    }\n    return contents;\n};\nexport const de_ListBucketMetricsConfigurationsCommand = async (output, context) => {\n    if (output.statusCode !== 200 && output.statusCode >= 300) {\n        return de_CommandError(output, context);\n    }\n    const contents = map({\n        $metadata: deserializeMetadata(output),\n    });\n    const data = __expectNonNull(__expectObject(await parseBody(output.body, context)), \"body\");\n    if (data[_CTon] != null) {\n        contents[_CTon] = __expectString(data[_CTon]);\n    }\n    if (data[_IT] != null) {\n        contents[_IT] = __parseBoolean(data[_IT]);\n    }\n    if (data.MetricsConfiguration === \"\") {\n        contents[_MCL] = [];\n    }\n    else if (data[_MC] != null) {\n        contents[_MCL] = de_MetricsConfigurationList(__getArrayIfSingleItem(data[_MC]), context);\n    }\n    if (data[_NCT] != null) {\n        contents[_NCT] = __expectString(data[_NCT]);\n    }\n    return contents;\n};\nexport const de_ListBucketsCommand = async (output, context) => {\n    if (output.statusCode !== 200 && output.statusCode >= 300) {\n        return de_CommandError(output, context);\n    }\n    const contents = map({\n        $metadata: deserializeMetadata(output),\n    });\n    const data = __expectNonNull(__expectObject(await parseBody(output.body, context)), \"body\");\n    if (data.Buckets === \"\") {\n        contents[_Bu] = [];\n    }\n    else if (data[_Bu] != null && data[_Bu][_B] != null) {\n        contents[_Bu] = de_Buckets(__getArrayIfSingleItem(data[_Bu][_B]), context);\n    }\n    if (data[_CTon] != null) {\n        contents[_CTon] = __expectString(data[_CTon]);\n    }\n    if (data[_O] != null) {\n        contents[_O] = de_Owner(data[_O], context);\n    }\n    if (data[_P] != null) {\n        contents[_P] = __expectString(data[_P]);\n    }\n    return contents;\n};\nexport const de_ListDirectoryBucketsCommand = async (output, context) => {\n    if (output.statusCode !== 200 && output.statusCode >= 300) {\n        return de_CommandError(output, context);\n    }\n    const contents = map({\n        $metadata: deserializeMetadata(output),\n    });\n    const data = __expectNonNull(__expectObject(await parseBody(output.body, context)), \"body\");\n    if (data.Buckets === \"\") {\n        contents[_Bu] = [];\n    }\n    else if (data[_Bu] != null && data[_Bu][_B] != null) {\n        contents[_Bu] = de_Buckets(__getArrayIfSingleItem(data[_Bu][_B]), context);\n    }\n    if (data[_CTon] != null) {\n        contents[_CTon] = __expectString(data[_CTon]);\n    }\n    return contents;\n};\nexport const de_ListMultipartUploadsCommand = async (output, context) => {\n    if (output.statusCode !== 200 && output.statusCode >= 300) {\n        return de_CommandError(output, context);\n    }\n    const contents = map({\n        $metadata: deserializeMetadata(output),\n        [_RC]: [, output.headers[_xarc]],\n    });\n    const data = __expectNonNull(__expectObject(await parseBody(output.body, context)), \"body\");\n    if (data[_B] != null) {\n        contents[_B] = __expectString(data[_B]);\n    }\n    if (data.CommonPrefixes === \"\") {\n        contents[_CP] = [];\n    }\n    else if (data[_CP] != null) {\n        contents[_CP] = de_CommonPrefixList(__getArrayIfSingleItem(data[_CP]), context);\n    }\n    if (data[_D] != null) {\n        contents[_D] = __expectString(data[_D]);\n    }\n    if (data[_ET] != null) {\n        contents[_ET] = __expectString(data[_ET]);\n    }\n    if (data[_IT] != null) {\n        contents[_IT] = __parseBoolean(data[_IT]);\n    }\n    if (data[_KM] != null) {\n        contents[_KM] = __expectString(data[_KM]);\n    }\n    if (data[_MU] != null) {\n        contents[_MU] = __strictParseInt32(data[_MU]);\n    }\n    if (data[_NKM] != null) {\n        contents[_NKM] = __expectString(data[_NKM]);\n    }\n    if (data[_NUIM] != null) {\n        contents[_NUIM] = __expectString(data[_NUIM]);\n    }\n    if (data[_P] != null) {\n        contents[_P] = __expectString(data[_P]);\n    }\n    if (data[_UIM] != null) {\n        contents[_UIM] = __expectString(data[_UIM]);\n    }\n    if (data.Upload === \"\") {\n        contents[_Up] = [];\n    }\n    else if (data[_U] != null) {\n        contents[_Up] = de_MultipartUploadList(__getArrayIfSingleItem(data[_U]), context);\n    }\n    return contents;\n};\nexport const de_ListObjectsCommand = async (output, context) => {\n    if (output.statusCode !== 200 && output.statusCode >= 300) {\n        return de_CommandError(output, context);\n    }\n    const contents = map({\n        $metadata: deserializeMetadata(output),\n        [_RC]: [, output.headers[_xarc]],\n    });\n    const data = __expectNonNull(__expectObject(await parseBody(output.body, context)), \"body\");\n    if (data.CommonPrefixes === \"\") {\n        contents[_CP] = [];\n    }\n    else if (data[_CP] != null) {\n        contents[_CP] = de_CommonPrefixList(__getArrayIfSingleItem(data[_CP]), context);\n    }\n    if (data.Contents === \"\") {\n        contents[_Co] = [];\n    }\n    else if (data[_Co] != null) {\n        contents[_Co] = de_ObjectList(__getArrayIfSingleItem(data[_Co]), context);\n    }\n    if (data[_D] != null) {\n        contents[_D] = __expectString(data[_D]);\n    }\n    if (data[_ET] != null) {\n        contents[_ET] = __expectString(data[_ET]);\n    }\n    if (data[_IT] != null) {\n        contents[_IT] = __parseBoolean(data[_IT]);\n    }\n    if (data[_M] != null) {\n        contents[_M] = __expectString(data[_M]);\n    }\n    if (data[_MK] != null) {\n        contents[_MK] = __strictParseInt32(data[_MK]);\n    }\n    if (data[_N] != null) {\n        contents[_N] = __expectString(data[_N]);\n    }\n    if (data[_NM] != null) {\n        contents[_NM] = __expectString(data[_NM]);\n    }\n    if (data[_P] != null) {\n        contents[_P] = __expectString(data[_P]);\n    }\n    return contents;\n};\nexport const de_ListObjectsV2Command = async (output, context) => {\n    if (output.statusCode !== 200 && output.statusCode >= 300) {\n        return de_CommandError(output, context);\n    }\n    const contents = map({\n        $metadata: deserializeMetadata(output),\n        [_RC]: [, output.headers[_xarc]],\n    });\n    const data = __expectNonNull(__expectObject(await parseBody(output.body, context)), \"body\");\n    if (data.CommonPrefixes === \"\") {\n        contents[_CP] = [];\n    }\n    else if (data[_CP] != null) {\n        contents[_CP] = de_CommonPrefixList(__getArrayIfSingleItem(data[_CP]), context);\n    }\n    if (data.Contents === \"\") {\n        contents[_Co] = [];\n    }\n    else if (data[_Co] != null) {\n        contents[_Co] = de_ObjectList(__getArrayIfSingleItem(data[_Co]), context);\n    }\n    if (data[_CTon] != null) {\n        contents[_CTon] = __expectString(data[_CTon]);\n    }\n    if (data[_D] != null) {\n        contents[_D] = __expectString(data[_D]);\n    }\n    if (data[_ET] != null) {\n        contents[_ET] = __expectString(data[_ET]);\n    }\n    if (data[_IT] != null) {\n        contents[_IT] = __parseBoolean(data[_IT]);\n    }\n    if (data[_KC] != null) {\n        contents[_KC] = __strictParseInt32(data[_KC]);\n    }\n    if (data[_MK] != null) {\n        contents[_MK] = __strictParseInt32(data[_MK]);\n    }\n    if (data[_N] != null) {\n        contents[_N] = __expectString(data[_N]);\n    }\n    if (data[_NCT] != null) {\n        contents[_NCT] = __expectString(data[_NCT]);\n    }\n    if (data[_P] != null) {\n        contents[_P] = __expectString(data[_P]);\n    }\n    if (data[_SA] != null) {\n        contents[_SA] = __expectString(data[_SA]);\n    }\n    return contents;\n};\nexport const de_ListObjectVersionsCommand = async (output, context) => {\n    if (output.statusCode !== 200 && output.statusCode >= 300) {\n        return de_CommandError(output, context);\n    }\n    const contents = map({\n        $metadata: deserializeMetadata(output),\n        [_RC]: [, output.headers[_xarc]],\n    });\n    const data = __expectNonNull(__expectObject(await parseBody(output.body, context)), \"body\");\n    if (data.CommonPrefixes === \"\") {\n        contents[_CP] = [];\n    }\n    else if (data[_CP] != null) {\n        contents[_CP] = de_CommonPrefixList(__getArrayIfSingleItem(data[_CP]), context);\n    }\n    if (data.DeleteMarker === \"\") {\n        contents[_DMe] = [];\n    }\n    else if (data[_DM] != null) {\n        contents[_DMe] = de_DeleteMarkers(__getArrayIfSingleItem(data[_DM]), context);\n    }\n    if (data[_D] != null) {\n        contents[_D] = __expectString(data[_D]);\n    }\n    if (data[_ET] != null) {\n        contents[_ET] = __expectString(data[_ET]);\n    }\n    if (data[_IT] != null) {\n        contents[_IT] = __parseBoolean(data[_IT]);\n    }\n    if (data[_KM] != null) {\n        contents[_KM] = __expectString(data[_KM]);\n    }\n    if (data[_MK] != null) {\n        contents[_MK] = __strictParseInt32(data[_MK]);\n    }\n    if (data[_N] != null) {\n        contents[_N] = __expectString(data[_N]);\n    }\n    if (data[_NKM] != null) {\n        contents[_NKM] = __expectString(data[_NKM]);\n    }\n    if (data[_NVIM] != null) {\n        contents[_NVIM] = __expectString(data[_NVIM]);\n    }\n    if (data[_P] != null) {\n        contents[_P] = __expectString(data[_P]);\n    }\n    if (data[_VIM] != null) {\n        contents[_VIM] = __expectString(data[_VIM]);\n    }\n    if (data.Version === \"\") {\n        contents[_Ve] = [];\n    }\n    else if (data[_V] != null) {\n        contents[_Ve] = de_ObjectVersionList(__getArrayIfSingleItem(data[_V]), context);\n    }\n    return contents;\n};\nexport const de_ListPartsCommand = async (output, context) => {\n    if (output.statusCode !== 200 && output.statusCode >= 300) {\n        return de_CommandError(output, context);\n    }\n    const contents = map({\n        $metadata: deserializeMetadata(output),\n        [_AD]: [\n            () => void 0 !== output.headers[_xaad],\n            () => __expectNonNull(__parseRfc7231DateTime(output.headers[_xaad])),\n        ],\n        [_ARI]: [, output.headers[_xaari]],\n        [_RC]: [, output.headers[_xarc]],\n    });\n    const data = __expectNonNull(__expectObject(await parseBody(output.body, context)), \"body\");\n    if (data[_B] != null) {\n        contents[_B] = __expectString(data[_B]);\n    }\n    if (data[_CA] != null) {\n        contents[_CA] = __expectString(data[_CA]);\n    }\n    if (data[_CT] != null) {\n        contents[_CT] = __expectString(data[_CT]);\n    }\n    if (data[_In] != null) {\n        contents[_In] = de_Initiator(data[_In], context);\n    }\n    if (data[_IT] != null) {\n        contents[_IT] = __parseBoolean(data[_IT]);\n    }\n    if (data[_K] != null) {\n        contents[_K] = __expectString(data[_K]);\n    }\n    if (data[_MP] != null) {\n        contents[_MP] = __strictParseInt32(data[_MP]);\n    }\n    if (data[_NPNM] != null) {\n        contents[_NPNM] = __expectString(data[_NPNM]);\n    }\n    if (data[_O] != null) {\n        contents[_O] = de_Owner(data[_O], context);\n    }\n    if (data[_PNM] != null) {\n        contents[_PNM] = __expectString(data[_PNM]);\n    }\n    if (data.Part === \"\") {\n        contents[_Part] = [];\n    }\n    else if (data[_Par] != null) {\n        contents[_Part] = de_Parts(__getArrayIfSingleItem(data[_Par]), context);\n    }\n    if (data[_SC] != null) {\n        contents[_SC] = __expectString(data[_SC]);\n    }\n    if (data[_UI] != null) {\n        contents[_UI] = __expectString(data[_UI]);\n    }\n    return contents;\n};\nexport const de_PutBucketAccelerateConfigurationCommand = async (output, context) => {\n    if (output.statusCode !== 200 && output.statusCode >= 300) {\n        return de_CommandError(output, context);\n    }\n    const contents = map({\n        $metadata: deserializeMetadata(output),\n    });\n    await collectBody(output.body, context);\n    return contents;\n};\nexport const de_PutBucketAclCommand = async (output, context) => {\n    if (output.statusCode !== 200 && output.statusCode >= 300) {\n        return de_CommandError(output, context);\n    }\n    const contents = map({\n        $metadata: deserializeMetadata(output),\n    });\n    await collectBody(output.body, context);\n    return contents;\n};\nexport const de_PutBucketAnalyticsConfigurationCommand = async (output, context) => {\n    if (output.statusCode !== 200 && output.statusCode >= 300) {\n        return de_CommandError(output, context);\n    }\n    const contents = map({\n        $metadata: deserializeMetadata(output),\n    });\n    await collectBody(output.body, context);\n    return contents;\n};\nexport const de_PutBucketCorsCommand = async (output, context) => {\n    if (output.statusCode !== 200 && output.statusCode >= 300) {\n        return de_CommandError(output, context);\n    }\n    const contents = map({\n        $metadata: deserializeMetadata(output),\n    });\n    await collectBody(output.body, context);\n    return contents;\n};\nexport const de_PutBucketEncryptionCommand = async (output, context) => {\n    if (output.statusCode !== 200 && output.statusCode >= 300) {\n        return de_CommandError(output, context);\n    }\n    const contents = map({\n        $metadata: deserializeMetadata(output),\n    });\n    await collectBody(output.body, context);\n    return contents;\n};\nexport const de_PutBucketIntelligentTieringConfigurationCommand = async (output, context) => {\n    if (output.statusCode !== 200 && output.statusCode >= 300) {\n        return de_CommandError(output, context);\n    }\n    const contents = map({\n        $metadata: deserializeMetadata(output),\n    });\n    await collectBody(output.body, context);\n    return contents;\n};\nexport const de_PutBucketInventoryConfigurationCommand = async (output, context) => {\n    if (output.statusCode !== 200 && output.statusCode >= 300) {\n        return de_CommandError(output, context);\n    }\n    const contents = map({\n        $metadata: deserializeMetadata(output),\n    });\n    await collectBody(output.body, context);\n    return contents;\n};\nexport const de_PutBucketLifecycleConfigurationCommand = async (output, context) => {\n    if (output.statusCode !== 200 && output.statusCode >= 300) {\n        return de_CommandError(output, context);\n    }\n    const contents = map({\n        $metadata: deserializeMetadata(output),\n        [_TDMOS]: [, output.headers[_xatdmos]],\n    });\n    await collectBody(output.body, context);\n    return contents;\n};\nexport const de_PutBucketLoggingCommand = async (output, context) => {\n    if (output.statusCode !== 200 && output.statusCode >= 300) {\n        return de_CommandError(output, context);\n    }\n    const contents = map({\n        $metadata: deserializeMetadata(output),\n    });\n    await collectBody(output.body, context);\n    return contents;\n};\nexport const de_PutBucketMetricsConfigurationCommand = async (output, context) => {\n    if (output.statusCode !== 200 && output.statusCode >= 300) {\n        return de_CommandError(output, context);\n    }\n    const contents = map({\n        $metadata: deserializeMetadata(output),\n    });\n    await collectBody(output.body, context);\n    return contents;\n};\nexport const de_PutBucketNotificationConfigurationCommand = async (output, context) => {\n    if (output.statusCode !== 200 && output.statusCode >= 300) {\n        return de_CommandError(output, context);\n    }\n    const contents = map({\n        $metadata: deserializeMetadata(output),\n    });\n    await collectBody(output.body, context);\n    return contents;\n};\nexport const de_PutBucketOwnershipControlsCommand = async (output, context) => {\n    if (output.statusCode !== 200 && output.statusCode >= 300) {\n        return de_CommandError(output, context);\n    }\n    const contents = map({\n        $metadata: deserializeMetadata(output),\n    });\n    await collectBody(output.body, context);\n    return contents;\n};\nexport const de_PutBucketPolicyCommand = async (output, context) => {\n    if (output.statusCode !== 200 && output.statusCode >= 300) {\n        return de_CommandError(output, context);\n    }\n    const contents = map({\n        $metadata: deserializeMetadata(output),\n    });\n    await collectBody(output.body, context);\n    return contents;\n};\nexport const de_PutBucketReplicationCommand = async (output, context) => {\n    if (output.statusCode !== 200 && output.statusCode >= 300) {\n        return de_CommandError(output, context);\n    }\n    const contents = map({\n        $metadata: deserializeMetadata(output),\n    });\n    await collectBody(output.body, context);\n    return contents;\n};\nexport const de_PutBucketRequestPaymentCommand = async (output, context) => {\n    if (output.statusCode !== 200 && output.statusCode >= 300) {\n        return de_CommandError(output, context);\n    }\n    const contents = map({\n        $metadata: deserializeMetadata(output),\n    });\n    await collectBody(output.body, context);\n    return contents;\n};\nexport const de_PutBucketTaggingCommand = async (output, context) => {\n    if (output.statusCode !== 200 && output.statusCode >= 300) {\n        return de_CommandError(output, context);\n    }\n    const contents = map({\n        $metadata: deserializeMetadata(output),\n    });\n    await collectBody(output.body, context);\n    return contents;\n};\nexport const de_PutBucketVersioningCommand = async (output, context) => {\n    if (output.statusCode !== 200 && output.statusCode >= 300) {\n        return de_CommandError(output, context);\n    }\n    const contents = map({\n        $metadata: deserializeMetadata(output),\n    });\n    await collectBody(output.body, context);\n    return contents;\n};\nexport const de_PutBucketWebsiteCommand = async (output, context) => {\n    if (output.statusCode !== 200 && output.statusCode >= 300) {\n        return de_CommandError(output, context);\n    }\n    const contents = map({\n        $metadata: deserializeMetadata(output),\n    });\n    await collectBody(output.body, context);\n    return contents;\n};\nexport const de_PutObjectCommand = async (output, context) => {\n    if (output.statusCode !== 200 && output.statusCode >= 300) {\n        return de_CommandError(output, context);\n    }\n    const contents = map({\n        $metadata: deserializeMetadata(output),\n        [_Exp]: [, output.headers[_xae]],\n        [_ETa]: [, output.headers[_eta]],\n        [_CCRC]: [, output.headers[_xacc]],\n        [_CCRCC]: [, output.headers[_xacc_]],\n        [_CCRCNVME]: [, output.headers[_xacc__]],\n        [_CSHA]: [, output.headers[_xacs]],\n        [_CSHAh]: [, output.headers[_xacs_]],\n        [_CT]: [, output.headers[_xact]],\n        [_SSE]: [, output.headers[_xasse]],\n        [_VI]: [, output.headers[_xavi]],\n        [_SSECA]: [, output.headers[_xasseca]],\n        [_SSECKMD]: [, output.headers[_xasseckm]],\n        [_SSEKMSKI]: [, output.headers[_xasseakki]],\n        [_SSEKMSEC]: [, output.headers[_xassec]],\n        [_BKE]: [() => void 0 !== output.headers[_xassebke], () => __parseBoolean(output.headers[_xassebke])],\n        [_Si]: [() => void 0 !== output.headers[_xaos], () => __strictParseLong(output.headers[_xaos])],\n        [_RC]: [, output.headers[_xarc]],\n    });\n    await collectBody(output.body, context);\n    return contents;\n};\nexport const de_PutObjectAclCommand = async (output, context) => {\n    if (output.statusCode !== 200 && output.statusCode >= 300) {\n        return de_CommandError(output, context);\n    }\n    const contents = map({\n        $metadata: deserializeMetadata(output),\n        [_RC]: [, output.headers[_xarc]],\n    });\n    await collectBody(output.body, context);\n    return contents;\n};\nexport const de_PutObjectLegalHoldCommand = async (output, context) => {\n    if (output.statusCode !== 200 && output.statusCode >= 300) {\n        return de_CommandError(output, context);\n    }\n    const contents = map({\n        $metadata: deserializeMetadata(output),\n        [_RC]: [, output.headers[_xarc]],\n    });\n    await collectBody(output.body, context);\n    return contents;\n};\nexport const de_PutObjectLockConfigurationCommand = async (output, context) => {\n    if (output.statusCode !== 200 && output.statusCode >= 300) {\n        return de_CommandError(output, context);\n    }\n    const contents = map({\n        $metadata: deserializeMetadata(output),\n        [_RC]: [, output.headers[_xarc]],\n    });\n    await collectBody(output.body, context);\n    return contents;\n};\nexport const de_PutObjectRetentionCommand = async (output, context) => {\n    if (output.statusCode !== 200 && output.statusCode >= 300) {\n        return de_CommandError(output, context);\n    }\n    const contents = map({\n        $metadata: deserializeMetadata(output),\n        [_RC]: [, output.headers[_xarc]],\n    });\n    await collectBody(output.body, context);\n    return contents;\n};\nexport const de_PutObjectTaggingCommand = async (output, context) => {\n    if (output.statusCode !== 200 && output.statusCode >= 300) {\n        return de_CommandError(output, context);\n    }\n    const contents = map({\n        $metadata: deserializeMetadata(output),\n        [_VI]: [, output.headers[_xavi]],\n    });\n    await collectBody(output.body, context);\n    return contents;\n};\nexport const de_PutPublicAccessBlockCommand = async (output, context) => {\n    if (output.statusCode !== 200 && output.statusCode >= 300) {\n        return de_CommandError(output, context);\n    }\n    const contents = map({\n        $metadata: deserializeMetadata(output),\n    });\n    await collectBody(output.body, context);\n    return contents;\n};\nexport const de_RestoreObjectCommand = async (output, context) => {\n    if (output.statusCode !== 200 && output.statusCode >= 300) {\n        return de_CommandError(output, context);\n    }\n    const contents = map({\n        $metadata: deserializeMetadata(output),\n        [_RC]: [, output.headers[_xarc]],\n        [_ROP]: [, output.headers[_xarop]],\n    });\n    await collectBody(output.body, context);\n    return contents;\n};\nexport const de_SelectObjectContentCommand = async (output, context) => {\n    if (output.statusCode !== 200 && output.statusCode >= 300) {\n        return de_CommandError(output, context);\n    }\n    const contents = map({\n        $metadata: deserializeMetadata(output),\n    });\n    const data = output.body;\n    contents.Payload = de_SelectObjectContentEventStream(data, context);\n    return contents;\n};\nexport const de_UploadPartCommand = async (output, context) => {\n    if (output.statusCode !== 200 && output.statusCode >= 300) {\n        return de_CommandError(output, context);\n    }\n    const contents = map({\n        $metadata: deserializeMetadata(output),\n        [_SSE]: [, output.headers[_xasse]],\n        [_ETa]: [, output.headers[_eta]],\n        [_CCRC]: [, output.headers[_xacc]],\n        [_CCRCC]: [, output.headers[_xacc_]],\n        [_CCRCNVME]: [, output.headers[_xacc__]],\n        [_CSHA]: [, output.headers[_xacs]],\n        [_CSHAh]: [, output.headers[_xacs_]],\n        [_SSECA]: [, output.headers[_xasseca]],\n        [_SSECKMD]: [, output.headers[_xasseckm]],\n        [_SSEKMSKI]: [, output.headers[_xasseakki]],\n        [_BKE]: [() => void 0 !== output.headers[_xassebke], () => __parseBoolean(output.headers[_xassebke])],\n        [_RC]: [, output.headers[_xarc]],\n    });\n    await collectBody(output.body, context);\n    return contents;\n};\nexport const de_UploadPartCopyCommand = async (output, context) => {\n    if (output.statusCode !== 200 && output.statusCode >= 300) {\n        return de_CommandError(output, context);\n    }\n    const contents = map({\n        $metadata: deserializeMetadata(output),\n        [_CSVI]: [, output.headers[_xacsvi]],\n        [_SSE]: [, output.headers[_xasse]],\n        [_SSECA]: [, output.headers[_xasseca]],\n        [_SSECKMD]: [, output.headers[_xasseckm]],\n        [_SSEKMSKI]: [, output.headers[_xasseakki]],\n        [_BKE]: [() => void 0 !== output.headers[_xassebke], () => __parseBoolean(output.headers[_xassebke])],\n        [_RC]: [, output.headers[_xarc]],\n    });\n    const data = __expectObject(await parseBody(output.body, context));\n    contents.CopyPartResult = de_CopyPartResult(data, context);\n    return contents;\n};\nexport const de_WriteGetObjectResponseCommand = async (output, context) => {\n    if (output.statusCode !== 200 && output.statusCode >= 300) {\n        return de_CommandError(output, context);\n    }\n    const contents = map({\n        $metadata: deserializeMetadata(output),\n    });\n    await collectBody(output.body, context);\n    return contents;\n};\nconst de_CommandError = async (output, context) => {\n    const parsedOutput = {\n        ...output,\n        body: await parseErrorBody(output.body, context),\n    };\n    const errorCode = loadRestXmlErrorCode(output, parsedOutput.body);\n    switch (errorCode) {\n        case \"NoSuchUpload\":\n        case \"com.amazonaws.s3#NoSuchUpload\":\n            throw await de_NoSuchUploadRes(parsedOutput, context);\n        case \"ObjectNotInActiveTierError\":\n        case \"com.amazonaws.s3#ObjectNotInActiveTierError\":\n            throw await de_ObjectNotInActiveTierErrorRes(parsedOutput, context);\n        case \"BucketAlreadyExists\":\n        case \"com.amazonaws.s3#BucketAlreadyExists\":\n            throw await de_BucketAlreadyExistsRes(parsedOutput, context);\n        case \"BucketAlreadyOwnedByYou\":\n        case \"com.amazonaws.s3#BucketAlreadyOwnedByYou\":\n            throw await de_BucketAlreadyOwnedByYouRes(parsedOutput, context);\n        case \"NoSuchBucket\":\n        case \"com.amazonaws.s3#NoSuchBucket\":\n            throw await de_NoSuchBucketRes(parsedOutput, context);\n        case \"InvalidObjectState\":\n        case \"com.amazonaws.s3#InvalidObjectState\":\n            throw await de_InvalidObjectStateRes(parsedOutput, context);\n        case \"NoSuchKey\":\n        case \"com.amazonaws.s3#NoSuchKey\":\n            throw await de_NoSuchKeyRes(parsedOutput, context);\n        case \"NotFound\":\n        case \"com.amazonaws.s3#NotFound\":\n            throw await de_NotFoundRes(parsedOutput, context);\n        case \"EncryptionTypeMismatch\":\n        case \"com.amazonaws.s3#EncryptionTypeMismatch\":\n            throw await de_EncryptionTypeMismatchRes(parsedOutput, context);\n        case \"InvalidRequest\":\n        case \"com.amazonaws.s3#InvalidRequest\":\n            throw await de_InvalidRequestRes(parsedOutput, context);\n        case \"InvalidWriteOffset\":\n        case \"com.amazonaws.s3#InvalidWriteOffset\":\n            throw await de_InvalidWriteOffsetRes(parsedOutput, context);\n        case \"TooManyParts\":\n        case \"com.amazonaws.s3#TooManyParts\":\n            throw await de_TooManyPartsRes(parsedOutput, context);\n        case \"ObjectAlreadyInActiveTierError\":\n        case \"com.amazonaws.s3#ObjectAlreadyInActiveTierError\":\n            throw await de_ObjectAlreadyInActiveTierErrorRes(parsedOutput, context);\n        default:\n            const parsedBody = parsedOutput.body;\n            return throwDefaultError({\n                output,\n                parsedBody,\n                errorCode,\n            });\n    }\n};\nconst throwDefaultError = withBaseException(__BaseException);\nconst de_BucketAlreadyExistsRes = async (parsedOutput, context) => {\n    const contents = map({});\n    const data = parsedOutput.body;\n    const exception = new BucketAlreadyExists({\n        $metadata: deserializeMetadata(parsedOutput),\n        ...contents,\n    });\n    return __decorateServiceException(exception, parsedOutput.body);\n};\nconst de_BucketAlreadyOwnedByYouRes = async (parsedOutput, context) => {\n    const contents = map({});\n    const data = parsedOutput.body;\n    const exception = new BucketAlreadyOwnedByYou({\n        $metadata: deserializeMetadata(parsedOutput),\n        ...contents,\n    });\n    return __decorateServiceException(exception, parsedOutput.body);\n};\nconst de_EncryptionTypeMismatchRes = async (parsedOutput, context) => {\n    const contents = map({});\n    const data = parsedOutput.body;\n    const exception = new EncryptionTypeMismatch({\n        $metadata: deserializeMetadata(parsedOutput),\n        ...contents,\n    });\n    return __decorateServiceException(exception, parsedOutput.body);\n};\nconst de_InvalidObjectStateRes = async (parsedOutput, context) => {\n    const contents = map({});\n    const data = parsedOutput.body;\n    if (data[_AT] != null) {\n        contents[_AT] = __expectString(data[_AT]);\n    }\n    if (data[_SC] != null) {\n        contents[_SC] = __expectString(data[_SC]);\n    }\n    const exception = new InvalidObjectState({\n        $metadata: deserializeMetadata(parsedOutput),\n        ...contents,\n    });\n    return __decorateServiceException(exception, parsedOutput.body);\n};\nconst de_InvalidRequestRes = async (parsedOutput, context) => {\n    const contents = map({});\n    const data = parsedOutput.body;\n    const exception = new InvalidRequest({\n        $metadata: deserializeMetadata(parsedOutput),\n        ...contents,\n    });\n    return __decorateServiceException(exception, parsedOutput.body);\n};\nconst de_InvalidWriteOffsetRes = async (parsedOutput, context) => {\n    const contents = map({});\n    const data = parsedOutput.body;\n    const exception = new InvalidWriteOffset({\n        $metadata: deserializeMetadata(parsedOutput),\n        ...contents,\n    });\n    return __decorateServiceException(exception, parsedOutput.body);\n};\nconst de_NoSuchBucketRes = async (parsedOutput, context) => {\n    const contents = map({});\n    const data = parsedOutput.body;\n    const exception = new NoSuchBucket({\n        $metadata: deserializeMetadata(parsedOutput),\n        ...contents,\n    });\n    return __decorateServiceException(exception, parsedOutput.body);\n};\nconst de_NoSuchKeyRes = async (parsedOutput, context) => {\n    const contents = map({});\n    const data = parsedOutput.body;\n    const exception = new NoSuchKey({\n        $metadata: deserializeMetadata(parsedOutput),\n        ...contents,\n    });\n    return __decorateServiceException(exception, parsedOutput.body);\n};\nconst de_NoSuchUploadRes = async (parsedOutput, context) => {\n    const contents = map({});\n    const data = parsedOutput.body;\n    const exception = new NoSuchUpload({\n        $metadata: deserializeMetadata(parsedOutput),\n        ...contents,\n    });\n    return __decorateServiceException(exception, parsedOutput.body);\n};\nconst de_NotFoundRes = async (parsedOutput, context) => {\n    const contents = map({});\n    const data = parsedOutput.body;\n    const exception = new NotFound({\n        $metadata: deserializeMetadata(parsedOutput),\n        ...contents,\n    });\n    return __decorateServiceException(exception, parsedOutput.body);\n};\nconst de_ObjectAlreadyInActiveTierErrorRes = async (parsedOutput, context) => {\n    const contents = map({});\n    const data = parsedOutput.body;\n    const exception = new ObjectAlreadyInActiveTierError({\n        $metadata: deserializeMetadata(parsedOutput),\n        ...contents,\n    });\n    return __decorateServiceException(exception, parsedOutput.body);\n};\nconst de_ObjectNotInActiveTierErrorRes = async (parsedOutput, context) => {\n    const contents = map({});\n    const data = parsedOutput.body;\n    const exception = new ObjectNotInActiveTierError({\n        $metadata: deserializeMetadata(parsedOutput),\n        ...contents,\n    });\n    return __decorateServiceException(exception, parsedOutput.body);\n};\nconst de_TooManyPartsRes = async (parsedOutput, context) => {\n    const contents = map({});\n    const data = parsedOutput.body;\n    const exception = new TooManyParts({\n        $metadata: deserializeMetadata(parsedOutput),\n        ...contents,\n    });\n    return __decorateServiceException(exception, parsedOutput.body);\n};\nconst de_SelectObjectContentEventStream = (output, context) => {\n    return context.eventStreamMarshaller.deserialize(output, async (event) => {\n        if (event[\"Records\"] != null) {\n            return {\n                Records: await de_RecordsEvent_event(event[\"Records\"], context),\n            };\n        }\n        if (event[\"Stats\"] != null) {\n            return {\n                Stats: await de_StatsEvent_event(event[\"Stats\"], context),\n            };\n        }\n        if (event[\"Progress\"] != null) {\n            return {\n                Progress: await de_ProgressEvent_event(event[\"Progress\"], context),\n            };\n        }\n        if (event[\"Cont\"] != null) {\n            return {\n                Cont: await de_ContinuationEvent_event(event[\"Cont\"], context),\n            };\n        }\n        if (event[\"End\"] != null) {\n            return {\n                End: await de_EndEvent_event(event[\"End\"], context),\n            };\n        }\n        return { $unknown: output };\n    });\n};\nconst de_ContinuationEvent_event = async (output, context) => {\n    const contents = {};\n    const data = await parseBody(output.body, context);\n    Object.assign(contents, de_ContinuationEvent(data, context));\n    return contents;\n};\nconst de_EndEvent_event = async (output, context) => {\n    const contents = {};\n    const data = await parseBody(output.body, context);\n    Object.assign(contents, de_EndEvent(data, context));\n    return contents;\n};\nconst de_ProgressEvent_event = async (output, context) => {\n    const contents = {};\n    const data = await parseBody(output.body, context);\n    contents.Details = de_Progress(data, context);\n    return contents;\n};\nconst de_RecordsEvent_event = async (output, context) => {\n    const contents = {};\n    contents.Payload = output.body;\n    return contents;\n};\nconst de_StatsEvent_event = async (output, context) => {\n    const contents = {};\n    const data = await parseBody(output.body, context);\n    contents.Details = de_Stats(data, context);\n    return contents;\n};\nconst se_AbortIncompleteMultipartUpload = (input, context) => {\n    const bn = new __XmlNode(_AIMU);\n    if (input[_DAI] != null) {\n        bn.c(__XmlNode.of(_DAI, String(input[_DAI])).n(_DAI));\n    }\n    return bn;\n};\nconst se_AccelerateConfiguration = (input, context) => {\n    const bn = new __XmlNode(_ACc);\n    if (input[_S] != null) {\n        bn.c(__XmlNode.of(_BAS, input[_S]).n(_S));\n    }\n    return bn;\n};\nconst se_AccessControlPolicy = (input, context) => {\n    const bn = new __XmlNode(_ACP);\n    bn.lc(input, \"Grants\", \"AccessControlList\", () => se_Grants(input[_Gr], context));\n    if (input[_O] != null) {\n        bn.c(se_Owner(input[_O], context).n(_O));\n    }\n    return bn;\n};\nconst se_AccessControlTranslation = (input, context) => {\n    const bn = new __XmlNode(_ACT);\n    if (input[_O] != null) {\n        bn.c(__XmlNode.of(_OOw, input[_O]).n(_O));\n    }\n    return bn;\n};\nconst se_AllowedHeaders = (input, context) => {\n    return input\n        .filter((e) => e != null)\n        .map((entry) => {\n        const n = __XmlNode.of(_AH, entry);\n        return n.n(_me);\n    });\n};\nconst se_AllowedMethods = (input, context) => {\n    return input\n        .filter((e) => e != null)\n        .map((entry) => {\n        const n = __XmlNode.of(_AM, entry);\n        return n.n(_me);\n    });\n};\nconst se_AllowedOrigins = (input, context) => {\n    return input\n        .filter((e) => e != null)\n        .map((entry) => {\n        const n = __XmlNode.of(_AO, entry);\n        return n.n(_me);\n    });\n};\nconst se_AnalyticsAndOperator = (input, context) => {\n    const bn = new __XmlNode(_AAO);\n    bn.cc(input, _P);\n    bn.l(input, \"Tags\", \"Tag\", () => se_TagSet(input[_Tag], context));\n    return bn;\n};\nconst se_AnalyticsConfiguration = (input, context) => {\n    const bn = new __XmlNode(_AC);\n    if (input[_I] != null) {\n        bn.c(__XmlNode.of(_AI, input[_I]).n(_I));\n    }\n    if (input[_F] != null) {\n        bn.c(se_AnalyticsFilter(input[_F], context).n(_F));\n    }\n    if (input[_SCA] != null) {\n        bn.c(se_StorageClassAnalysis(input[_SCA], context).n(_SCA));\n    }\n    return bn;\n};\nconst se_AnalyticsExportDestination = (input, context) => {\n    const bn = new __XmlNode(_AED);\n    if (input[_SBD] != null) {\n        bn.c(se_AnalyticsS3BucketDestination(input[_SBD], context).n(_SBD));\n    }\n    return bn;\n};\nconst se_AnalyticsFilter = (input, context) => {\n    const bn = new __XmlNode(_AF);\n    AnalyticsFilter.visit(input, {\n        Prefix: (value) => {\n            if (input[_P] != null) {\n                bn.c(__XmlNode.of(_P, value).n(_P));\n            }\n        },\n        Tag: (value) => {\n            if (input[_Ta] != null) {\n                bn.c(se_Tag(value, context).n(_Ta));\n            }\n        },\n        And: (value) => {\n            if (input[_A] != null) {\n                bn.c(se_AnalyticsAndOperator(value, context).n(_A));\n            }\n        },\n        _: (name, value) => {\n            if (!(value instanceof __XmlNode || value instanceof __XmlText)) {\n                throw new Error(\"Unable to serialize unknown union members in XML.\");\n            }\n            bn.c(new __XmlNode(name).c(value));\n        },\n    });\n    return bn;\n};\nconst se_AnalyticsS3BucketDestination = (input, context) => {\n    const bn = new __XmlNode(_ASBD);\n    if (input[_Fo] != null) {\n        bn.c(__XmlNode.of(_ASEFF, input[_Fo]).n(_Fo));\n    }\n    if (input[_BAI] != null) {\n        bn.c(__XmlNode.of(_AIc, input[_BAI]).n(_BAI));\n    }\n    if (input[_B] != null) {\n        bn.c(__XmlNode.of(_BN, input[_B]).n(_B));\n    }\n    bn.cc(input, _P);\n    return bn;\n};\nconst se_BucketInfo = (input, context) => {\n    const bn = new __XmlNode(_BI);\n    bn.cc(input, _DR);\n    if (input[_Ty] != null) {\n        bn.c(__XmlNode.of(_BT, input[_Ty]).n(_Ty));\n    }\n    return bn;\n};\nconst se_BucketLifecycleConfiguration = (input, context) => {\n    const bn = new __XmlNode(_BLC);\n    bn.l(input, \"Rules\", \"Rule\", () => se_LifecycleRules(input[_Rul], context));\n    return bn;\n};\nconst se_BucketLoggingStatus = (input, context) => {\n    const bn = new __XmlNode(_BLS);\n    if (input[_LE] != null) {\n        bn.c(se_LoggingEnabled(input[_LE], context).n(_LE));\n    }\n    return bn;\n};\nconst se_CompletedMultipartUpload = (input, context) => {\n    const bn = new __XmlNode(_CMU);\n    bn.l(input, \"Parts\", \"Part\", () => se_CompletedPartList(input[_Part], context));\n    return bn;\n};\nconst se_CompletedPart = (input, context) => {\n    const bn = new __XmlNode(_CPo);\n    bn.cc(input, _ETa);\n    bn.cc(input, _CCRC);\n    bn.cc(input, _CCRCC);\n    bn.cc(input, _CCRCNVME);\n    bn.cc(input, _CSHA);\n    bn.cc(input, _CSHAh);\n    if (input[_PN] != null) {\n        bn.c(__XmlNode.of(_PN, String(input[_PN])).n(_PN));\n    }\n    return bn;\n};\nconst se_CompletedPartList = (input, context) => {\n    return input\n        .filter((e) => e != null)\n        .map((entry) => {\n        const n = se_CompletedPart(entry, context);\n        return n.n(_me);\n    });\n};\nconst se_Condition = (input, context) => {\n    const bn = new __XmlNode(_Con);\n    bn.cc(input, _HECRE);\n    bn.cc(input, _KPE);\n    return bn;\n};\nconst se_CORSConfiguration = (input, context) => {\n    const bn = new __XmlNode(_CORSC);\n    bn.l(input, \"CORSRules\", \"CORSRule\", () => se_CORSRules(input[_CORSRu], context));\n    return bn;\n};\nconst se_CORSRule = (input, context) => {\n    const bn = new __XmlNode(_CORSR);\n    bn.cc(input, _ID_);\n    bn.l(input, \"AllowedHeaders\", \"AllowedHeader\", () => se_AllowedHeaders(input[_AHl], context));\n    bn.l(input, \"AllowedMethods\", \"AllowedMethod\", () => se_AllowedMethods(input[_AMl], context));\n    bn.l(input, \"AllowedOrigins\", \"AllowedOrigin\", () => se_AllowedOrigins(input[_AOl], context));\n    bn.l(input, \"ExposeHeaders\", \"ExposeHeader\", () => se_ExposeHeaders(input[_EH], context));\n    if (input[_MAS] != null) {\n        bn.c(__XmlNode.of(_MAS, String(input[_MAS])).n(_MAS));\n    }\n    return bn;\n};\nconst se_CORSRules = (input, context) => {\n    return input\n        .filter((e) => e != null)\n        .map((entry) => {\n        const n = se_CORSRule(entry, context);\n        return n.n(_me);\n    });\n};\nconst se_CreateBucketConfiguration = (input, context) => {\n    const bn = new __XmlNode(_CBC);\n    if (input[_LC] != null) {\n        bn.c(__XmlNode.of(_BLCu, input[_LC]).n(_LC));\n    }\n    if (input[_L] != null) {\n        bn.c(se_LocationInfo(input[_L], context).n(_L));\n    }\n    if (input[_B] != null) {\n        bn.c(se_BucketInfo(input[_B], context).n(_B));\n    }\n    return bn;\n};\nconst se_CSVInput = (input, context) => {\n    const bn = new __XmlNode(_CSVIn);\n    bn.cc(input, _FHI);\n    bn.cc(input, _Com);\n    bn.cc(input, _QEC);\n    bn.cc(input, _RD);\n    bn.cc(input, _FD);\n    bn.cc(input, _QCuo);\n    if (input[_AQRD] != null) {\n        bn.c(__XmlNode.of(_AQRD, String(input[_AQRD])).n(_AQRD));\n    }\n    return bn;\n};\nconst se_CSVOutput = (input, context) => {\n    const bn = new __XmlNode(_CSVO);\n    bn.cc(input, _QF);\n    bn.cc(input, _QEC);\n    bn.cc(input, _RD);\n    bn.cc(input, _FD);\n    bn.cc(input, _QCuo);\n    return bn;\n};\nconst se_DefaultRetention = (input, context) => {\n    const bn = new __XmlNode(_DRe);\n    if (input[_Mo] != null) {\n        bn.c(__XmlNode.of(_OLRM, input[_Mo]).n(_Mo));\n    }\n    if (input[_Da] != null) {\n        bn.c(__XmlNode.of(_Da, String(input[_Da])).n(_Da));\n    }\n    if (input[_Y] != null) {\n        bn.c(__XmlNode.of(_Y, String(input[_Y])).n(_Y));\n    }\n    return bn;\n};\nconst se_Delete = (input, context) => {\n    const bn = new __XmlNode(_Del);\n    bn.l(input, \"Objects\", \"Object\", () => se_ObjectIdentifierList(input[_Ob], context));\n    if (input[_Q] != null) {\n        bn.c(__XmlNode.of(_Q, String(input[_Q])).n(_Q));\n    }\n    return bn;\n};\nconst se_DeleteMarkerReplication = (input, context) => {\n    const bn = new __XmlNode(_DMR);\n    if (input[_S] != null) {\n        bn.c(__XmlNode.of(_DMRS, input[_S]).n(_S));\n    }\n    return bn;\n};\nconst se_Destination = (input, context) => {\n    const bn = new __XmlNode(_Des);\n    if (input[_B] != null) {\n        bn.c(__XmlNode.of(_BN, input[_B]).n(_B));\n    }\n    if (input[_Ac] != null) {\n        bn.c(__XmlNode.of(_AIc, input[_Ac]).n(_Ac));\n    }\n    bn.cc(input, _SC);\n    if (input[_ACT] != null) {\n        bn.c(se_AccessControlTranslation(input[_ACT], context).n(_ACT));\n    }\n    if (input[_ECn] != null) {\n        bn.c(se_EncryptionConfiguration(input[_ECn], context).n(_ECn));\n    }\n    if (input[_RTe] != null) {\n        bn.c(se_ReplicationTime(input[_RTe], context).n(_RTe));\n    }\n    if (input[_Me] != null) {\n        bn.c(se_Metrics(input[_Me], context).n(_Me));\n    }\n    return bn;\n};\nconst se_Encryption = (input, context) => {\n    const bn = new __XmlNode(_En);\n    if (input[_ETn] != null) {\n        bn.c(__XmlNode.of(_SSE, input[_ETn]).n(_ETn));\n    }\n    if (input[_KMSKI] != null) {\n        bn.c(__XmlNode.of(_SSEKMSKI, input[_KMSKI]).n(_KMSKI));\n    }\n    bn.cc(input, _KMSC);\n    return bn;\n};\nconst se_EncryptionConfiguration = (input, context) => {\n    const bn = new __XmlNode(_ECn);\n    bn.cc(input, _RKKID);\n    return bn;\n};\nconst se_ErrorDocument = (input, context) => {\n    const bn = new __XmlNode(_ED);\n    if (input[_K] != null) {\n        bn.c(__XmlNode.of(_OK, input[_K]).n(_K));\n    }\n    return bn;\n};\nconst se_EventBridgeConfiguration = (input, context) => {\n    const bn = new __XmlNode(_EBC);\n    return bn;\n};\nconst se_EventList = (input, context) => {\n    return input\n        .filter((e) => e != null)\n        .map((entry) => {\n        const n = __XmlNode.of(_Ev, entry);\n        return n.n(_me);\n    });\n};\nconst se_ExistingObjectReplication = (input, context) => {\n    const bn = new __XmlNode(_EOR);\n    if (input[_S] != null) {\n        bn.c(__XmlNode.of(_EORS, input[_S]).n(_S));\n    }\n    return bn;\n};\nconst se_ExposeHeaders = (input, context) => {\n    return input\n        .filter((e) => e != null)\n        .map((entry) => {\n        const n = __XmlNode.of(_EHx, entry);\n        return n.n(_me);\n    });\n};\nconst se_FilterRule = (input, context) => {\n    const bn = new __XmlNode(_FR);\n    if (input[_N] != null) {\n        bn.c(__XmlNode.of(_FRN, input[_N]).n(_N));\n    }\n    if (input[_Va] != null) {\n        bn.c(__XmlNode.of(_FRV, input[_Va]).n(_Va));\n    }\n    return bn;\n};\nconst se_FilterRuleList = (input, context) => {\n    return input\n        .filter((e) => e != null)\n        .map((entry) => {\n        const n = se_FilterRule(entry, context);\n        return n.n(_me);\n    });\n};\nconst se_GlacierJobParameters = (input, context) => {\n    const bn = new __XmlNode(_GJP);\n    bn.cc(input, _Ti);\n    return bn;\n};\nconst se_Grant = (input, context) => {\n    const bn = new __XmlNode(_G);\n    if (input[_Gra] != null) {\n        const n = se_Grantee(input[_Gra], context).n(_Gra);\n        n.a(\"xmlns:xsi\", \"http://www.w3.org/2001/XMLSchema-instance\");\n        bn.c(n);\n    }\n    bn.cc(input, _Pe);\n    return bn;\n};\nconst se_Grantee = (input, context) => {\n    const bn = new __XmlNode(_Gra);\n    bn.cc(input, _DN);\n    bn.cc(input, _EA);\n    bn.cc(input, _ID_);\n    bn.cc(input, _URI);\n    bn.a(\"xsi:type\", input[_Ty]);\n    return bn;\n};\nconst se_Grants = (input, context) => {\n    return input\n        .filter((e) => e != null)\n        .map((entry) => {\n        const n = se_Grant(entry, context);\n        return n.n(_G);\n    });\n};\nconst se_IndexDocument = (input, context) => {\n    const bn = new __XmlNode(_ID);\n    bn.cc(input, _Su);\n    return bn;\n};\nconst se_InputSerialization = (input, context) => {\n    const bn = new __XmlNode(_IS);\n    if (input[_CSV] != null) {\n        bn.c(se_CSVInput(input[_CSV], context).n(_CSV));\n    }\n    bn.cc(input, _CTom);\n    if (input[_JSON] != null) {\n        bn.c(se_JSONInput(input[_JSON], context).n(_JSON));\n    }\n    if (input[_Parq] != null) {\n        bn.c(se_ParquetInput(input[_Parq], context).n(_Parq));\n    }\n    return bn;\n};\nconst se_IntelligentTieringAndOperator = (input, context) => {\n    const bn = new __XmlNode(_ITAO);\n    bn.cc(input, _P);\n    bn.l(input, \"Tags\", \"Tag\", () => se_TagSet(input[_Tag], context));\n    return bn;\n};\nconst se_IntelligentTieringConfiguration = (input, context) => {\n    const bn = new __XmlNode(_ITC);\n    if (input[_I] != null) {\n        bn.c(__XmlNode.of(_ITI, input[_I]).n(_I));\n    }\n    if (input[_F] != null) {\n        bn.c(se_IntelligentTieringFilter(input[_F], context).n(_F));\n    }\n    if (input[_S] != null) {\n        bn.c(__XmlNode.of(_ITS, input[_S]).n(_S));\n    }\n    bn.l(input, \"Tierings\", \"Tiering\", () => se_TieringList(input[_Tie], context));\n    return bn;\n};\nconst se_IntelligentTieringFilter = (input, context) => {\n    const bn = new __XmlNode(_ITF);\n    bn.cc(input, _P);\n    if (input[_Ta] != null) {\n        bn.c(se_Tag(input[_Ta], context).n(_Ta));\n    }\n    if (input[_A] != null) {\n        bn.c(se_IntelligentTieringAndOperator(input[_A], context).n(_A));\n    }\n    return bn;\n};\nconst se_InventoryConfiguration = (input, context) => {\n    const bn = new __XmlNode(_IC);\n    if (input[_Des] != null) {\n        bn.c(se_InventoryDestination(input[_Des], context).n(_Des));\n    }\n    if (input[_IE] != null) {\n        bn.c(__XmlNode.of(_IE, String(input[_IE])).n(_IE));\n    }\n    if (input[_F] != null) {\n        bn.c(se_InventoryFilter(input[_F], context).n(_F));\n    }\n    if (input[_I] != null) {\n        bn.c(__XmlNode.of(_II, input[_I]).n(_I));\n    }\n    if (input[_IOV] != null) {\n        bn.c(__XmlNode.of(_IIOV, input[_IOV]).n(_IOV));\n    }\n    bn.lc(input, \"OptionalFields\", \"OptionalFields\", () => se_InventoryOptionalFields(input[_OF], context));\n    if (input[_Sc] != null) {\n        bn.c(se_InventorySchedule(input[_Sc], context).n(_Sc));\n    }\n    return bn;\n};\nconst se_InventoryDestination = (input, context) => {\n    const bn = new __XmlNode(_IDn);\n    if (input[_SBD] != null) {\n        bn.c(se_InventoryS3BucketDestination(input[_SBD], context).n(_SBD));\n    }\n    return bn;\n};\nconst se_InventoryEncryption = (input, context) => {\n    const bn = new __XmlNode(_IEn);\n    if (input[_SSES] != null) {\n        bn.c(se_SSES3(input[_SSES], context).n(_SS));\n    }\n    if (input[_SSEKMS] != null) {\n        bn.c(se_SSEKMS(input[_SSEKMS], context).n(_SK));\n    }\n    return bn;\n};\nconst se_InventoryFilter = (input, context) => {\n    const bn = new __XmlNode(_IF);\n    bn.cc(input, _P);\n    return bn;\n};\nconst se_InventoryOptionalFields = (input, context) => {\n    return input\n        .filter((e) => e != null)\n        .map((entry) => {\n        const n = __XmlNode.of(_IOF, entry);\n        return n.n(_Fi);\n    });\n};\nconst se_InventoryS3BucketDestination = (input, context) => {\n    const bn = new __XmlNode(_ISBD);\n    bn.cc(input, _AIc);\n    if (input[_B] != null) {\n        bn.c(__XmlNode.of(_BN, input[_B]).n(_B));\n    }\n    if (input[_Fo] != null) {\n        bn.c(__XmlNode.of(_IFn, input[_Fo]).n(_Fo));\n    }\n    bn.cc(input, _P);\n    if (input[_En] != null) {\n        bn.c(se_InventoryEncryption(input[_En], context).n(_En));\n    }\n    return bn;\n};\nconst se_InventorySchedule = (input, context) => {\n    const bn = new __XmlNode(_ISn);\n    if (input[_Fr] != null) {\n        bn.c(__XmlNode.of(_IFnv, input[_Fr]).n(_Fr));\n    }\n    return bn;\n};\nconst se_JSONInput = (input, context) => {\n    const bn = new __XmlNode(_JSONI);\n    if (input[_Ty] != null) {\n        bn.c(__XmlNode.of(_JSONT, input[_Ty]).n(_Ty));\n    }\n    return bn;\n};\nconst se_JSONOutput = (input, context) => {\n    const bn = new __XmlNode(_JSONO);\n    bn.cc(input, _RD);\n    return bn;\n};\nconst se_LambdaFunctionConfiguration = (input, context) => {\n    const bn = new __XmlNode(_LFCa);\n    if (input[_I] != null) {\n        bn.c(__XmlNode.of(_NI, input[_I]).n(_I));\n    }\n    if (input[_LFA] != null) {\n        bn.c(__XmlNode.of(_LFA, input[_LFA]).n(_CF));\n    }\n    bn.l(input, \"Events\", \"Event\", () => se_EventList(input[_Eve], context));\n    if (input[_F] != null) {\n        bn.c(se_NotificationConfigurationFilter(input[_F], context).n(_F));\n    }\n    return bn;\n};\nconst se_LambdaFunctionConfigurationList = (input, context) => {\n    return input\n        .filter((e) => e != null)\n        .map((entry) => {\n        const n = se_LambdaFunctionConfiguration(entry, context);\n        return n.n(_me);\n    });\n};\nconst se_LifecycleExpiration = (input, context) => {\n    const bn = new __XmlNode(_LEi);\n    if (input[_Dat] != null) {\n        bn.c(__XmlNode.of(_Dat, __serializeDateTime(input[_Dat]).toString()).n(_Dat));\n    }\n    if (input[_Da] != null) {\n        bn.c(__XmlNode.of(_Da, String(input[_Da])).n(_Da));\n    }\n    if (input[_EODM] != null) {\n        bn.c(__XmlNode.of(_EODM, String(input[_EODM])).n(_EODM));\n    }\n    return bn;\n};\nconst se_LifecycleRule = (input, context) => {\n    const bn = new __XmlNode(_LR);\n    if (input[_Exp] != null) {\n        bn.c(se_LifecycleExpiration(input[_Exp], context).n(_Exp));\n    }\n    bn.cc(input, _ID_);\n    bn.cc(input, _P);\n    if (input[_F] != null) {\n        bn.c(se_LifecycleRuleFilter(input[_F], context).n(_F));\n    }\n    if (input[_S] != null) {\n        bn.c(__XmlNode.of(_ESx, input[_S]).n(_S));\n    }\n    bn.l(input, \"Transitions\", \"Transition\", () => se_TransitionList(input[_Tr], context));\n    bn.l(input, \"NoncurrentVersionTransitions\", \"NoncurrentVersionTransition\", () => se_NoncurrentVersionTransitionList(input[_NVT], context));\n    if (input[_NVE] != null) {\n        bn.c(se_NoncurrentVersionExpiration(input[_NVE], context).n(_NVE));\n    }\n    if (input[_AIMU] != null) {\n        bn.c(se_AbortIncompleteMultipartUpload(input[_AIMU], context).n(_AIMU));\n    }\n    return bn;\n};\nconst se_LifecycleRuleAndOperator = (input, context) => {\n    const bn = new __XmlNode(_LRAO);\n    bn.cc(input, _P);\n    bn.l(input, \"Tags\", \"Tag\", () => se_TagSet(input[_Tag], context));\n    if (input[_OSGT] != null) {\n        bn.c(__XmlNode.of(_OSGTB, String(input[_OSGT])).n(_OSGT));\n    }\n    if (input[_OSLT] != null) {\n        bn.c(__XmlNode.of(_OSLTB, String(input[_OSLT])).n(_OSLT));\n    }\n    return bn;\n};\nconst se_LifecycleRuleFilter = (input, context) => {\n    const bn = new __XmlNode(_LRF);\n    bn.cc(input, _P);\n    if (input[_Ta] != null) {\n        bn.c(se_Tag(input[_Ta], context).n(_Ta));\n    }\n    if (input[_OSGT] != null) {\n        bn.c(__XmlNode.of(_OSGTB, String(input[_OSGT])).n(_OSGT));\n    }\n    if (input[_OSLT] != null) {\n        bn.c(__XmlNode.of(_OSLTB, String(input[_OSLT])).n(_OSLT));\n    }\n    if (input[_A] != null) {\n        bn.c(se_LifecycleRuleAndOperator(input[_A], context).n(_A));\n    }\n    return bn;\n};\nconst se_LifecycleRules = (input, context) => {\n    return input\n        .filter((e) => e != null)\n        .map((entry) => {\n        const n = se_LifecycleRule(entry, context);\n        return n.n(_me);\n    });\n};\nconst se_LocationInfo = (input, context) => {\n    const bn = new __XmlNode(_LI);\n    if (input[_Ty] != null) {\n        bn.c(__XmlNode.of(_LT, input[_Ty]).n(_Ty));\n    }\n    if (input[_N] != null) {\n        bn.c(__XmlNode.of(_LNAS, input[_N]).n(_N));\n    }\n    return bn;\n};\nconst se_LoggingEnabled = (input, context) => {\n    const bn = new __XmlNode(_LE);\n    bn.cc(input, _TB);\n    bn.lc(input, \"TargetGrants\", \"TargetGrants\", () => se_TargetGrants(input[_TG], context));\n    bn.cc(input, _TP);\n    if (input[_TOKF] != null) {\n        bn.c(se_TargetObjectKeyFormat(input[_TOKF], context).n(_TOKF));\n    }\n    return bn;\n};\nconst se_MetadataEntry = (input, context) => {\n    const bn = new __XmlNode(_ME);\n    if (input[_N] != null) {\n        bn.c(__XmlNode.of(_MKe, input[_N]).n(_N));\n    }\n    if (input[_Va] != null) {\n        bn.c(__XmlNode.of(_MV, input[_Va]).n(_Va));\n    }\n    return bn;\n};\nconst se_MetadataTableConfiguration = (input, context) => {\n    const bn = new __XmlNode(_MTC);\n    if (input[_STD] != null) {\n        bn.c(se_S3TablesDestination(input[_STD], context).n(_STD));\n    }\n    return bn;\n};\nconst se_Metrics = (input, context) => {\n    const bn = new __XmlNode(_Me);\n    if (input[_S] != null) {\n        bn.c(__XmlNode.of(_MS, input[_S]).n(_S));\n    }\n    if (input[_ETv] != null) {\n        bn.c(se_ReplicationTimeValue(input[_ETv], context).n(_ETv));\n    }\n    return bn;\n};\nconst se_MetricsAndOperator = (input, context) => {\n    const bn = new __XmlNode(_MAO);\n    bn.cc(input, _P);\n    bn.l(input, \"Tags\", \"Tag\", () => se_TagSet(input[_Tag], context));\n    bn.cc(input, _APAc);\n    return bn;\n};\nconst se_MetricsConfiguration = (input, context) => {\n    const bn = new __XmlNode(_MC);\n    if (input[_I] != null) {\n        bn.c(__XmlNode.of(_MI, input[_I]).n(_I));\n    }\n    if (input[_F] != null) {\n        bn.c(se_MetricsFilter(input[_F], context).n(_F));\n    }\n    return bn;\n};\nconst se_MetricsFilter = (input, context) => {\n    const bn = new __XmlNode(_MF);\n    MetricsFilter.visit(input, {\n        Prefix: (value) => {\n            if (input[_P] != null) {\n                bn.c(__XmlNode.of(_P, value).n(_P));\n            }\n        },\n        Tag: (value) => {\n            if (input[_Ta] != null) {\n                bn.c(se_Tag(value, context).n(_Ta));\n            }\n        },\n        AccessPointArn: (value) => {\n            if (input[_APAc] != null) {\n                bn.c(__XmlNode.of(_APAc, value).n(_APAc));\n            }\n        },\n        And: (value) => {\n            if (input[_A] != null) {\n                bn.c(se_MetricsAndOperator(value, context).n(_A));\n            }\n        },\n        _: (name, value) => {\n            if (!(value instanceof __XmlNode || value instanceof __XmlText)) {\n                throw new Error(\"Unable to serialize unknown union members in XML.\");\n            }\n            bn.c(new __XmlNode(name).c(value));\n        },\n    });\n    return bn;\n};\nconst se_NoncurrentVersionExpiration = (input, context) => {\n    const bn = new __XmlNode(_NVE);\n    if (input[_ND] != null) {\n        bn.c(__XmlNode.of(_Da, String(input[_ND])).n(_ND));\n    }\n    if (input[_NNV] != null) {\n        bn.c(__XmlNode.of(_VC, String(input[_NNV])).n(_NNV));\n    }\n    return bn;\n};\nconst se_NoncurrentVersionTransition = (input, context) => {\n    const bn = new __XmlNode(_NVTo);\n    if (input[_ND] != null) {\n        bn.c(__XmlNode.of(_Da, String(input[_ND])).n(_ND));\n    }\n    if (input[_SC] != null) {\n        bn.c(__XmlNode.of(_TSC, input[_SC]).n(_SC));\n    }\n    if (input[_NNV] != null) {\n        bn.c(__XmlNode.of(_VC, String(input[_NNV])).n(_NNV));\n    }\n    return bn;\n};\nconst se_NoncurrentVersionTransitionList = (input, context) => {\n    return input\n        .filter((e) => e != null)\n        .map((entry) => {\n        const n = se_NoncurrentVersionTransition(entry, context);\n        return n.n(_me);\n    });\n};\nconst se_NotificationConfiguration = (input, context) => {\n    const bn = new __XmlNode(_NC);\n    bn.l(input, \"TopicConfigurations\", \"TopicConfiguration\", () => se_TopicConfigurationList(input[_TCop], context));\n    bn.l(input, \"QueueConfigurations\", \"QueueConfiguration\", () => se_QueueConfigurationList(input[_QCu], context));\n    bn.l(input, \"LambdaFunctionConfigurations\", \"CloudFunctionConfiguration\", () => se_LambdaFunctionConfigurationList(input[_LFC], context));\n    if (input[_EBC] != null) {\n        bn.c(se_EventBridgeConfiguration(input[_EBC], context).n(_EBC));\n    }\n    return bn;\n};\nconst se_NotificationConfigurationFilter = (input, context) => {\n    const bn = new __XmlNode(_NCF);\n    if (input[_K] != null) {\n        bn.c(se_S3KeyFilter(input[_K], context).n(_SKe));\n    }\n    return bn;\n};\nconst se_ObjectIdentifier = (input, context) => {\n    const bn = new __XmlNode(_OI);\n    if (input[_K] != null) {\n        bn.c(__XmlNode.of(_OK, input[_K]).n(_K));\n    }\n    if (input[_VI] != null) {\n        bn.c(__XmlNode.of(_OVI, input[_VI]).n(_VI));\n    }\n    bn.cc(input, _ETa);\n    if (input[_LMT] != null) {\n        bn.c(__XmlNode.of(_LMT, __dateToUtcString(input[_LMT]).toString()).n(_LMT));\n    }\n    if (input[_Si] != null) {\n        bn.c(__XmlNode.of(_Si, String(input[_Si])).n(_Si));\n    }\n    return bn;\n};\nconst se_ObjectIdentifierList = (input, context) => {\n    return input\n        .filter((e) => e != null)\n        .map((entry) => {\n        const n = se_ObjectIdentifier(entry, context);\n        return n.n(_me);\n    });\n};\nconst se_ObjectLockConfiguration = (input, context) => {\n    const bn = new __XmlNode(_OLC);\n    bn.cc(input, _OLE);\n    if (input[_Ru] != null) {\n        bn.c(se_ObjectLockRule(input[_Ru], context).n(_Ru));\n    }\n    return bn;\n};\nconst se_ObjectLockLegalHold = (input, context) => {\n    const bn = new __XmlNode(_OLLH);\n    if (input[_S] != null) {\n        bn.c(__XmlNode.of(_OLLHS, input[_S]).n(_S));\n    }\n    return bn;\n};\nconst se_ObjectLockRetention = (input, context) => {\n    const bn = new __XmlNode(_OLR);\n    if (input[_Mo] != null) {\n        bn.c(__XmlNode.of(_OLRM, input[_Mo]).n(_Mo));\n    }\n    if (input[_RUD] != null) {\n        bn.c(__XmlNode.of(_Dat, __serializeDateTime(input[_RUD]).toString()).n(_RUD));\n    }\n    return bn;\n};\nconst se_ObjectLockRule = (input, context) => {\n    const bn = new __XmlNode(_OLRb);\n    if (input[_DRe] != null) {\n        bn.c(se_DefaultRetention(input[_DRe], context).n(_DRe));\n    }\n    return bn;\n};\nconst se_OutputLocation = (input, context) => {\n    const bn = new __XmlNode(_OL);\n    if (input[_S_] != null) {\n        bn.c(se_S3Location(input[_S_], context).n(_S_));\n    }\n    return bn;\n};\nconst se_OutputSerialization = (input, context) => {\n    const bn = new __XmlNode(_OS);\n    if (input[_CSV] != null) {\n        bn.c(se_CSVOutput(input[_CSV], context).n(_CSV));\n    }\n    if (input[_JSON] != null) {\n        bn.c(se_JSONOutput(input[_JSON], context).n(_JSON));\n    }\n    return bn;\n};\nconst se_Owner = (input, context) => {\n    const bn = new __XmlNode(_O);\n    bn.cc(input, _DN);\n    bn.cc(input, _ID_);\n    return bn;\n};\nconst se_OwnershipControls = (input, context) => {\n    const bn = new __XmlNode(_OC);\n    bn.l(input, \"Rules\", \"Rule\", () => se_OwnershipControlsRules(input[_Rul], context));\n    return bn;\n};\nconst se_OwnershipControlsRule = (input, context) => {\n    const bn = new __XmlNode(_OCR);\n    bn.cc(input, _OO);\n    return bn;\n};\nconst se_OwnershipControlsRules = (input, context) => {\n    return input\n        .filter((e) => e != null)\n        .map((entry) => {\n        const n = se_OwnershipControlsRule(entry, context);\n        return n.n(_me);\n    });\n};\nconst se_ParquetInput = (input, context) => {\n    const bn = new __XmlNode(_PI);\n    return bn;\n};\nconst se_PartitionedPrefix = (input, context) => {\n    const bn = new __XmlNode(_PP);\n    bn.cc(input, _PDS);\n    return bn;\n};\nconst se_PublicAccessBlockConfiguration = (input, context) => {\n    const bn = new __XmlNode(_PABC);\n    if (input[_BPA] != null) {\n        bn.c(__XmlNode.of(_Se, String(input[_BPA])).n(_BPA));\n    }\n    if (input[_IPA] != null) {\n        bn.c(__XmlNode.of(_Se, String(input[_IPA])).n(_IPA));\n    }\n    if (input[_BPP] != null) {\n        bn.c(__XmlNode.of(_Se, String(input[_BPP])).n(_BPP));\n    }\n    if (input[_RPB] != null) {\n        bn.c(__XmlNode.of(_Se, String(input[_RPB])).n(_RPB));\n    }\n    return bn;\n};\nconst se_QueueConfiguration = (input, context) => {\n    const bn = new __XmlNode(_QC);\n    if (input[_I] != null) {\n        bn.c(__XmlNode.of(_NI, input[_I]).n(_I));\n    }\n    if (input[_QA] != null) {\n        bn.c(__XmlNode.of(_QA, input[_QA]).n(_Qu));\n    }\n    bn.l(input, \"Events\", \"Event\", () => se_EventList(input[_Eve], context));\n    if (input[_F] != null) {\n        bn.c(se_NotificationConfigurationFilter(input[_F], context).n(_F));\n    }\n    return bn;\n};\nconst se_QueueConfigurationList = (input, context) => {\n    return input\n        .filter((e) => e != null)\n        .map((entry) => {\n        const n = se_QueueConfiguration(entry, context);\n        return n.n(_me);\n    });\n};\nconst se_Redirect = (input, context) => {\n    const bn = new __XmlNode(_Red);\n    bn.cc(input, _HN);\n    bn.cc(input, _HRC);\n    bn.cc(input, _Pr);\n    bn.cc(input, _RKPW);\n    bn.cc(input, _RKW);\n    return bn;\n};\nconst se_RedirectAllRequestsTo = (input, context) => {\n    const bn = new __XmlNode(_RART);\n    bn.cc(input, _HN);\n    bn.cc(input, _Pr);\n    return bn;\n};\nconst se_ReplicaModifications = (input, context) => {\n    const bn = new __XmlNode(_RM);\n    if (input[_S] != null) {\n        bn.c(__XmlNode.of(_RMS, input[_S]).n(_S));\n    }\n    return bn;\n};\nconst se_ReplicationConfiguration = (input, context) => {\n    const bn = new __XmlNode(_RCe);\n    bn.cc(input, _Ro);\n    bn.l(input, \"Rules\", \"Rule\", () => se_ReplicationRules(input[_Rul], context));\n    return bn;\n};\nconst se_ReplicationRule = (input, context) => {\n    const bn = new __XmlNode(_RRe);\n    bn.cc(input, _ID_);\n    if (input[_Pri] != null) {\n        bn.c(__XmlNode.of(_Pri, String(input[_Pri])).n(_Pri));\n    }\n    bn.cc(input, _P);\n    if (input[_F] != null) {\n        bn.c(se_ReplicationRuleFilter(input[_F], context).n(_F));\n    }\n    if (input[_S] != null) {\n        bn.c(__XmlNode.of(_RRS, input[_S]).n(_S));\n    }\n    if (input[_SSC] != null) {\n        bn.c(se_SourceSelectionCriteria(input[_SSC], context).n(_SSC));\n    }\n    if (input[_EOR] != null) {\n        bn.c(se_ExistingObjectReplication(input[_EOR], context).n(_EOR));\n    }\n    if (input[_Des] != null) {\n        bn.c(se_Destination(input[_Des], context).n(_Des));\n    }\n    if (input[_DMR] != null) {\n        bn.c(se_DeleteMarkerReplication(input[_DMR], context).n(_DMR));\n    }\n    return bn;\n};\nconst se_ReplicationRuleAndOperator = (input, context) => {\n    const bn = new __XmlNode(_RRAO);\n    bn.cc(input, _P);\n    bn.l(input, \"Tags\", \"Tag\", () => se_TagSet(input[_Tag], context));\n    return bn;\n};\nconst se_ReplicationRuleFilter = (input, context) => {\n    const bn = new __XmlNode(_RRF);\n    bn.cc(input, _P);\n    if (input[_Ta] != null) {\n        bn.c(se_Tag(input[_Ta], context).n(_Ta));\n    }\n    if (input[_A] != null) {\n        bn.c(se_ReplicationRuleAndOperator(input[_A], context).n(_A));\n    }\n    return bn;\n};\nconst se_ReplicationRules = (input, context) => {\n    return input\n        .filter((e) => e != null)\n        .map((entry) => {\n        const n = se_ReplicationRule(entry, context);\n        return n.n(_me);\n    });\n};\nconst se_ReplicationTime = (input, context) => {\n    const bn = new __XmlNode(_RTe);\n    if (input[_S] != null) {\n        bn.c(__XmlNode.of(_RTS, input[_S]).n(_S));\n    }\n    if (input[_Tim] != null) {\n        bn.c(se_ReplicationTimeValue(input[_Tim], context).n(_Tim));\n    }\n    return bn;\n};\nconst se_ReplicationTimeValue = (input, context) => {\n    const bn = new __XmlNode(_RTV);\n    if (input[_Mi] != null) {\n        bn.c(__XmlNode.of(_Mi, String(input[_Mi])).n(_Mi));\n    }\n    return bn;\n};\nconst se_RequestPaymentConfiguration = (input, context) => {\n    const bn = new __XmlNode(_RPC);\n    bn.cc(input, _Pa);\n    return bn;\n};\nconst se_RequestProgress = (input, context) => {\n    const bn = new __XmlNode(_RPe);\n    if (input[_Ena] != null) {\n        bn.c(__XmlNode.of(_ERP, String(input[_Ena])).n(_Ena));\n    }\n    return bn;\n};\nconst se_RestoreRequest = (input, context) => {\n    const bn = new __XmlNode(_RRes);\n    if (input[_Da] != null) {\n        bn.c(__XmlNode.of(_Da, String(input[_Da])).n(_Da));\n    }\n    if (input[_GJP] != null) {\n        bn.c(se_GlacierJobParameters(input[_GJP], context).n(_GJP));\n    }\n    if (input[_Ty] != null) {\n        bn.c(__XmlNode.of(_RRT, input[_Ty]).n(_Ty));\n    }\n    bn.cc(input, _Ti);\n    bn.cc(input, _Desc);\n    if (input[_SP] != null) {\n        bn.c(se_SelectParameters(input[_SP], context).n(_SP));\n    }\n    if (input[_OL] != null) {\n        bn.c(se_OutputLocation(input[_OL], context).n(_OL));\n    }\n    return bn;\n};\nconst se_RoutingRule = (input, context) => {\n    const bn = new __XmlNode(_RRou);\n    if (input[_Con] != null) {\n        bn.c(se_Condition(input[_Con], context).n(_Con));\n    }\n    if (input[_Red] != null) {\n        bn.c(se_Redirect(input[_Red], context).n(_Red));\n    }\n    return bn;\n};\nconst se_RoutingRules = (input, context) => {\n    return input\n        .filter((e) => e != null)\n        .map((entry) => {\n        const n = se_RoutingRule(entry, context);\n        return n.n(_RRou);\n    });\n};\nconst se_S3KeyFilter = (input, context) => {\n    const bn = new __XmlNode(_SKF);\n    bn.l(input, \"FilterRules\", \"FilterRule\", () => se_FilterRuleList(input[_FRi], context));\n    return bn;\n};\nconst se_S3Location = (input, context) => {\n    const bn = new __XmlNode(_SL);\n    bn.cc(input, _BN);\n    if (input[_P] != null) {\n        bn.c(__XmlNode.of(_LP, input[_P]).n(_P));\n    }\n    if (input[_En] != null) {\n        bn.c(se_Encryption(input[_En], context).n(_En));\n    }\n    if (input[_CACL] != null) {\n        bn.c(__XmlNode.of(_OCACL, input[_CACL]).n(_CACL));\n    }\n    bn.lc(input, \"AccessControlList\", \"AccessControlList\", () => se_Grants(input[_ACLc], context));\n    if (input[_T] != null) {\n        bn.c(se_Tagging(input[_T], context).n(_T));\n    }\n    bn.lc(input, \"UserMetadata\", \"UserMetadata\", () => se_UserMetadata(input[_UM], context));\n    bn.cc(input, _SC);\n    return bn;\n};\nconst se_S3TablesDestination = (input, context) => {\n    const bn = new __XmlNode(_STD);\n    if (input[_TBA] != null) {\n        bn.c(__XmlNode.of(_STBA, input[_TBA]).n(_TBA));\n    }\n    if (input[_TN] != null) {\n        bn.c(__XmlNode.of(_STN, input[_TN]).n(_TN));\n    }\n    return bn;\n};\nconst se_ScanRange = (input, context) => {\n    const bn = new __XmlNode(_SR);\n    if (input[_St] != null) {\n        bn.c(__XmlNode.of(_St, String(input[_St])).n(_St));\n    }\n    if (input[_End] != null) {\n        bn.c(__XmlNode.of(_End, String(input[_End])).n(_End));\n    }\n    return bn;\n};\nconst se_SelectParameters = (input, context) => {\n    const bn = new __XmlNode(_SP);\n    if (input[_IS] != null) {\n        bn.c(se_InputSerialization(input[_IS], context).n(_IS));\n    }\n    bn.cc(input, _ETx);\n    bn.cc(input, _Ex);\n    if (input[_OS] != null) {\n        bn.c(se_OutputSerialization(input[_OS], context).n(_OS));\n    }\n    return bn;\n};\nconst se_ServerSideEncryptionByDefault = (input, context) => {\n    const bn = new __XmlNode(_SSEBD);\n    if (input[_SSEA] != null) {\n        bn.c(__XmlNode.of(_SSE, input[_SSEA]).n(_SSEA));\n    }\n    if (input[_KMSMKID] != null) {\n        bn.c(__XmlNode.of(_SSEKMSKI, input[_KMSMKID]).n(_KMSMKID));\n    }\n    return bn;\n};\nconst se_ServerSideEncryptionConfiguration = (input, context) => {\n    const bn = new __XmlNode(_SSEC);\n    bn.l(input, \"Rules\", \"Rule\", () => se_ServerSideEncryptionRules(input[_Rul], context));\n    return bn;\n};\nconst se_ServerSideEncryptionRule = (input, context) => {\n    const bn = new __XmlNode(_SSER);\n    if (input[_ASSEBD] != null) {\n        bn.c(se_ServerSideEncryptionByDefault(input[_ASSEBD], context).n(_ASSEBD));\n    }\n    if (input[_BKE] != null) {\n        bn.c(__XmlNode.of(_BKE, String(input[_BKE])).n(_BKE));\n    }\n    return bn;\n};\nconst se_ServerSideEncryptionRules = (input, context) => {\n    return input\n        .filter((e) => e != null)\n        .map((entry) => {\n        const n = se_ServerSideEncryptionRule(entry, context);\n        return n.n(_me);\n    });\n};\nconst se_SimplePrefix = (input, context) => {\n    const bn = new __XmlNode(_SPi);\n    return bn;\n};\nconst se_SourceSelectionCriteria = (input, context) => {\n    const bn = new __XmlNode(_SSC);\n    if (input[_SKEO] != null) {\n        bn.c(se_SseKmsEncryptedObjects(input[_SKEO], context).n(_SKEO));\n    }\n    if (input[_RM] != null) {\n        bn.c(se_ReplicaModifications(input[_RM], context).n(_RM));\n    }\n    return bn;\n};\nconst se_SSEKMS = (input, context) => {\n    const bn = new __XmlNode(_SK);\n    if (input[_KI] != null) {\n        bn.c(__XmlNode.of(_SSEKMSKI, input[_KI]).n(_KI));\n    }\n    return bn;\n};\nconst se_SseKmsEncryptedObjects = (input, context) => {\n    const bn = new __XmlNode(_SKEO);\n    if (input[_S] != null) {\n        bn.c(__XmlNode.of(_SKEOS, input[_S]).n(_S));\n    }\n    return bn;\n};\nconst se_SSES3 = (input, context) => {\n    const bn = new __XmlNode(_SS);\n    return bn;\n};\nconst se_StorageClassAnalysis = (input, context) => {\n    const bn = new __XmlNode(_SCA);\n    if (input[_DE] != null) {\n        bn.c(se_StorageClassAnalysisDataExport(input[_DE], context).n(_DE));\n    }\n    return bn;\n};\nconst se_StorageClassAnalysisDataExport = (input, context) => {\n    const bn = new __XmlNode(_SCADE);\n    if (input[_OSV] != null) {\n        bn.c(__XmlNode.of(_SCASV, input[_OSV]).n(_OSV));\n    }\n    if (input[_Des] != null) {\n        bn.c(se_AnalyticsExportDestination(input[_Des], context).n(_Des));\n    }\n    return bn;\n};\nconst se_Tag = (input, context) => {\n    const bn = new __XmlNode(_Ta);\n    if (input[_K] != null) {\n        bn.c(__XmlNode.of(_OK, input[_K]).n(_K));\n    }\n    bn.cc(input, _Va);\n    return bn;\n};\nconst se_Tagging = (input, context) => {\n    const bn = new __XmlNode(_T);\n    bn.lc(input, \"TagSet\", \"TagSet\", () => se_TagSet(input[_TS], context));\n    return bn;\n};\nconst se_TagSet = (input, context) => {\n    return input\n        .filter((e) => e != null)\n        .map((entry) => {\n        const n = se_Tag(entry, context);\n        return n.n(_Ta);\n    });\n};\nconst se_TargetGrant = (input, context) => {\n    const bn = new __XmlNode(_TGa);\n    if (input[_Gra] != null) {\n        const n = se_Grantee(input[_Gra], context).n(_Gra);\n        n.a(\"xmlns:xsi\", \"http://www.w3.org/2001/XMLSchema-instance\");\n        bn.c(n);\n    }\n    if (input[_Pe] != null) {\n        bn.c(__XmlNode.of(_BLP, input[_Pe]).n(_Pe));\n    }\n    return bn;\n};\nconst se_TargetGrants = (input, context) => {\n    return input\n        .filter((e) => e != null)\n        .map((entry) => {\n        const n = se_TargetGrant(entry, context);\n        return n.n(_G);\n    });\n};\nconst se_TargetObjectKeyFormat = (input, context) => {\n    const bn = new __XmlNode(_TOKF);\n    if (input[_SPi] != null) {\n        bn.c(se_SimplePrefix(input[_SPi], context).n(_SPi));\n    }\n    if (input[_PP] != null) {\n        bn.c(se_PartitionedPrefix(input[_PP], context).n(_PP));\n    }\n    return bn;\n};\nconst se_Tiering = (input, context) => {\n    const bn = new __XmlNode(_Tier);\n    if (input[_Da] != null) {\n        bn.c(__XmlNode.of(_ITD, String(input[_Da])).n(_Da));\n    }\n    if (input[_AT] != null) {\n        bn.c(__XmlNode.of(_ITAT, input[_AT]).n(_AT));\n    }\n    return bn;\n};\nconst se_TieringList = (input, context) => {\n    return input\n        .filter((e) => e != null)\n        .map((entry) => {\n        const n = se_Tiering(entry, context);\n        return n.n(_me);\n    });\n};\nconst se_TopicConfiguration = (input, context) => {\n    const bn = new __XmlNode(_TCo);\n    if (input[_I] != null) {\n        bn.c(__XmlNode.of(_NI, input[_I]).n(_I));\n    }\n    if (input[_TA] != null) {\n        bn.c(__XmlNode.of(_TA, input[_TA]).n(_Top));\n    }\n    bn.l(input, \"Events\", \"Event\", () => se_EventList(input[_Eve], context));\n    if (input[_F] != null) {\n        bn.c(se_NotificationConfigurationFilter(input[_F], context).n(_F));\n    }\n    return bn;\n};\nconst se_TopicConfigurationList = (input, context) => {\n    return input\n        .filter((e) => e != null)\n        .map((entry) => {\n        const n = se_TopicConfiguration(entry, context);\n        return n.n(_me);\n    });\n};\nconst se_Transition = (input, context) => {\n    const bn = new __XmlNode(_Tra);\n    if (input[_Dat] != null) {\n        bn.c(__XmlNode.of(_Dat, __serializeDateTime(input[_Dat]).toString()).n(_Dat));\n    }\n    if (input[_Da] != null) {\n        bn.c(__XmlNode.of(_Da, String(input[_Da])).n(_Da));\n    }\n    if (input[_SC] != null) {\n        bn.c(__XmlNode.of(_TSC, input[_SC]).n(_SC));\n    }\n    return bn;\n};\nconst se_TransitionList = (input, context) => {\n    return input\n        .filter((e) => e != null)\n        .map((entry) => {\n        const n = se_Transition(entry, context);\n        return n.n(_me);\n    });\n};\nconst se_UserMetadata = (input, context) => {\n    return input\n        .filter((e) => e != null)\n        .map((entry) => {\n        const n = se_MetadataEntry(entry, context);\n        return n.n(_ME);\n    });\n};\nconst se_VersioningConfiguration = (input, context) => {\n    const bn = new __XmlNode(_VCe);\n    if (input[_MFAD] != null) {\n        bn.c(__XmlNode.of(_MFAD, input[_MFAD]).n(_MDf));\n    }\n    if (input[_S] != null) {\n        bn.c(__XmlNode.of(_BVS, input[_S]).n(_S));\n    }\n    return bn;\n};\nconst se_WebsiteConfiguration = (input, context) => {\n    const bn = new __XmlNode(_WC);\n    if (input[_ED] != null) {\n        bn.c(se_ErrorDocument(input[_ED], context).n(_ED));\n    }\n    if (input[_ID] != null) {\n        bn.c(se_IndexDocument(input[_ID], context).n(_ID));\n    }\n    if (input[_RART] != null) {\n        bn.c(se_RedirectAllRequestsTo(input[_RART], context).n(_RART));\n    }\n    bn.lc(input, \"RoutingRules\", \"RoutingRules\", () => se_RoutingRules(input[_RRo], context));\n    return bn;\n};\nconst de_AbortIncompleteMultipartUpload = (output, context) => {\n    const contents = {};\n    if (output[_DAI] != null) {\n        contents[_DAI] = __strictParseInt32(output[_DAI]);\n    }\n    return contents;\n};\nconst de_AccessControlTranslation = (output, context) => {\n    const contents = {};\n    if (output[_O] != null) {\n        contents[_O] = __expectString(output[_O]);\n    }\n    return contents;\n};\nconst de_AllowedHeaders = (output, context) => {\n    return (output || [])\n        .filter((e) => e != null)\n        .map((entry) => {\n        return __expectString(entry);\n    });\n};\nconst de_AllowedMethods = (output, context) => {\n    return (output || [])\n        .filter((e) => e != null)\n        .map((entry) => {\n        return __expectString(entry);\n    });\n};\nconst de_AllowedOrigins = (output, context) => {\n    return (output || [])\n        .filter((e) => e != null)\n        .map((entry) => {\n        return __expectString(entry);\n    });\n};\nconst de_AnalyticsAndOperator = (output, context) => {\n    const contents = {};\n    if (output[_P] != null) {\n        contents[_P] = __expectString(output[_P]);\n    }\n    if (output.Tag === \"\") {\n        contents[_Tag] = [];\n    }\n    else if (output[_Ta] != null) {\n        contents[_Tag] = de_TagSet(__getArrayIfSingleItem(output[_Ta]), context);\n    }\n    return contents;\n};\nconst de_AnalyticsConfiguration = (output, context) => {\n    const contents = {};\n    if (output[_I] != null) {\n        contents[_I] = __expectString(output[_I]);\n    }\n    if (output.Filter === \"\") {\n    }\n    else if (output[_F] != null) {\n        contents[_F] = de_AnalyticsFilter(__expectUnion(output[_F]), context);\n    }\n    if (output[_SCA] != null) {\n        contents[_SCA] = de_StorageClassAnalysis(output[_SCA], context);\n    }\n    return contents;\n};\nconst de_AnalyticsConfigurationList = (output, context) => {\n    return (output || [])\n        .filter((e) => e != null)\n        .map((entry) => {\n        return de_AnalyticsConfiguration(entry, context);\n    });\n};\nconst de_AnalyticsExportDestination = (output, context) => {\n    const contents = {};\n    if (output[_SBD] != null) {\n        contents[_SBD] = de_AnalyticsS3BucketDestination(output[_SBD], context);\n    }\n    return contents;\n};\nconst de_AnalyticsFilter = (output, context) => {\n    if (output[_P] != null) {\n        return {\n            Prefix: __expectString(output[_P]),\n        };\n    }\n    if (output[_Ta] != null) {\n        return {\n            Tag: de_Tag(output[_Ta], context),\n        };\n    }\n    if (output[_A] != null) {\n        return {\n            And: de_AnalyticsAndOperator(output[_A], context),\n        };\n    }\n    return { $unknown: Object.entries(output)[0] };\n};\nconst de_AnalyticsS3BucketDestination = (output, context) => {\n    const contents = {};\n    if (output[_Fo] != null) {\n        contents[_Fo] = __expectString(output[_Fo]);\n    }\n    if (output[_BAI] != null) {\n        contents[_BAI] = __expectString(output[_BAI]);\n    }\n    if (output[_B] != null) {\n        contents[_B] = __expectString(output[_B]);\n    }\n    if (output[_P] != null) {\n        contents[_P] = __expectString(output[_P]);\n    }\n    return contents;\n};\nconst de_Bucket = (output, context) => {\n    const contents = {};\n    if (output[_N] != null) {\n        contents[_N] = __expectString(output[_N]);\n    }\n    if (output[_CDr] != null) {\n        contents[_CDr] = __expectNonNull(__parseRfc3339DateTimeWithOffset(output[_CDr]));\n    }\n    if (output[_BR] != null) {\n        contents[_BR] = __expectString(output[_BR]);\n    }\n    return contents;\n};\nconst de_Buckets = (output, context) => {\n    return (output || [])\n        .filter((e) => e != null)\n        .map((entry) => {\n        return de_Bucket(entry, context);\n    });\n};\nconst de_Checksum = (output, context) => {\n    const contents = {};\n    if (output[_CCRC] != null) {\n        contents[_CCRC] = __expectString(output[_CCRC]);\n    }\n    if (output[_CCRCC] != null) {\n        contents[_CCRCC] = __expectString(output[_CCRCC]);\n    }\n    if (output[_CCRCNVME] != null) {\n        contents[_CCRCNVME] = __expectString(output[_CCRCNVME]);\n    }\n    if (output[_CSHA] != null) {\n        contents[_CSHA] = __expectString(output[_CSHA]);\n    }\n    if (output[_CSHAh] != null) {\n        contents[_CSHAh] = __expectString(output[_CSHAh]);\n    }\n    if (output[_CT] != null) {\n        contents[_CT] = __expectString(output[_CT]);\n    }\n    return contents;\n};\nconst de_ChecksumAlgorithmList = (output, context) => {\n    return (output || [])\n        .filter((e) => e != null)\n        .map((entry) => {\n        return __expectString(entry);\n    });\n};\nconst de_CommonPrefix = (output, context) => {\n    const contents = {};\n    if (output[_P] != null) {\n        contents[_P] = __expectString(output[_P]);\n    }\n    return contents;\n};\nconst de_CommonPrefixList = (output, context) => {\n    return (output || [])\n        .filter((e) => e != null)\n        .map((entry) => {\n        return de_CommonPrefix(entry, context);\n    });\n};\nconst de_Condition = (output, context) => {\n    const contents = {};\n    if (output[_HECRE] != null) {\n        contents[_HECRE] = __expectString(output[_HECRE]);\n    }\n    if (output[_KPE] != null) {\n        contents[_KPE] = __expectString(output[_KPE]);\n    }\n    return contents;\n};\nconst de_ContinuationEvent = (output, context) => {\n    const contents = {};\n    return contents;\n};\nconst de_CopyObjectResult = (output, context) => {\n    const contents = {};\n    if (output[_ETa] != null) {\n        contents[_ETa] = __expectString(output[_ETa]);\n    }\n    if (output[_LM] != null) {\n        contents[_LM] = __expectNonNull(__parseRfc3339DateTimeWithOffset(output[_LM]));\n    }\n    if (output[_CT] != null) {\n        contents[_CT] = __expectString(output[_CT]);\n    }\n    if (output[_CCRC] != null) {\n        contents[_CCRC] = __expectString(output[_CCRC]);\n    }\n    if (output[_CCRCC] != null) {\n        contents[_CCRCC] = __expectString(output[_CCRCC]);\n    }\n    if (output[_CCRCNVME] != null) {\n        contents[_CCRCNVME] = __expectString(output[_CCRCNVME]);\n    }\n    if (output[_CSHA] != null) {\n        contents[_CSHA] = __expectString(output[_CSHA]);\n    }\n    if (output[_CSHAh] != null) {\n        contents[_CSHAh] = __expectString(output[_CSHAh]);\n    }\n    return contents;\n};\nconst de_CopyPartResult = (output, context) => {\n    const contents = {};\n    if (output[_ETa] != null) {\n        contents[_ETa] = __expectString(output[_ETa]);\n    }\n    if (output[_LM] != null) {\n        contents[_LM] = __expectNonNull(__parseRfc3339DateTimeWithOffset(output[_LM]));\n    }\n    if (output[_CCRC] != null) {\n        contents[_CCRC] = __expectString(output[_CCRC]);\n    }\n    if (output[_CCRCC] != null) {\n        contents[_CCRCC] = __expectString(output[_CCRCC]);\n    }\n    if (output[_CCRCNVME] != null) {\n        contents[_CCRCNVME] = __expectString(output[_CCRCNVME]);\n    }\n    if (output[_CSHA] != null) {\n        contents[_CSHA] = __expectString(output[_CSHA]);\n    }\n    if (output[_CSHAh] != null) {\n        contents[_CSHAh] = __expectString(output[_CSHAh]);\n    }\n    return contents;\n};\nconst de_CORSRule = (output, context) => {\n    const contents = {};\n    if (output[_ID_] != null) {\n        contents[_ID_] = __expectString(output[_ID_]);\n    }\n    if (output.AllowedHeader === \"\") {\n        contents[_AHl] = [];\n    }\n    else if (output[_AH] != null) {\n        contents[_AHl] = de_AllowedHeaders(__getArrayIfSingleItem(output[_AH]), context);\n    }\n    if (output.AllowedMethod === \"\") {\n        contents[_AMl] = [];\n    }\n    else if (output[_AM] != null) {\n        contents[_AMl] = de_AllowedMethods(__getArrayIfSingleItem(output[_AM]), context);\n    }\n    if (output.AllowedOrigin === \"\") {\n        contents[_AOl] = [];\n    }\n    else if (output[_AO] != null) {\n        contents[_AOl] = de_AllowedOrigins(__getArrayIfSingleItem(output[_AO]), context);\n    }\n    if (output.ExposeHeader === \"\") {\n        contents[_EH] = [];\n    }\n    else if (output[_EHx] != null) {\n        contents[_EH] = de_ExposeHeaders(__getArrayIfSingleItem(output[_EHx]), context);\n    }\n    if (output[_MAS] != null) {\n        contents[_MAS] = __strictParseInt32(output[_MAS]);\n    }\n    return contents;\n};\nconst de_CORSRules = (output, context) => {\n    return (output || [])\n        .filter((e) => e != null)\n        .map((entry) => {\n        return de_CORSRule(entry, context);\n    });\n};\nconst de_DefaultRetention = (output, context) => {\n    const contents = {};\n    if (output[_Mo] != null) {\n        contents[_Mo] = __expectString(output[_Mo]);\n    }\n    if (output[_Da] != null) {\n        contents[_Da] = __strictParseInt32(output[_Da]);\n    }\n    if (output[_Y] != null) {\n        contents[_Y] = __strictParseInt32(output[_Y]);\n    }\n    return contents;\n};\nconst de_DeletedObject = (output, context) => {\n    const contents = {};\n    if (output[_K] != null) {\n        contents[_K] = __expectString(output[_K]);\n    }\n    if (output[_VI] != null) {\n        contents[_VI] = __expectString(output[_VI]);\n    }\n    if (output[_DM] != null) {\n        contents[_DM] = __parseBoolean(output[_DM]);\n    }\n    if (output[_DMVI] != null) {\n        contents[_DMVI] = __expectString(output[_DMVI]);\n    }\n    return contents;\n};\nconst de_DeletedObjects = (output, context) => {\n    return (output || [])\n        .filter((e) => e != null)\n        .map((entry) => {\n        return de_DeletedObject(entry, context);\n    });\n};\nconst de_DeleteMarkerEntry = (output, context) => {\n    const contents = {};\n    if (output[_O] != null) {\n        contents[_O] = de_Owner(output[_O], context);\n    }\n    if (output[_K] != null) {\n        contents[_K] = __expectString(output[_K]);\n    }\n    if (output[_VI] != null) {\n        contents[_VI] = __expectString(output[_VI]);\n    }\n    if (output[_IL] != null) {\n        contents[_IL] = __parseBoolean(output[_IL]);\n    }\n    if (output[_LM] != null) {\n        contents[_LM] = __expectNonNull(__parseRfc3339DateTimeWithOffset(output[_LM]));\n    }\n    return contents;\n};\nconst de_DeleteMarkerReplication = (output, context) => {\n    const contents = {};\n    if (output[_S] != null) {\n        contents[_S] = __expectString(output[_S]);\n    }\n    return contents;\n};\nconst de_DeleteMarkers = (output, context) => {\n    return (output || [])\n        .filter((e) => e != null)\n        .map((entry) => {\n        return de_DeleteMarkerEntry(entry, context);\n    });\n};\nconst de_Destination = (output, context) => {\n    const contents = {};\n    if (output[_B] != null) {\n        contents[_B] = __expectString(output[_B]);\n    }\n    if (output[_Ac] != null) {\n        contents[_Ac] = __expectString(output[_Ac]);\n    }\n    if (output[_SC] != null) {\n        contents[_SC] = __expectString(output[_SC]);\n    }\n    if (output[_ACT] != null) {\n        contents[_ACT] = de_AccessControlTranslation(output[_ACT], context);\n    }\n    if (output[_ECn] != null) {\n        contents[_ECn] = de_EncryptionConfiguration(output[_ECn], context);\n    }\n    if (output[_RTe] != null) {\n        contents[_RTe] = de_ReplicationTime(output[_RTe], context);\n    }\n    if (output[_Me] != null) {\n        contents[_Me] = de_Metrics(output[_Me], context);\n    }\n    return contents;\n};\nconst de_EncryptionConfiguration = (output, context) => {\n    const contents = {};\n    if (output[_RKKID] != null) {\n        contents[_RKKID] = __expectString(output[_RKKID]);\n    }\n    return contents;\n};\nconst de_EndEvent = (output, context) => {\n    const contents = {};\n    return contents;\n};\nconst de__Error = (output, context) => {\n    const contents = {};\n    if (output[_K] != null) {\n        contents[_K] = __expectString(output[_K]);\n    }\n    if (output[_VI] != null) {\n        contents[_VI] = __expectString(output[_VI]);\n    }\n    if (output[_Cod] != null) {\n        contents[_Cod] = __expectString(output[_Cod]);\n    }\n    if (output[_Mes] != null) {\n        contents[_Mes] = __expectString(output[_Mes]);\n    }\n    return contents;\n};\nconst de_ErrorDetails = (output, context) => {\n    const contents = {};\n    if (output[_EC] != null) {\n        contents[_EC] = __expectString(output[_EC]);\n    }\n    if (output[_EM] != null) {\n        contents[_EM] = __expectString(output[_EM]);\n    }\n    return contents;\n};\nconst de_ErrorDocument = (output, context) => {\n    const contents = {};\n    if (output[_K] != null) {\n        contents[_K] = __expectString(output[_K]);\n    }\n    return contents;\n};\nconst de_Errors = (output, context) => {\n    return (output || [])\n        .filter((e) => e != null)\n        .map((entry) => {\n        return de__Error(entry, context);\n    });\n};\nconst de_EventBridgeConfiguration = (output, context) => {\n    const contents = {};\n    return contents;\n};\nconst de_EventList = (output, context) => {\n    return (output || [])\n        .filter((e) => e != null)\n        .map((entry) => {\n        return __expectString(entry);\n    });\n};\nconst de_ExistingObjectReplication = (output, context) => {\n    const contents = {};\n    if (output[_S] != null) {\n        contents[_S] = __expectString(output[_S]);\n    }\n    return contents;\n};\nconst de_ExposeHeaders = (output, context) => {\n    return (output || [])\n        .filter((e) => e != null)\n        .map((entry) => {\n        return __expectString(entry);\n    });\n};\nconst de_FilterRule = (output, context) => {\n    const contents = {};\n    if (output[_N] != null) {\n        contents[_N] = __expectString(output[_N]);\n    }\n    if (output[_Va] != null) {\n        contents[_Va] = __expectString(output[_Va]);\n    }\n    return contents;\n};\nconst de_FilterRuleList = (output, context) => {\n    return (output || [])\n        .filter((e) => e != null)\n        .map((entry) => {\n        return de_FilterRule(entry, context);\n    });\n};\nconst de_GetBucketMetadataTableConfigurationResult = (output, context) => {\n    const contents = {};\n    if (output[_MTCR] != null) {\n        contents[_MTCR] = de_MetadataTableConfigurationResult(output[_MTCR], context);\n    }\n    if (output[_S] != null) {\n        contents[_S] = __expectString(output[_S]);\n    }\n    if (output[_Er] != null) {\n        contents[_Er] = de_ErrorDetails(output[_Er], context);\n    }\n    return contents;\n};\nconst de_GetObjectAttributesParts = (output, context) => {\n    const contents = {};\n    if (output[_PC] != null) {\n        contents[_TPC] = __strictParseInt32(output[_PC]);\n    }\n    if (output[_PNM] != null) {\n        contents[_PNM] = __expectString(output[_PNM]);\n    }\n    if (output[_NPNM] != null) {\n        contents[_NPNM] = __expectString(output[_NPNM]);\n    }\n    if (output[_MP] != null) {\n        contents[_MP] = __strictParseInt32(output[_MP]);\n    }\n    if (output[_IT] != null) {\n        contents[_IT] = __parseBoolean(output[_IT]);\n    }\n    if (output.Part === \"\") {\n        contents[_Part] = [];\n    }\n    else if (output[_Par] != null) {\n        contents[_Part] = de_PartsList(__getArrayIfSingleItem(output[_Par]), context);\n    }\n    return contents;\n};\nconst de_Grant = (output, context) => {\n    const contents = {};\n    if (output[_Gra] != null) {\n        contents[_Gra] = de_Grantee(output[_Gra], context);\n    }\n    if (output[_Pe] != null) {\n        contents[_Pe] = __expectString(output[_Pe]);\n    }\n    return contents;\n};\nconst de_Grantee = (output, context) => {\n    const contents = {};\n    if (output[_DN] != null) {\n        contents[_DN] = __expectString(output[_DN]);\n    }\n    if (output[_EA] != null) {\n        contents[_EA] = __expectString(output[_EA]);\n    }\n    if (output[_ID_] != null) {\n        contents[_ID_] = __expectString(output[_ID_]);\n    }\n    if (output[_URI] != null) {\n        contents[_URI] = __expectString(output[_URI]);\n    }\n    if (output[_x] != null) {\n        contents[_Ty] = __expectString(output[_x]);\n    }\n    return contents;\n};\nconst de_Grants = (output, context) => {\n    return (output || [])\n        .filter((e) => e != null)\n        .map((entry) => {\n        return de_Grant(entry, context);\n    });\n};\nconst de_IndexDocument = (output, context) => {\n    const contents = {};\n    if (output[_Su] != null) {\n        contents[_Su] = __expectString(output[_Su]);\n    }\n    return contents;\n};\nconst de_Initiator = (output, context) => {\n    const contents = {};\n    if (output[_ID_] != null) {\n        contents[_ID_] = __expectString(output[_ID_]);\n    }\n    if (output[_DN] != null) {\n        contents[_DN] = __expectString(output[_DN]);\n    }\n    return contents;\n};\nconst de_IntelligentTieringAndOperator = (output, context) => {\n    const contents = {};\n    if (output[_P] != null) {\n        contents[_P] = __expectString(output[_P]);\n    }\n    if (output.Tag === \"\") {\n        contents[_Tag] = [];\n    }\n    else if (output[_Ta] != null) {\n        contents[_Tag] = de_TagSet(__getArrayIfSingleItem(output[_Ta]), context);\n    }\n    return contents;\n};\nconst de_IntelligentTieringConfiguration = (output, context) => {\n    const contents = {};\n    if (output[_I] != null) {\n        contents[_I] = __expectString(output[_I]);\n    }\n    if (output[_F] != null) {\n        contents[_F] = de_IntelligentTieringFilter(output[_F], context);\n    }\n    if (output[_S] != null) {\n        contents[_S] = __expectString(output[_S]);\n    }\n    if (output.Tiering === \"\") {\n        contents[_Tie] = [];\n    }\n    else if (output[_Tier] != null) {\n        contents[_Tie] = de_TieringList(__getArrayIfSingleItem(output[_Tier]), context);\n    }\n    return contents;\n};\nconst de_IntelligentTieringConfigurationList = (output, context) => {\n    return (output || [])\n        .filter((e) => e != null)\n        .map((entry) => {\n        return de_IntelligentTieringConfiguration(entry, context);\n    });\n};\nconst de_IntelligentTieringFilter = (output, context) => {\n    const contents = {};\n    if (output[_P] != null) {\n        contents[_P] = __expectString(output[_P]);\n    }\n    if (output[_Ta] != null) {\n        contents[_Ta] = de_Tag(output[_Ta], context);\n    }\n    if (output[_A] != null) {\n        contents[_A] = de_IntelligentTieringAndOperator(output[_A], context);\n    }\n    return contents;\n};\nconst de_InventoryConfiguration = (output, context) => {\n    const contents = {};\n    if (output[_Des] != null) {\n        contents[_Des] = de_InventoryDestination(output[_Des], context);\n    }\n    if (output[_IE] != null) {\n        contents[_IE] = __parseBoolean(output[_IE]);\n    }\n    if (output[_F] != null) {\n        contents[_F] = de_InventoryFilter(output[_F], context);\n    }\n    if (output[_I] != null) {\n        contents[_I] = __expectString(output[_I]);\n    }\n    if (output[_IOV] != null) {\n        contents[_IOV] = __expectString(output[_IOV]);\n    }\n    if (output.OptionalFields === \"\") {\n        contents[_OF] = [];\n    }\n    else if (output[_OF] != null && output[_OF][_Fi] != null) {\n        contents[_OF] = de_InventoryOptionalFields(__getArrayIfSingleItem(output[_OF][_Fi]), context);\n    }\n    if (output[_Sc] != null) {\n        contents[_Sc] = de_InventorySchedule(output[_Sc], context);\n    }\n    return contents;\n};\nconst de_InventoryConfigurationList = (output, context) => {\n    return (output || [])\n        .filter((e) => e != null)\n        .map((entry) => {\n        return de_InventoryConfiguration(entry, context);\n    });\n};\nconst de_InventoryDestination = (output, context) => {\n    const contents = {};\n    if (output[_SBD] != null) {\n        contents[_SBD] = de_InventoryS3BucketDestination(output[_SBD], context);\n    }\n    return contents;\n};\nconst de_InventoryEncryption = (output, context) => {\n    const contents = {};\n    if (output[_SS] != null) {\n        contents[_SSES] = de_SSES3(output[_SS], context);\n    }\n    if (output[_SK] != null) {\n        contents[_SSEKMS] = de_SSEKMS(output[_SK], context);\n    }\n    return contents;\n};\nconst de_InventoryFilter = (output, context) => {\n    const contents = {};\n    if (output[_P] != null) {\n        contents[_P] = __expectString(output[_P]);\n    }\n    return contents;\n};\nconst de_InventoryOptionalFields = (output, context) => {\n    return (output || [])\n        .filter((e) => e != null)\n        .map((entry) => {\n        return __expectString(entry);\n    });\n};\nconst de_InventoryS3BucketDestination = (output, context) => {\n    const contents = {};\n    if (output[_AIc] != null) {\n        contents[_AIc] = __expectString(output[_AIc]);\n    }\n    if (output[_B] != null) {\n        contents[_B] = __expectString(output[_B]);\n    }\n    if (output[_Fo] != null) {\n        contents[_Fo] = __expectString(output[_Fo]);\n    }\n    if (output[_P] != null) {\n        contents[_P] = __expectString(output[_P]);\n    }\n    if (output[_En] != null) {\n        contents[_En] = de_InventoryEncryption(output[_En], context);\n    }\n    return contents;\n};\nconst de_InventorySchedule = (output, context) => {\n    const contents = {};\n    if (output[_Fr] != null) {\n        contents[_Fr] = __expectString(output[_Fr]);\n    }\n    return contents;\n};\nconst de_LambdaFunctionConfiguration = (output, context) => {\n    const contents = {};\n    if (output[_I] != null) {\n        contents[_I] = __expectString(output[_I]);\n    }\n    if (output[_CF] != null) {\n        contents[_LFA] = __expectString(output[_CF]);\n    }\n    if (output.Event === \"\") {\n        contents[_Eve] = [];\n    }\n    else if (output[_Ev] != null) {\n        contents[_Eve] = de_EventList(__getArrayIfSingleItem(output[_Ev]), context);\n    }\n    if (output[_F] != null) {\n        contents[_F] = de_NotificationConfigurationFilter(output[_F], context);\n    }\n    return contents;\n};\nconst de_LambdaFunctionConfigurationList = (output, context) => {\n    return (output || [])\n        .filter((e) => e != null)\n        .map((entry) => {\n        return de_LambdaFunctionConfiguration(entry, context);\n    });\n};\nconst de_LifecycleExpiration = (output, context) => {\n    const contents = {};\n    if (output[_Dat] != null) {\n        contents[_Dat] = __expectNonNull(__parseRfc3339DateTimeWithOffset(output[_Dat]));\n    }\n    if (output[_Da] != null) {\n        contents[_Da] = __strictParseInt32(output[_Da]);\n    }\n    if (output[_EODM] != null) {\n        contents[_EODM] = __parseBoolean(output[_EODM]);\n    }\n    return contents;\n};\nconst de_LifecycleRule = (output, context) => {\n    const contents = {};\n    if (output[_Exp] != null) {\n        contents[_Exp] = de_LifecycleExpiration(output[_Exp], context);\n    }\n    if (output[_ID_] != null) {\n        contents[_ID_] = __expectString(output[_ID_]);\n    }\n    if (output[_P] != null) {\n        contents[_P] = __expectString(output[_P]);\n    }\n    if (output[_F] != null) {\n        contents[_F] = de_LifecycleRuleFilter(output[_F], context);\n    }\n    if (output[_S] != null) {\n        contents[_S] = __expectString(output[_S]);\n    }\n    if (output.Transition === \"\") {\n        contents[_Tr] = [];\n    }\n    else if (output[_Tra] != null) {\n        contents[_Tr] = de_TransitionList(__getArrayIfSingleItem(output[_Tra]), context);\n    }\n    if (output.NoncurrentVersionTransition === \"\") {\n        contents[_NVT] = [];\n    }\n    else if (output[_NVTo] != null) {\n        contents[_NVT] = de_NoncurrentVersionTransitionList(__getArrayIfSingleItem(output[_NVTo]), context);\n    }\n    if (output[_NVE] != null) {\n        contents[_NVE] = de_NoncurrentVersionExpiration(output[_NVE], context);\n    }\n    if (output[_AIMU] != null) {\n        contents[_AIMU] = de_AbortIncompleteMultipartUpload(output[_AIMU], context);\n    }\n    return contents;\n};\nconst de_LifecycleRuleAndOperator = (output, context) => {\n    const contents = {};\n    if (output[_P] != null) {\n        contents[_P] = __expectString(output[_P]);\n    }\n    if (output.Tag === \"\") {\n        contents[_Tag] = [];\n    }\n    else if (output[_Ta] != null) {\n        contents[_Tag] = de_TagSet(__getArrayIfSingleItem(output[_Ta]), context);\n    }\n    if (output[_OSGT] != null) {\n        contents[_OSGT] = __strictParseLong(output[_OSGT]);\n    }\n    if (output[_OSLT] != null) {\n        contents[_OSLT] = __strictParseLong(output[_OSLT]);\n    }\n    return contents;\n};\nconst de_LifecycleRuleFilter = (output, context) => {\n    const contents = {};\n    if (output[_P] != null) {\n        contents[_P] = __expectString(output[_P]);\n    }\n    if (output[_Ta] != null) {\n        contents[_Ta] = de_Tag(output[_Ta], context);\n    }\n    if (output[_OSGT] != null) {\n        contents[_OSGT] = __strictParseLong(output[_OSGT]);\n    }\n    if (output[_OSLT] != null) {\n        contents[_OSLT] = __strictParseLong(output[_OSLT]);\n    }\n    if (output[_A] != null) {\n        contents[_A] = de_LifecycleRuleAndOperator(output[_A], context);\n    }\n    return contents;\n};\nconst de_LifecycleRules = (output, context) => {\n    return (output || [])\n        .filter((e) => e != null)\n        .map((entry) => {\n        return de_LifecycleRule(entry, context);\n    });\n};\nconst de_LoggingEnabled = (output, context) => {\n    const contents = {};\n    if (output[_TB] != null) {\n        contents[_TB] = __expectString(output[_TB]);\n    }\n    if (output.TargetGrants === \"\") {\n        contents[_TG] = [];\n    }\n    else if (output[_TG] != null && output[_TG][_G] != null) {\n        contents[_TG] = de_TargetGrants(__getArrayIfSingleItem(output[_TG][_G]), context);\n    }\n    if (output[_TP] != null) {\n        contents[_TP] = __expectString(output[_TP]);\n    }\n    if (output[_TOKF] != null) {\n        contents[_TOKF] = de_TargetObjectKeyFormat(output[_TOKF], context);\n    }\n    return contents;\n};\nconst de_MetadataTableConfigurationResult = (output, context) => {\n    const contents = {};\n    if (output[_STDR] != null) {\n        contents[_STDR] = de_S3TablesDestinationResult(output[_STDR], context);\n    }\n    return contents;\n};\nconst de_Metrics = (output, context) => {\n    const contents = {};\n    if (output[_S] != null) {\n        contents[_S] = __expectString(output[_S]);\n    }\n    if (output[_ETv] != null) {\n        contents[_ETv] = de_ReplicationTimeValue(output[_ETv], context);\n    }\n    return contents;\n};\nconst de_MetricsAndOperator = (output, context) => {\n    const contents = {};\n    if (output[_P] != null) {\n        contents[_P] = __expectString(output[_P]);\n    }\n    if (output.Tag === \"\") {\n        contents[_Tag] = [];\n    }\n    else if (output[_Ta] != null) {\n        contents[_Tag] = de_TagSet(__getArrayIfSingleItem(output[_Ta]), context);\n    }\n    if (output[_APAc] != null) {\n        contents[_APAc] = __expectString(output[_APAc]);\n    }\n    return contents;\n};\nconst de_MetricsConfiguration = (output, context) => {\n    const contents = {};\n    if (output[_I] != null) {\n        contents[_I] = __expectString(output[_I]);\n    }\n    if (output.Filter === \"\") {\n    }\n    else if (output[_F] != null) {\n        contents[_F] = de_MetricsFilter(__expectUnion(output[_F]), context);\n    }\n    return contents;\n};\nconst de_MetricsConfigurationList = (output, context) => {\n    return (output || [])\n        .filter((e) => e != null)\n        .map((entry) => {\n        return de_MetricsConfiguration(entry, context);\n    });\n};\nconst de_MetricsFilter = (output, context) => {\n    if (output[_P] != null) {\n        return {\n            Prefix: __expectString(output[_P]),\n        };\n    }\n    if (output[_Ta] != null) {\n        return {\n            Tag: de_Tag(output[_Ta], context),\n        };\n    }\n    if (output[_APAc] != null) {\n        return {\n            AccessPointArn: __expectString(output[_APAc]),\n        };\n    }\n    if (output[_A] != null) {\n        return {\n            And: de_MetricsAndOperator(output[_A], context),\n        };\n    }\n    return { $unknown: Object.entries(output)[0] };\n};\nconst de_MultipartUpload = (output, context) => {\n    const contents = {};\n    if (output[_UI] != null) {\n        contents[_UI] = __expectString(output[_UI]);\n    }\n    if (output[_K] != null) {\n        contents[_K] = __expectString(output[_K]);\n    }\n    if (output[_Ini] != null) {\n        contents[_Ini] = __expectNonNull(__parseRfc3339DateTimeWithOffset(output[_Ini]));\n    }\n    if (output[_SC] != null) {\n        contents[_SC] = __expectString(output[_SC]);\n    }\n    if (output[_O] != null) {\n        contents[_O] = de_Owner(output[_O], context);\n    }\n    if (output[_In] != null) {\n        contents[_In] = de_Initiator(output[_In], context);\n    }\n    if (output[_CA] != null) {\n        contents[_CA] = __expectString(output[_CA]);\n    }\n    if (output[_CT] != null) {\n        contents[_CT] = __expectString(output[_CT]);\n    }\n    return contents;\n};\nconst de_MultipartUploadList = (output, context) => {\n    return (output || [])\n        .filter((e) => e != null)\n        .map((entry) => {\n        return de_MultipartUpload(entry, context);\n    });\n};\nconst de_NoncurrentVersionExpiration = (output, context) => {\n    const contents = {};\n    if (output[_ND] != null) {\n        contents[_ND] = __strictParseInt32(output[_ND]);\n    }\n    if (output[_NNV] != null) {\n        contents[_NNV] = __strictParseInt32(output[_NNV]);\n    }\n    return contents;\n};\nconst de_NoncurrentVersionTransition = (output, context) => {\n    const contents = {};\n    if (output[_ND] != null) {\n        contents[_ND] = __strictParseInt32(output[_ND]);\n    }\n    if (output[_SC] != null) {\n        contents[_SC] = __expectString(output[_SC]);\n    }\n    if (output[_NNV] != null) {\n        contents[_NNV] = __strictParseInt32(output[_NNV]);\n    }\n    return contents;\n};\nconst de_NoncurrentVersionTransitionList = (output, context) => {\n    return (output || [])\n        .filter((e) => e != null)\n        .map((entry) => {\n        return de_NoncurrentVersionTransition(entry, context);\n    });\n};\nconst de_NotificationConfigurationFilter = (output, context) => {\n    const contents = {};\n    if (output[_SKe] != null) {\n        contents[_K] = de_S3KeyFilter(output[_SKe], context);\n    }\n    return contents;\n};\nconst de__Object = (output, context) => {\n    const contents = {};\n    if (output[_K] != null) {\n        contents[_K] = __expectString(output[_K]);\n    }\n    if (output[_LM] != null) {\n        contents[_LM] = __expectNonNull(__parseRfc3339DateTimeWithOffset(output[_LM]));\n    }\n    if (output[_ETa] != null) {\n        contents[_ETa] = __expectString(output[_ETa]);\n    }\n    if (output.ChecksumAlgorithm === \"\") {\n        contents[_CA] = [];\n    }\n    else if (output[_CA] != null) {\n        contents[_CA] = de_ChecksumAlgorithmList(__getArrayIfSingleItem(output[_CA]), context);\n    }\n    if (output[_CT] != null) {\n        contents[_CT] = __expectString(output[_CT]);\n    }\n    if (output[_Si] != null) {\n        contents[_Si] = __strictParseLong(output[_Si]);\n    }\n    if (output[_SC] != null) {\n        contents[_SC] = __expectString(output[_SC]);\n    }\n    if (output[_O] != null) {\n        contents[_O] = de_Owner(output[_O], context);\n    }\n    if (output[_RSe] != null) {\n        contents[_RSe] = de_RestoreStatus(output[_RSe], context);\n    }\n    return contents;\n};\nconst de_ObjectList = (output, context) => {\n    return (output || [])\n        .filter((e) => e != null)\n        .map((entry) => {\n        return de__Object(entry, context);\n    });\n};\nconst de_ObjectLockConfiguration = (output, context) => {\n    const contents = {};\n    if (output[_OLE] != null) {\n        contents[_OLE] = __expectString(output[_OLE]);\n    }\n    if (output[_Ru] != null) {\n        contents[_Ru] = de_ObjectLockRule(output[_Ru], context);\n    }\n    return contents;\n};\nconst de_ObjectLockLegalHold = (output, context) => {\n    const contents = {};\n    if (output[_S] != null) {\n        contents[_S] = __expectString(output[_S]);\n    }\n    return contents;\n};\nconst de_ObjectLockRetention = (output, context) => {\n    const contents = {};\n    if (output[_Mo] != null) {\n        contents[_Mo] = __expectString(output[_Mo]);\n    }\n    if (output[_RUD] != null) {\n        contents[_RUD] = __expectNonNull(__parseRfc3339DateTimeWithOffset(output[_RUD]));\n    }\n    return contents;\n};\nconst de_ObjectLockRule = (output, context) => {\n    const contents = {};\n    if (output[_DRe] != null) {\n        contents[_DRe] = de_DefaultRetention(output[_DRe], context);\n    }\n    return contents;\n};\nconst de_ObjectPart = (output, context) => {\n    const contents = {};\n    if (output[_PN] != null) {\n        contents[_PN] = __strictParseInt32(output[_PN]);\n    }\n    if (output[_Si] != null) {\n        contents[_Si] = __strictParseLong(output[_Si]);\n    }\n    if (output[_CCRC] != null) {\n        contents[_CCRC] = __expectString(output[_CCRC]);\n    }\n    if (output[_CCRCC] != null) {\n        contents[_CCRCC] = __expectString(output[_CCRCC]);\n    }\n    if (output[_CCRCNVME] != null) {\n        contents[_CCRCNVME] = __expectString(output[_CCRCNVME]);\n    }\n    if (output[_CSHA] != null) {\n        contents[_CSHA] = __expectString(output[_CSHA]);\n    }\n    if (output[_CSHAh] != null) {\n        contents[_CSHAh] = __expectString(output[_CSHAh]);\n    }\n    return contents;\n};\nconst de_ObjectVersion = (output, context) => {\n    const contents = {};\n    if (output[_ETa] != null) {\n        contents[_ETa] = __expectString(output[_ETa]);\n    }\n    if (output.ChecksumAlgorithm === \"\") {\n        contents[_CA] = [];\n    }\n    else if (output[_CA] != null) {\n        contents[_CA] = de_ChecksumAlgorithmList(__getArrayIfSingleItem(output[_CA]), context);\n    }\n    if (output[_CT] != null) {\n        contents[_CT] = __expectString(output[_CT]);\n    }\n    if (output[_Si] != null) {\n        contents[_Si] = __strictParseLong(output[_Si]);\n    }\n    if (output[_SC] != null) {\n        contents[_SC] = __expectString(output[_SC]);\n    }\n    if (output[_K] != null) {\n        contents[_K] = __expectString(output[_K]);\n    }\n    if (output[_VI] != null) {\n        contents[_VI] = __expectString(output[_VI]);\n    }\n    if (output[_IL] != null) {\n        contents[_IL] = __parseBoolean(output[_IL]);\n    }\n    if (output[_LM] != null) {\n        contents[_LM] = __expectNonNull(__parseRfc3339DateTimeWithOffset(output[_LM]));\n    }\n    if (output[_O] != null) {\n        contents[_O] = de_Owner(output[_O], context);\n    }\n    if (output[_RSe] != null) {\n        contents[_RSe] = de_RestoreStatus(output[_RSe], context);\n    }\n    return contents;\n};\nconst de_ObjectVersionList = (output, context) => {\n    return (output || [])\n        .filter((e) => e != null)\n        .map((entry) => {\n        return de_ObjectVersion(entry, context);\n    });\n};\nconst de_Owner = (output, context) => {\n    const contents = {};\n    if (output[_DN] != null) {\n        contents[_DN] = __expectString(output[_DN]);\n    }\n    if (output[_ID_] != null) {\n        contents[_ID_] = __expectString(output[_ID_]);\n    }\n    return contents;\n};\nconst de_OwnershipControls = (output, context) => {\n    const contents = {};\n    if (output.Rule === \"\") {\n        contents[_Rul] = [];\n    }\n    else if (output[_Ru] != null) {\n        contents[_Rul] = de_OwnershipControlsRules(__getArrayIfSingleItem(output[_Ru]), context);\n    }\n    return contents;\n};\nconst de_OwnershipControlsRule = (output, context) => {\n    const contents = {};\n    if (output[_OO] != null) {\n        contents[_OO] = __expectString(output[_OO]);\n    }\n    return contents;\n};\nconst de_OwnershipControlsRules = (output, context) => {\n    return (output || [])\n        .filter((e) => e != null)\n        .map((entry) => {\n        return de_OwnershipControlsRule(entry, context);\n    });\n};\nconst de_Part = (output, context) => {\n    const contents = {};\n    if (output[_PN] != null) {\n        contents[_PN] = __strictParseInt32(output[_PN]);\n    }\n    if (output[_LM] != null) {\n        contents[_LM] = __expectNonNull(__parseRfc3339DateTimeWithOffset(output[_LM]));\n    }\n    if (output[_ETa] != null) {\n        contents[_ETa] = __expectString(output[_ETa]);\n    }\n    if (output[_Si] != null) {\n        contents[_Si] = __strictParseLong(output[_Si]);\n    }\n    if (output[_CCRC] != null) {\n        contents[_CCRC] = __expectString(output[_CCRC]);\n    }\n    if (output[_CCRCC] != null) {\n        contents[_CCRCC] = __expectString(output[_CCRCC]);\n    }\n    if (output[_CCRCNVME] != null) {\n        contents[_CCRCNVME] = __expectString(output[_CCRCNVME]);\n    }\n    if (output[_CSHA] != null) {\n        contents[_CSHA] = __expectString(output[_CSHA]);\n    }\n    if (output[_CSHAh] != null) {\n        contents[_CSHAh] = __expectString(output[_CSHAh]);\n    }\n    return contents;\n};\nconst de_PartitionedPrefix = (output, context) => {\n    const contents = {};\n    if (output[_PDS] != null) {\n        contents[_PDS] = __expectString(output[_PDS]);\n    }\n    return contents;\n};\nconst de_Parts = (output, context) => {\n    return (output || [])\n        .filter((e) => e != null)\n        .map((entry) => {\n        return de_Part(entry, context);\n    });\n};\nconst de_PartsList = (output, context) => {\n    return (output || [])\n        .filter((e) => e != null)\n        .map((entry) => {\n        return de_ObjectPart(entry, context);\n    });\n};\nconst de_PolicyStatus = (output, context) => {\n    const contents = {};\n    if (output[_IP] != null) {\n        contents[_IP] = __parseBoolean(output[_IP]);\n    }\n    return contents;\n};\nconst de_Progress = (output, context) => {\n    const contents = {};\n    if (output[_BS] != null) {\n        contents[_BS] = __strictParseLong(output[_BS]);\n    }\n    if (output[_BP] != null) {\n        contents[_BP] = __strictParseLong(output[_BP]);\n    }\n    if (output[_BRy] != null) {\n        contents[_BRy] = __strictParseLong(output[_BRy]);\n    }\n    return contents;\n};\nconst de_PublicAccessBlockConfiguration = (output, context) => {\n    const contents = {};\n    if (output[_BPA] != null) {\n        contents[_BPA] = __parseBoolean(output[_BPA]);\n    }\n    if (output[_IPA] != null) {\n        contents[_IPA] = __parseBoolean(output[_IPA]);\n    }\n    if (output[_BPP] != null) {\n        contents[_BPP] = __parseBoolean(output[_BPP]);\n    }\n    if (output[_RPB] != null) {\n        contents[_RPB] = __parseBoolean(output[_RPB]);\n    }\n    return contents;\n};\nconst de_QueueConfiguration = (output, context) => {\n    const contents = {};\n    if (output[_I] != null) {\n        contents[_I] = __expectString(output[_I]);\n    }\n    if (output[_Qu] != null) {\n        contents[_QA] = __expectString(output[_Qu]);\n    }\n    if (output.Event === \"\") {\n        contents[_Eve] = [];\n    }\n    else if (output[_Ev] != null) {\n        contents[_Eve] = de_EventList(__getArrayIfSingleItem(output[_Ev]), context);\n    }\n    if (output[_F] != null) {\n        contents[_F] = de_NotificationConfigurationFilter(output[_F], context);\n    }\n    return contents;\n};\nconst de_QueueConfigurationList = (output, context) => {\n    return (output || [])\n        .filter((e) => e != null)\n        .map((entry) => {\n        return de_QueueConfiguration(entry, context);\n    });\n};\nconst de_Redirect = (output, context) => {\n    const contents = {};\n    if (output[_HN] != null) {\n        contents[_HN] = __expectString(output[_HN]);\n    }\n    if (output[_HRC] != null) {\n        contents[_HRC] = __expectString(output[_HRC]);\n    }\n    if (output[_Pr] != null) {\n        contents[_Pr] = __expectString(output[_Pr]);\n    }\n    if (output[_RKPW] != null) {\n        contents[_RKPW] = __expectString(output[_RKPW]);\n    }\n    if (output[_RKW] != null) {\n        contents[_RKW] = __expectString(output[_RKW]);\n    }\n    return contents;\n};\nconst de_RedirectAllRequestsTo = (output, context) => {\n    const contents = {};\n    if (output[_HN] != null) {\n        contents[_HN] = __expectString(output[_HN]);\n    }\n    if (output[_Pr] != null) {\n        contents[_Pr] = __expectString(output[_Pr]);\n    }\n    return contents;\n};\nconst de_ReplicaModifications = (output, context) => {\n    const contents = {};\n    if (output[_S] != null) {\n        contents[_S] = __expectString(output[_S]);\n    }\n    return contents;\n};\nconst de_ReplicationConfiguration = (output, context) => {\n    const contents = {};\n    if (output[_Ro] != null) {\n        contents[_Ro] = __expectString(output[_Ro]);\n    }\n    if (output.Rule === \"\") {\n        contents[_Rul] = [];\n    }\n    else if (output[_Ru] != null) {\n        contents[_Rul] = de_ReplicationRules(__getArrayIfSingleItem(output[_Ru]), context);\n    }\n    return contents;\n};\nconst de_ReplicationRule = (output, context) => {\n    const contents = {};\n    if (output[_ID_] != null) {\n        contents[_ID_] = __expectString(output[_ID_]);\n    }\n    if (output[_Pri] != null) {\n        contents[_Pri] = __strictParseInt32(output[_Pri]);\n    }\n    if (output[_P] != null) {\n        contents[_P] = __expectString(output[_P]);\n    }\n    if (output[_F] != null) {\n        contents[_F] = de_ReplicationRuleFilter(output[_F], context);\n    }\n    if (output[_S] != null) {\n        contents[_S] = __expectString(output[_S]);\n    }\n    if (output[_SSC] != null) {\n        contents[_SSC] = de_SourceSelectionCriteria(output[_SSC], context);\n    }\n    if (output[_EOR] != null) {\n        contents[_EOR] = de_ExistingObjectReplication(output[_EOR], context);\n    }\n    if (output[_Des] != null) {\n        contents[_Des] = de_Destination(output[_Des], context);\n    }\n    if (output[_DMR] != null) {\n        contents[_DMR] = de_DeleteMarkerReplication(output[_DMR], context);\n    }\n    return contents;\n};\nconst de_ReplicationRuleAndOperator = (output, context) => {\n    const contents = {};\n    if (output[_P] != null) {\n        contents[_P] = __expectString(output[_P]);\n    }\n    if (output.Tag === \"\") {\n        contents[_Tag] = [];\n    }\n    else if (output[_Ta] != null) {\n        contents[_Tag] = de_TagSet(__getArrayIfSingleItem(output[_Ta]), context);\n    }\n    return contents;\n};\nconst de_ReplicationRuleFilter = (output, context) => {\n    const contents = {};\n    if (output[_P] != null) {\n        contents[_P] = __expectString(output[_P]);\n    }\n    if (output[_Ta] != null) {\n        contents[_Ta] = de_Tag(output[_Ta], context);\n    }\n    if (output[_A] != null) {\n        contents[_A] = de_ReplicationRuleAndOperator(output[_A], context);\n    }\n    return contents;\n};\nconst de_ReplicationRules = (output, context) => {\n    return (output || [])\n        .filter((e) => e != null)\n        .map((entry) => {\n        return de_ReplicationRule(entry, context);\n    });\n};\nconst de_ReplicationTime = (output, context) => {\n    const contents = {};\n    if (output[_S] != null) {\n        contents[_S] = __expectString(output[_S]);\n    }\n    if (output[_Tim] != null) {\n        contents[_Tim] = de_ReplicationTimeValue(output[_Tim], context);\n    }\n    return contents;\n};\nconst de_ReplicationTimeValue = (output, context) => {\n    const contents = {};\n    if (output[_Mi] != null) {\n        contents[_Mi] = __strictParseInt32(output[_Mi]);\n    }\n    return contents;\n};\nconst de_RestoreStatus = (output, context) => {\n    const contents = {};\n    if (output[_IRIP] != null) {\n        contents[_IRIP] = __parseBoolean(output[_IRIP]);\n    }\n    if (output[_RED] != null) {\n        contents[_RED] = __expectNonNull(__parseRfc3339DateTimeWithOffset(output[_RED]));\n    }\n    return contents;\n};\nconst de_RoutingRule = (output, context) => {\n    const contents = {};\n    if (output[_Con] != null) {\n        contents[_Con] = de_Condition(output[_Con], context);\n    }\n    if (output[_Red] != null) {\n        contents[_Red] = de_Redirect(output[_Red], context);\n    }\n    return contents;\n};\nconst de_RoutingRules = (output, context) => {\n    return (output || [])\n        .filter((e) => e != null)\n        .map((entry) => {\n        return de_RoutingRule(entry, context);\n    });\n};\nconst de_S3KeyFilter = (output, context) => {\n    const contents = {};\n    if (output.FilterRule === \"\") {\n        contents[_FRi] = [];\n    }\n    else if (output[_FR] != null) {\n        contents[_FRi] = de_FilterRuleList(__getArrayIfSingleItem(output[_FR]), context);\n    }\n    return contents;\n};\nconst de_S3TablesDestinationResult = (output, context) => {\n    const contents = {};\n    if (output[_TBA] != null) {\n        contents[_TBA] = __expectString(output[_TBA]);\n    }\n    if (output[_TN] != null) {\n        contents[_TN] = __expectString(output[_TN]);\n    }\n    if (output[_TAa] != null) {\n        contents[_TAa] = __expectString(output[_TAa]);\n    }\n    if (output[_TNa] != null) {\n        contents[_TNa] = __expectString(output[_TNa]);\n    }\n    return contents;\n};\nconst de_ServerSideEncryptionByDefault = (output, context) => {\n    const contents = {};\n    if (output[_SSEA] != null) {\n        contents[_SSEA] = __expectString(output[_SSEA]);\n    }\n    if (output[_KMSMKID] != null) {\n        contents[_KMSMKID] = __expectString(output[_KMSMKID]);\n    }\n    return contents;\n};\nconst de_ServerSideEncryptionConfiguration = (output, context) => {\n    const contents = {};\n    if (output.Rule === \"\") {\n        contents[_Rul] = [];\n    }\n    else if (output[_Ru] != null) {\n        contents[_Rul] = de_ServerSideEncryptionRules(__getArrayIfSingleItem(output[_Ru]), context);\n    }\n    return contents;\n};\nconst de_ServerSideEncryptionRule = (output, context) => {\n    const contents = {};\n    if (output[_ASSEBD] != null) {\n        contents[_ASSEBD] = de_ServerSideEncryptionByDefault(output[_ASSEBD], context);\n    }\n    if (output[_BKE] != null) {\n        contents[_BKE] = __parseBoolean(output[_BKE]);\n    }\n    return contents;\n};\nconst de_ServerSideEncryptionRules = (output, context) => {\n    return (output || [])\n        .filter((e) => e != null)\n        .map((entry) => {\n        return de_ServerSideEncryptionRule(entry, context);\n    });\n};\nconst de_SessionCredentials = (output, context) => {\n    const contents = {};\n    if (output[_AKI] != null) {\n        contents[_AKI] = __expectString(output[_AKI]);\n    }\n    if (output[_SAK] != null) {\n        contents[_SAK] = __expectString(output[_SAK]);\n    }\n    if (output[_ST] != null) {\n        contents[_ST] = __expectString(output[_ST]);\n    }\n    if (output[_Exp] != null) {\n        contents[_Exp] = __expectNonNull(__parseRfc3339DateTimeWithOffset(output[_Exp]));\n    }\n    return contents;\n};\nconst de_SimplePrefix = (output, context) => {\n    const contents = {};\n    return contents;\n};\nconst de_SourceSelectionCriteria = (output, context) => {\n    const contents = {};\n    if (output[_SKEO] != null) {\n        contents[_SKEO] = de_SseKmsEncryptedObjects(output[_SKEO], context);\n    }\n    if (output[_RM] != null) {\n        contents[_RM] = de_ReplicaModifications(output[_RM], context);\n    }\n    return contents;\n};\nconst de_SSEKMS = (output, context) => {\n    const contents = {};\n    if (output[_KI] != null) {\n        contents[_KI] = __expectString(output[_KI]);\n    }\n    return contents;\n};\nconst de_SseKmsEncryptedObjects = (output, context) => {\n    const contents = {};\n    if (output[_S] != null) {\n        contents[_S] = __expectString(output[_S]);\n    }\n    return contents;\n};\nconst de_SSES3 = (output, context) => {\n    const contents = {};\n    return contents;\n};\nconst de_Stats = (output, context) => {\n    const contents = {};\n    if (output[_BS] != null) {\n        contents[_BS] = __strictParseLong(output[_BS]);\n    }\n    if (output[_BP] != null) {\n        contents[_BP] = __strictParseLong(output[_BP]);\n    }\n    if (output[_BRy] != null) {\n        contents[_BRy] = __strictParseLong(output[_BRy]);\n    }\n    return contents;\n};\nconst de_StorageClassAnalysis = (output, context) => {\n    const contents = {};\n    if (output[_DE] != null) {\n        contents[_DE] = de_StorageClassAnalysisDataExport(output[_DE], context);\n    }\n    return contents;\n};\nconst de_StorageClassAnalysisDataExport = (output, context) => {\n    const contents = {};\n    if (output[_OSV] != null) {\n        contents[_OSV] = __expectString(output[_OSV]);\n    }\n    if (output[_Des] != null) {\n        contents[_Des] = de_AnalyticsExportDestination(output[_Des], context);\n    }\n    return contents;\n};\nconst de_Tag = (output, context) => {\n    const contents = {};\n    if (output[_K] != null) {\n        contents[_K] = __expectString(output[_K]);\n    }\n    if (output[_Va] != null) {\n        contents[_Va] = __expectString(output[_Va]);\n    }\n    return contents;\n};\nconst de_TagSet = (output, context) => {\n    return (output || [])\n        .filter((e) => e != null)\n        .map((entry) => {\n        return de_Tag(entry, context);\n    });\n};\nconst de_TargetGrant = (output, context) => {\n    const contents = {};\n    if (output[_Gra] != null) {\n        contents[_Gra] = de_Grantee(output[_Gra], context);\n    }\n    if (output[_Pe] != null) {\n        contents[_Pe] = __expectString(output[_Pe]);\n    }\n    return contents;\n};\nconst de_TargetGrants = (output, context) => {\n    return (output || [])\n        .filter((e) => e != null)\n        .map((entry) => {\n        return de_TargetGrant(entry, context);\n    });\n};\nconst de_TargetObjectKeyFormat = (output, context) => {\n    const contents = {};\n    if (output[_SPi] != null) {\n        contents[_SPi] = de_SimplePrefix(output[_SPi], context);\n    }\n    if (output[_PP] != null) {\n        contents[_PP] = de_PartitionedPrefix(output[_PP], context);\n    }\n    return contents;\n};\nconst de_Tiering = (output, context) => {\n    const contents = {};\n    if (output[_Da] != null) {\n        contents[_Da] = __strictParseInt32(output[_Da]);\n    }\n    if (output[_AT] != null) {\n        contents[_AT] = __expectString(output[_AT]);\n    }\n    return contents;\n};\nconst de_TieringList = (output, context) => {\n    return (output || [])\n        .filter((e) => e != null)\n        .map((entry) => {\n        return de_Tiering(entry, context);\n    });\n};\nconst de_TopicConfiguration = (output, context) => {\n    const contents = {};\n    if (output[_I] != null) {\n        contents[_I] = __expectString(output[_I]);\n    }\n    if (output[_Top] != null) {\n        contents[_TA] = __expectString(output[_Top]);\n    }\n    if (output.Event === \"\") {\n        contents[_Eve] = [];\n    }\n    else if (output[_Ev] != null) {\n        contents[_Eve] = de_EventList(__getArrayIfSingleItem(output[_Ev]), context);\n    }\n    if (output[_F] != null) {\n        contents[_F] = de_NotificationConfigurationFilter(output[_F], context);\n    }\n    return contents;\n};\nconst de_TopicConfigurationList = (output, context) => {\n    return (output || [])\n        .filter((e) => e != null)\n        .map((entry) => {\n        return de_TopicConfiguration(entry, context);\n    });\n};\nconst de_Transition = (output, context) => {\n    const contents = {};\n    if (output[_Dat] != null) {\n        contents[_Dat] = __expectNonNull(__parseRfc3339DateTimeWithOffset(output[_Dat]));\n    }\n    if (output[_Da] != null) {\n        contents[_Da] = __strictParseInt32(output[_Da]);\n    }\n    if (output[_SC] != null) {\n        contents[_SC] = __expectString(output[_SC]);\n    }\n    return contents;\n};\nconst de_TransitionList = (output, context) => {\n    return (output || [])\n        .filter((e) => e != null)\n        .map((entry) => {\n        return de_Transition(entry, context);\n    });\n};\nconst deserializeMetadata = (output) => ({\n    httpStatusCode: output.statusCode,\n    requestId: output.headers[\"x-amzn-requestid\"] ?? output.headers[\"x-amzn-request-id\"] ?? output.headers[\"x-amz-request-id\"],\n    extendedRequestId: output.headers[\"x-amz-id-2\"],\n    cfId: output.headers[\"x-amz-cf-id\"],\n});\nconst collectBodyString = (streamBody, context) => collectBody(streamBody, context).then((body) => context.utf8Encoder(body));\nconst _A = \"And\";\nconst _AAO = \"AnalyticsAndOperator\";\nconst _AC = \"AnalyticsConfiguration\";\nconst _ACL = \"ACL\";\nconst _ACLc = \"AccessControlList\";\nconst _ACLn = \"AnalyticsConfigurationList\";\nconst _ACP = \"AccessControlPolicy\";\nconst _ACT = \"AccessControlTranslation\";\nconst _ACc = \"AccelerateConfiguration\";\nconst _AD = \"AbortDate\";\nconst _AED = \"AnalyticsExportDestination\";\nconst _AF = \"AnalyticsFilter\";\nconst _AH = \"AllowedHeader\";\nconst _AHl = \"AllowedHeaders\";\nconst _AI = \"AnalyticsId\";\nconst _AIMU = \"AbortIncompleteMultipartUpload\";\nconst _AIc = \"AccountId\";\nconst _AKI = \"AccessKeyId\";\nconst _AM = \"AllowedMethod\";\nconst _AMl = \"AllowedMethods\";\nconst _AO = \"AllowedOrigin\";\nconst _AOl = \"AllowedOrigins\";\nconst _APA = \"AccessPointAlias\";\nconst _APAc = \"AccessPointArn\";\nconst _AQRD = \"AllowQuotedRecordDelimiter\";\nconst _AR = \"AcceptRanges\";\nconst _ARI = \"AbortRuleId\";\nconst _AS = \"ArchiveStatus\";\nconst _ASBD = \"AnalyticsS3BucketDestination\";\nconst _ASEFF = \"AnalyticsS3ExportFileFormat\";\nconst _ASSEBD = \"ApplyServerSideEncryptionByDefault\";\nconst _AT = \"AccessTier\";\nconst _Ac = \"Account\";\nconst _B = \"Bucket\";\nconst _BAI = \"BucketAccountId\";\nconst _BAS = \"BucketAccelerateStatus\";\nconst _BGR = \"BypassGovernanceRetention\";\nconst _BI = \"BucketInfo\";\nconst _BKE = \"BucketKeyEnabled\";\nconst _BLC = \"BucketLifecycleConfiguration\";\nconst _BLCu = \"BucketLocationConstraint\";\nconst _BLN = \"BucketLocationName\";\nconst _BLP = \"BucketLogsPermission\";\nconst _BLS = \"BucketLoggingStatus\";\nconst _BLT = \"BucketLocationType\";\nconst _BN = \"BucketName\";\nconst _BP = \"BytesProcessed\";\nconst _BPA = \"BlockPublicAcls\";\nconst _BPP = \"BlockPublicPolicy\";\nconst _BR = \"BucketRegion\";\nconst _BRy = \"BytesReturned\";\nconst _BS = \"BytesScanned\";\nconst _BT = \"BucketType\";\nconst _BVS = \"BucketVersioningStatus\";\nconst _Bu = \"Buckets\";\nconst _C = \"Credentials\";\nconst _CA = \"ChecksumAlgorithm\";\nconst _CACL = \"CannedACL\";\nconst _CBC = \"CreateBucketConfiguration\";\nconst _CC = \"CacheControl\";\nconst _CCRC = \"ChecksumCRC32\";\nconst _CCRCC = \"ChecksumCRC32C\";\nconst _CCRCNVME = \"ChecksumCRC64NVME\";\nconst _CD = \"ContentDisposition\";\nconst _CDr = \"CreationDate\";\nconst _CE = \"ContentEncoding\";\nconst _CF = \"CloudFunction\";\nconst _CFC = \"CloudFunctionConfiguration\";\nconst _CL = \"ContentLanguage\";\nconst _CLo = \"ContentLength\";\nconst _CM = \"ChecksumMode\";\nconst _CMD = \"ContentMD5\";\nconst _CMU = \"CompletedMultipartUpload\";\nconst _CORSC = \"CORSConfiguration\";\nconst _CORSR = \"CORSRule\";\nconst _CORSRu = \"CORSRules\";\nconst _CP = \"CommonPrefixes\";\nconst _CPo = \"CompletedPart\";\nconst _CR = \"ContentRange\";\nconst _CRSBA = \"ConfirmRemoveSelfBucketAccess\";\nconst _CS = \"CopySource\";\nconst _CSHA = \"ChecksumSHA1\";\nconst _CSHAh = \"ChecksumSHA256\";\nconst _CSIM = \"CopySourceIfMatch\";\nconst _CSIMS = \"CopySourceIfModifiedSince\";\nconst _CSINM = \"CopySourceIfNoneMatch\";\nconst _CSIUS = \"CopySourceIfUnmodifiedSince\";\nconst _CSR = \"CopySourceRange\";\nconst _CSSSECA = \"CopySourceSSECustomerAlgorithm\";\nconst _CSSSECK = \"CopySourceSSECustomerKey\";\nconst _CSSSECKMD = \"CopySourceSSECustomerKeyMD5\";\nconst _CSV = \"CSV\";\nconst _CSVI = \"CopySourceVersionId\";\nconst _CSVIn = \"CSVInput\";\nconst _CSVO = \"CSVOutput\";\nconst _CT = \"ChecksumType\";\nconst _CTo = \"ContentType\";\nconst _CTom = \"CompressionType\";\nconst _CTon = \"ContinuationToken\";\nconst _Ch = \"Checksum\";\nconst _Co = \"Contents\";\nconst _Cod = \"Code\";\nconst _Com = \"Comments\";\nconst _Con = \"Condition\";\nconst _D = \"Delimiter\";\nconst _DAI = \"DaysAfterInitiation\";\nconst _DE = \"DataExport\";\nconst _DM = \"DeleteMarker\";\nconst _DMR = \"DeleteMarkerReplication\";\nconst _DMRS = \"DeleteMarkerReplicationStatus\";\nconst _DMVI = \"DeleteMarkerVersionId\";\nconst _DMe = \"DeleteMarkers\";\nconst _DN = \"DisplayName\";\nconst _DR = \"DataRedundancy\";\nconst _DRe = \"DefaultRetention\";\nconst _Da = \"Days\";\nconst _Dat = \"Date\";\nconst _De = \"Deleted\";\nconst _Del = \"Delete\";\nconst _Des = \"Destination\";\nconst _Desc = \"Description\";\nconst _E = \"Expires\";\nconst _EA = \"EmailAddress\";\nconst _EBC = \"EventBridgeConfiguration\";\nconst _EBO = \"ExpectedBucketOwner\";\nconst _EC = \"ErrorCode\";\nconst _ECn = \"EncryptionConfiguration\";\nconst _ED = \"ErrorDocument\";\nconst _EH = \"ExposeHeaders\";\nconst _EHx = \"ExposeHeader\";\nconst _EM = \"ErrorMessage\";\nconst _EODM = \"ExpiredObjectDeleteMarker\";\nconst _EOR = \"ExistingObjectReplication\";\nconst _EORS = \"ExistingObjectReplicationStatus\";\nconst _ERP = \"EnableRequestProgress\";\nconst _ES = \"ExpiresString\";\nconst _ESBO = \"ExpectedSourceBucketOwner\";\nconst _ESx = \"ExpirationStatus\";\nconst _ET = \"EncodingType\";\nconst _ETa = \"ETag\";\nconst _ETn = \"EncryptionType\";\nconst _ETv = \"EventThreshold\";\nconst _ETx = \"ExpressionType\";\nconst _En = \"Encryption\";\nconst _Ena = \"Enabled\";\nconst _End = \"End\";\nconst _Er = \"Error\";\nconst _Err = \"Errors\";\nconst _Ev = \"Event\";\nconst _Eve = \"Events\";\nconst _Ex = \"Expression\";\nconst _Exp = \"Expiration\";\nconst _F = \"Filter\";\nconst _FD = \"FieldDelimiter\";\nconst _FHI = \"FileHeaderInfo\";\nconst _FO = \"FetchOwner\";\nconst _FR = \"FilterRule\";\nconst _FRN = \"FilterRuleName\";\nconst _FRV = \"FilterRuleValue\";\nconst _FRi = \"FilterRules\";\nconst _Fi = \"Field\";\nconst _Fo = \"Format\";\nconst _Fr = \"Frequency\";\nconst _G = \"Grant\";\nconst _GFC = \"GrantFullControl\";\nconst _GJP = \"GlacierJobParameters\";\nconst _GR = \"GrantRead\";\nconst _GRACP = \"GrantReadACP\";\nconst _GW = \"GrantWrite\";\nconst _GWACP = \"GrantWriteACP\";\nconst _Gr = \"Grants\";\nconst _Gra = \"Grantee\";\nconst _HECRE = \"HttpErrorCodeReturnedEquals\";\nconst _HN = \"HostName\";\nconst _HRC = \"HttpRedirectCode\";\nconst _I = \"Id\";\nconst _IC = \"InventoryConfiguration\";\nconst _ICL = \"InventoryConfigurationList\";\nconst _ID = \"IndexDocument\";\nconst _ID_ = \"ID\";\nconst _IDn = \"InventoryDestination\";\nconst _IE = \"IsEnabled\";\nconst _IEn = \"InventoryEncryption\";\nconst _IF = \"InventoryFilter\";\nconst _IFn = \"InventoryFormat\";\nconst _IFnv = \"InventoryFrequency\";\nconst _II = \"InventoryId\";\nconst _IIOV = \"InventoryIncludedObjectVersions\";\nconst _IL = \"IsLatest\";\nconst _IM = \"IfMatch\";\nconst _IMIT = \"IfMatchInitiatedTime\";\nconst _IMLMT = \"IfMatchLastModifiedTime\";\nconst _IMS = \"IfMatchSize\";\nconst _IMSf = \"IfModifiedSince\";\nconst _INM = \"IfNoneMatch\";\nconst _IOF = \"InventoryOptionalField\";\nconst _IOV = \"IncludedObjectVersions\";\nconst _IP = \"IsPublic\";\nconst _IPA = \"IgnorePublicAcls\";\nconst _IRIP = \"IsRestoreInProgress\";\nconst _IS = \"InputSerialization\";\nconst _ISBD = \"InventoryS3BucketDestination\";\nconst _ISn = \"InventorySchedule\";\nconst _IT = \"IsTruncated\";\nconst _ITAO = \"IntelligentTieringAndOperator\";\nconst _ITAT = \"IntelligentTieringAccessTier\";\nconst _ITC = \"IntelligentTieringConfiguration\";\nconst _ITCL = \"IntelligentTieringConfigurationList\";\nconst _ITD = \"IntelligentTieringDays\";\nconst _ITF = \"IntelligentTieringFilter\";\nconst _ITI = \"IntelligentTieringId\";\nconst _ITS = \"IntelligentTieringStatus\";\nconst _IUS = \"IfUnmodifiedSince\";\nconst _In = \"Initiator\";\nconst _Ini = \"Initiated\";\nconst _JSON = \"JSON\";\nconst _JSONI = \"JSONInput\";\nconst _JSONO = \"JSONOutput\";\nconst _JSONT = \"JSONType\";\nconst _K = \"Key\";\nconst _KC = \"KeyCount\";\nconst _KI = \"KeyId\";\nconst _KM = \"KeyMarker\";\nconst _KMSC = \"KMSContext\";\nconst _KMSKI = \"KMSKeyId\";\nconst _KMSMKID = \"KMSMasterKeyID\";\nconst _KPE = \"KeyPrefixEquals\";\nconst _L = \"Location\";\nconst _LC = \"LocationConstraint\";\nconst _LE = \"LoggingEnabled\";\nconst _LEi = \"LifecycleExpiration\";\nconst _LFA = \"LambdaFunctionArn\";\nconst _LFC = \"LambdaFunctionConfigurations\";\nconst _LFCa = \"LambdaFunctionConfiguration\";\nconst _LI = \"LocationInfo\";\nconst _LM = \"LastModified\";\nconst _LMT = \"LastModifiedTime\";\nconst _LNAS = \"LocationNameAsString\";\nconst _LP = \"LocationPrefix\";\nconst _LR = \"LifecycleRule\";\nconst _LRAO = \"LifecycleRuleAndOperator\";\nconst _LRF = \"LifecycleRuleFilter\";\nconst _LT = \"LocationType\";\nconst _M = \"Marker\";\nconst _MAO = \"MetricsAndOperator\";\nconst _MAS = \"MaxAgeSeconds\";\nconst _MB = \"MaxBuckets\";\nconst _MC = \"MetricsConfiguration\";\nconst _MCL = \"MetricsConfigurationList\";\nconst _MD = \"MetadataDirective\";\nconst _MDB = \"MaxDirectoryBuckets\";\nconst _MDf = \"MfaDelete\";\nconst _ME = \"MetadataEntry\";\nconst _MF = \"MetricsFilter\";\nconst _MFA = \"MFA\";\nconst _MFAD = \"MFADelete\";\nconst _MI = \"MetricsId\";\nconst _MK = \"MaxKeys\";\nconst _MKe = \"MetadataKey\";\nconst _MM = \"MissingMeta\";\nconst _MOS = \"MpuObjectSize\";\nconst _MP = \"MaxParts\";\nconst _MS = \"MetricsStatus\";\nconst _MTC = \"MetadataTableConfiguration\";\nconst _MTCR = \"MetadataTableConfigurationResult\";\nconst _MU = \"MaxUploads\";\nconst _MV = \"MetadataValue\";\nconst _Me = \"Metrics\";\nconst _Mes = \"Message\";\nconst _Mi = \"Minutes\";\nconst _Mo = \"Mode\";\nconst _N = \"Name\";\nconst _NC = \"NotificationConfiguration\";\nconst _NCF = \"NotificationConfigurationFilter\";\nconst _NCT = \"NextContinuationToken\";\nconst _ND = \"NoncurrentDays\";\nconst _NI = \"NotificationId\";\nconst _NKM = \"NextKeyMarker\";\nconst _NM = \"NextMarker\";\nconst _NNV = \"NewerNoncurrentVersions\";\nconst _NPNM = \"NextPartNumberMarker\";\nconst _NUIM = \"NextUploadIdMarker\";\nconst _NVE = \"NoncurrentVersionExpiration\";\nconst _NVIM = \"NextVersionIdMarker\";\nconst _NVT = \"NoncurrentVersionTransitions\";\nconst _NVTo = \"NoncurrentVersionTransition\";\nconst _O = \"Owner\";\nconst _OA = \"ObjectAttributes\";\nconst _OC = \"OwnershipControls\";\nconst _OCACL = \"ObjectCannedACL\";\nconst _OCR = \"OwnershipControlsRule\";\nconst _OF = \"OptionalFields\";\nconst _OI = \"ObjectIdentifier\";\nconst _OK = \"ObjectKey\";\nconst _OL = \"OutputLocation\";\nconst _OLC = \"ObjectLockConfiguration\";\nconst _OLE = \"ObjectLockEnabled\";\nconst _OLEFB = \"ObjectLockEnabledForBucket\";\nconst _OLLH = \"ObjectLockLegalHold\";\nconst _OLLHS = \"ObjectLockLegalHoldStatus\";\nconst _OLM = \"ObjectLockMode\";\nconst _OLR = \"ObjectLockRetention\";\nconst _OLRM = \"ObjectLockRetentionMode\";\nconst _OLRUD = \"ObjectLockRetainUntilDate\";\nconst _OLRb = \"ObjectLockRule\";\nconst _OO = \"ObjectOwnership\";\nconst _OOA = \"OptionalObjectAttributes\";\nconst _OOw = \"OwnerOverride\";\nconst _OP = \"ObjectParts\";\nconst _OS = \"OutputSerialization\";\nconst _OSGT = \"ObjectSizeGreaterThan\";\nconst _OSGTB = \"ObjectSizeGreaterThanBytes\";\nconst _OSLT = \"ObjectSizeLessThan\";\nconst _OSLTB = \"ObjectSizeLessThanBytes\";\nconst _OSV = \"OutputSchemaVersion\";\nconst _OSb = \"ObjectSize\";\nconst _OVI = \"ObjectVersionId\";\nconst _Ob = \"Objects\";\nconst _P = \"Prefix\";\nconst _PABC = \"PublicAccessBlockConfiguration\";\nconst _PC = \"PartsCount\";\nconst _PDS = \"PartitionDateSource\";\nconst _PI = \"ParquetInput\";\nconst _PN = \"PartNumber\";\nconst _PNM = \"PartNumberMarker\";\nconst _PP = \"PartitionedPrefix\";\nconst _Pa = \"Payer\";\nconst _Par = \"Part\";\nconst _Parq = \"Parquet\";\nconst _Part = \"Parts\";\nconst _Pe = \"Permission\";\nconst _Pr = \"Protocol\";\nconst _Pri = \"Priority\";\nconst _Q = \"Quiet\";\nconst _QA = \"QueueArn\";\nconst _QC = \"QueueConfiguration\";\nconst _QCu = \"QueueConfigurations\";\nconst _QCuo = \"QuoteCharacter\";\nconst _QEC = \"QuoteEscapeCharacter\";\nconst _QF = \"QuoteFields\";\nconst _Qu = \"Queue\";\nconst _R = \"Range\";\nconst _RART = \"RedirectAllRequestsTo\";\nconst _RC = \"RequestCharged\";\nconst _RCC = \"ResponseCacheControl\";\nconst _RCD = \"ResponseContentDisposition\";\nconst _RCE = \"ResponseContentEncoding\";\nconst _RCL = \"ResponseContentLanguage\";\nconst _RCT = \"ResponseContentType\";\nconst _RCe = \"ReplicationConfiguration\";\nconst _RD = \"RecordDelimiter\";\nconst _RE = \"ResponseExpires\";\nconst _RED = \"RestoreExpiryDate\";\nconst _RKKID = \"ReplicaKmsKeyID\";\nconst _RKPW = \"ReplaceKeyPrefixWith\";\nconst _RKW = \"ReplaceKeyWith\";\nconst _RM = \"ReplicaModifications\";\nconst _RMS = \"ReplicaModificationsStatus\";\nconst _ROP = \"RestoreOutputPath\";\nconst _RP = \"RequestPayer\";\nconst _RPB = \"RestrictPublicBuckets\";\nconst _RPC = \"RequestPaymentConfiguration\";\nconst _RPe = \"RequestProgress\";\nconst _RR = \"RequestRoute\";\nconst _RRAO = \"ReplicationRuleAndOperator\";\nconst _RRF = \"ReplicationRuleFilter\";\nconst _RRS = \"ReplicationRuleStatus\";\nconst _RRT = \"RestoreRequestType\";\nconst _RRe = \"ReplicationRule\";\nconst _RRes = \"RestoreRequest\";\nconst _RRo = \"RoutingRules\";\nconst _RRou = \"RoutingRule\";\nconst _RS = \"ReplicationStatus\";\nconst _RSe = \"RestoreStatus\";\nconst _RT = \"RequestToken\";\nconst _RTS = \"ReplicationTimeStatus\";\nconst _RTV = \"ReplicationTimeValue\";\nconst _RTe = \"ReplicationTime\";\nconst _RUD = \"RetainUntilDate\";\nconst _Re = \"Restore\";\nconst _Red = \"Redirect\";\nconst _Ro = \"Role\";\nconst _Ru = \"Rule\";\nconst _Rul = \"Rules\";\nconst _S = \"Status\";\nconst _SA = \"StartAfter\";\nconst _SAK = \"SecretAccessKey\";\nconst _SBD = \"S3BucketDestination\";\nconst _SC = \"StorageClass\";\nconst _SCA = \"StorageClassAnalysis\";\nconst _SCADE = \"StorageClassAnalysisDataExport\";\nconst _SCASV = \"StorageClassAnalysisSchemaVersion\";\nconst _SCt = \"StatusCode\";\nconst _SDV = \"SkipDestinationValidation\";\nconst _SK = \"SSE-KMS\";\nconst _SKEO = \"SseKmsEncryptedObjects\";\nconst _SKEOS = \"SseKmsEncryptedObjectsStatus\";\nconst _SKF = \"S3KeyFilter\";\nconst _SKe = \"S3Key\";\nconst _SL = \"S3Location\";\nconst _SM = \"SessionMode\";\nconst _SOCR = \"SelectObjectContentRequest\";\nconst _SP = \"SelectParameters\";\nconst _SPi = \"SimplePrefix\";\nconst _SR = \"ScanRange\";\nconst _SS = \"SSE-S3\";\nconst _SSC = \"SourceSelectionCriteria\";\nconst _SSE = \"ServerSideEncryption\";\nconst _SSEA = \"SSEAlgorithm\";\nconst _SSEBD = \"ServerSideEncryptionByDefault\";\nconst _SSEC = \"ServerSideEncryptionConfiguration\";\nconst _SSECA = \"SSECustomerAlgorithm\";\nconst _SSECK = \"SSECustomerKey\";\nconst _SSECKMD = \"SSECustomerKeyMD5\";\nconst _SSEKMS = \"SSEKMS\";\nconst _SSEKMSEC = \"SSEKMSEncryptionContext\";\nconst _SSEKMSKI = \"SSEKMSKeyId\";\nconst _SSER = \"ServerSideEncryptionRule\";\nconst _SSES = \"SSES3\";\nconst _ST = \"SessionToken\";\nconst _STBA = \"S3TablesBucketArn\";\nconst _STD = \"S3TablesDestination\";\nconst _STDR = \"S3TablesDestinationResult\";\nconst _STN = \"S3TablesName\";\nconst _S_ = \"S3\";\nconst _Sc = \"Schedule\";\nconst _Se = \"Setting\";\nconst _Si = \"Size\";\nconst _St = \"Start\";\nconst _Su = \"Suffix\";\nconst _T = \"Tagging\";\nconst _TA = \"TopicArn\";\nconst _TAa = \"TableArn\";\nconst _TB = \"TargetBucket\";\nconst _TBA = \"TableBucketArn\";\nconst _TC = \"TagCount\";\nconst _TCo = \"TopicConfiguration\";\nconst _TCop = \"TopicConfigurations\";\nconst _TD = \"TaggingDirective\";\nconst _TDMOS = \"TransitionDefaultMinimumObjectSize\";\nconst _TG = \"TargetGrants\";\nconst _TGa = \"TargetGrant\";\nconst _TN = \"TableName\";\nconst _TNa = \"TableNamespace\";\nconst _TOKF = \"TargetObjectKeyFormat\";\nconst _TP = \"TargetPrefix\";\nconst _TPC = \"TotalPartsCount\";\nconst _TS = \"TagSet\";\nconst _TSC = \"TransitionStorageClass\";\nconst _Ta = \"Tag\";\nconst _Tag = \"Tags\";\nconst _Ti = \"Tier\";\nconst _Tie = \"Tierings\";\nconst _Tier = \"Tiering\";\nconst _Tim = \"Time\";\nconst _To = \"Token\";\nconst _Top = \"Topic\";\nconst _Tr = \"Transitions\";\nconst _Tra = \"Transition\";\nconst _Ty = \"Type\";\nconst _U = \"Upload\";\nconst _UI = \"UploadId\";\nconst _UIM = \"UploadIdMarker\";\nconst _UM = \"UserMetadata\";\nconst _URI = \"URI\";\nconst _Up = \"Uploads\";\nconst _V = \"Version\";\nconst _VC = \"VersionCount\";\nconst _VCe = \"VersioningConfiguration\";\nconst _VI = \"VersionId\";\nconst _VIM = \"VersionIdMarker\";\nconst _Va = \"Value\";\nconst _Ve = \"Versions\";\nconst _WC = \"WebsiteConfiguration\";\nconst _WOB = \"WriteOffsetBytes\";\nconst _WRL = \"WebsiteRedirectLocation\";\nconst _Y = \"Years\";\nconst _a = \"analytics\";\nconst _ac = \"accelerate\";\nconst _acl = \"acl\";\nconst _ar = \"accept-ranges\";\nconst _at = \"attributes\";\nconst _br = \"bucket-region\";\nconst _c = \"cors\";\nconst _cc = \"cache-control\";\nconst _cd = \"content-disposition\";\nconst _ce = \"content-encoding\";\nconst _cl = \"content-language\";\nconst _cl_ = \"content-length\";\nconst _cm = \"content-md5\";\nconst _cr = \"content-range\";\nconst _ct = \"content-type\";\nconst _ct_ = \"continuation-token\";\nconst _d = \"delete\";\nconst _de = \"delimiter\";\nconst _e = \"expires\";\nconst _en = \"encryption\";\nconst _et = \"encoding-type\";\nconst _eta = \"etag\";\nconst _ex = \"expiresstring\";\nconst _fo = \"fetch-owner\";\nconst _i = \"id\";\nconst _im = \"if-match\";\nconst _ims = \"if-modified-since\";\nconst _in = \"inventory\";\nconst _inm = \"if-none-match\";\nconst _it = \"intelligent-tiering\";\nconst _ius = \"if-unmodified-since\";\nconst _km = \"key-marker\";\nconst _l = \"lifecycle\";\nconst _lh = \"legal-hold\";\nconst _lm = \"last-modified\";\nconst _lo = \"location\";\nconst _log = \"logging\";\nconst _lt = \"list-type\";\nconst _m = \"metrics\";\nconst _mT = \"metadataTable\";\nconst _ma = \"marker\";\nconst _mb = \"max-buckets\";\nconst _mdb = \"max-directory-buckets\";\nconst _me = \"member\";\nconst _mk = \"max-keys\";\nconst _mp = \"max-parts\";\nconst _mu = \"max-uploads\";\nconst _n = \"notification\";\nconst _oC = \"ownershipControls\";\nconst _ol = \"object-lock\";\nconst _p = \"policy\";\nconst _pAB = \"publicAccessBlock\";\nconst _pN = \"partNumber\";\nconst _pS = \"policyStatus\";\nconst _pnm = \"part-number-marker\";\nconst _pr = \"prefix\";\nconst _r = \"replication\";\nconst _rP = \"requestPayment\";\nconst _ra = \"range\";\nconst _rcc = \"response-cache-control\";\nconst _rcd = \"response-content-disposition\";\nconst _rce = \"response-content-encoding\";\nconst _rcl = \"response-content-language\";\nconst _rct = \"response-content-type\";\nconst _re = \"response-expires\";\nconst _res = \"restore\";\nconst _ret = \"retention\";\nconst _s = \"session\";\nconst _sa = \"start-after\";\nconst _se = \"select\";\nconst _st = \"select-type\";\nconst _t = \"tagging\";\nconst _to = \"torrent\";\nconst _u = \"uploads\";\nconst _uI = \"uploadId\";\nconst _uim = \"upload-id-marker\";\nconst _v = \"versioning\";\nconst _vI = \"versionId\";\nconst _ve = '<?xml version=\"1.0\" encoding=\"UTF-8\"?>';\nconst _ver = \"versions\";\nconst _vim = \"version-id-marker\";\nconst _w = \"website\";\nconst _x = \"xsi:type\";\nconst _xaa = \"x-amz-acl\";\nconst _xaad = \"x-amz-abort-date\";\nconst _xaapa = \"x-amz-access-point-alias\";\nconst _xaari = \"x-amz-abort-rule-id\";\nconst _xaas = \"x-amz-archive-status\";\nconst _xabgr = \"x-amz-bypass-governance-retention\";\nconst _xabln = \"x-amz-bucket-location-name\";\nconst _xablt = \"x-amz-bucket-location-type\";\nconst _xabole = \"x-amz-bucket-object-lock-enabled\";\nconst _xabolt = \"x-amz-bucket-object-lock-token\";\nconst _xabr = \"x-amz-bucket-region\";\nconst _xaca = \"x-amz-checksum-algorithm\";\nconst _xacc = \"x-amz-checksum-crc32\";\nconst _xacc_ = \"x-amz-checksum-crc32c\";\nconst _xacc__ = \"x-amz-checksum-crc64nvme\";\nconst _xacm = \"x-amz-checksum-mode\";\nconst _xacrsba = \"x-amz-confirm-remove-self-bucket-access\";\nconst _xacs = \"x-amz-checksum-sha1\";\nconst _xacs_ = \"x-amz-checksum-sha256\";\nconst _xacs__ = \"x-amz-copy-source\";\nconst _xacsim = \"x-amz-copy-source-if-match\";\nconst _xacsims = \"x-amz-copy-source-if-modified-since\";\nconst _xacsinm = \"x-amz-copy-source-if-none-match\";\nconst _xacsius = \"x-amz-copy-source-if-unmodified-since\";\nconst _xacsm = \"x-amz-create-session-mode\";\nconst _xacsr = \"x-amz-copy-source-range\";\nconst _xacssseca = \"x-amz-copy-source-server-side-encryption-customer-algorithm\";\nconst _xacssseck = \"x-amz-copy-source-server-side-encryption-customer-key\";\nconst _xacssseckm = \"x-amz-copy-source-server-side-encryption-customer-key-md5\";\nconst _xacsvi = \"x-amz-copy-source-version-id\";\nconst _xact = \"x-amz-checksum-type\";\nconst _xadm = \"x-amz-delete-marker\";\nconst _xae = \"x-amz-expiration\";\nconst _xaebo = \"x-amz-expected-bucket-owner\";\nconst _xafec = \"x-amz-fwd-error-code\";\nconst _xafem = \"x-amz-fwd-error-message\";\nconst _xafhar = \"x-amz-fwd-header-accept-ranges\";\nconst _xafhcc = \"x-amz-fwd-header-cache-control\";\nconst _xafhcd = \"x-amz-fwd-header-content-disposition\";\nconst _xafhce = \"x-amz-fwd-header-content-encoding\";\nconst _xafhcl = \"x-amz-fwd-header-content-language\";\nconst _xafhcr = \"x-amz-fwd-header-content-range\";\nconst _xafhct = \"x-amz-fwd-header-content-type\";\nconst _xafhe = \"x-amz-fwd-header-etag\";\nconst _xafhe_ = \"x-amz-fwd-header-expires\";\nconst _xafhlm = \"x-amz-fwd-header-last-modified\";\nconst _xafhxacc = \"x-amz-fwd-header-x-amz-checksum-crc32\";\nconst _xafhxacc_ = \"x-amz-fwd-header-x-amz-checksum-crc32c\";\nconst _xafhxacc__ = \"x-amz-fwd-header-x-amz-checksum-crc64nvme\";\nconst _xafhxacs = \"x-amz-fwd-header-x-amz-checksum-sha1\";\nconst _xafhxacs_ = \"x-amz-fwd-header-x-amz-checksum-sha256\";\nconst _xafhxadm = \"x-amz-fwd-header-x-amz-delete-marker\";\nconst _xafhxae = \"x-amz-fwd-header-x-amz-expiration\";\nconst _xafhxamm = \"x-amz-fwd-header-x-amz-missing-meta\";\nconst _xafhxampc = \"x-amz-fwd-header-x-amz-mp-parts-count\";\nconst _xafhxaollh = \"x-amz-fwd-header-x-amz-object-lock-legal-hold\";\nconst _xafhxaolm = \"x-amz-fwd-header-x-amz-object-lock-mode\";\nconst _xafhxaolrud = \"x-amz-fwd-header-x-amz-object-lock-retain-until-date\";\nconst _xafhxar = \"x-amz-fwd-header-x-amz-restore\";\nconst _xafhxarc = \"x-amz-fwd-header-x-amz-request-charged\";\nconst _xafhxars = \"x-amz-fwd-header-x-amz-replication-status\";\nconst _xafhxasc = \"x-amz-fwd-header-x-amz-storage-class\";\nconst _xafhxasse = \"x-amz-fwd-header-x-amz-server-side-encryption\";\nconst _xafhxasseakki = \"x-amz-fwd-header-x-amz-server-side-encryption-aws-kms-key-id\";\nconst _xafhxassebke = \"x-amz-fwd-header-x-amz-server-side-encryption-bucket-key-enabled\";\nconst _xafhxasseca = \"x-amz-fwd-header-x-amz-server-side-encryption-customer-algorithm\";\nconst _xafhxasseckm = \"x-amz-fwd-header-x-amz-server-side-encryption-customer-key-md5\";\nconst _xafhxatc = \"x-amz-fwd-header-x-amz-tagging-count\";\nconst _xafhxavi = \"x-amz-fwd-header-x-amz-version-id\";\nconst _xafs = \"x-amz-fwd-status\";\nconst _xagfc = \"x-amz-grant-full-control\";\nconst _xagr = \"x-amz-grant-read\";\nconst _xagra = \"x-amz-grant-read-acp\";\nconst _xagw = \"x-amz-grant-write\";\nconst _xagwa = \"x-amz-grant-write-acp\";\nconst _xaimit = \"x-amz-if-match-initiated-time\";\nconst _xaimlmt = \"x-amz-if-match-last-modified-time\";\nconst _xaims = \"x-amz-if-match-size\";\nconst _xam = \"x-amz-mfa\";\nconst _xamd = \"x-amz-metadata-directive\";\nconst _xamm = \"x-amz-missing-meta\";\nconst _xamos = \"x-amz-mp-object-size\";\nconst _xamp = \"x-amz-max-parts\";\nconst _xampc = \"x-amz-mp-parts-count\";\nconst _xaoa = \"x-amz-object-attributes\";\nconst _xaollh = \"x-amz-object-lock-legal-hold\";\nconst _xaolm = \"x-amz-object-lock-mode\";\nconst _xaolrud = \"x-amz-object-lock-retain-until-date\";\nconst _xaoo = \"x-amz-object-ownership\";\nconst _xaooa = \"x-amz-optional-object-attributes\";\nconst _xaos = \"x-amz-object-size\";\nconst _xapnm = \"x-amz-part-number-marker\";\nconst _xar = \"x-amz-restore\";\nconst _xarc = \"x-amz-request-charged\";\nconst _xarop = \"x-amz-restore-output-path\";\nconst _xarp = \"x-amz-request-payer\";\nconst _xarr = \"x-amz-request-route\";\nconst _xars = \"x-amz-replication-status\";\nconst _xart = \"x-amz-request-token\";\nconst _xasc = \"x-amz-storage-class\";\nconst _xasca = \"x-amz-sdk-checksum-algorithm\";\nconst _xasdv = \"x-amz-skip-destination-validation\";\nconst _xasebo = \"x-amz-source-expected-bucket-owner\";\nconst _xasse = \"x-amz-server-side-encryption\";\nconst _xasseakki = \"x-amz-server-side-encryption-aws-kms-key-id\";\nconst _xassebke = \"x-amz-server-side-encryption-bucket-key-enabled\";\nconst _xassec = \"x-amz-server-side-encryption-context\";\nconst _xasseca = \"x-amz-server-side-encryption-customer-algorithm\";\nconst _xasseck = \"x-amz-server-side-encryption-customer-key\";\nconst _xasseckm = \"x-amz-server-side-encryption-customer-key-md5\";\nconst _xat = \"x-amz-tagging\";\nconst _xatc = \"x-amz-tagging-count\";\nconst _xatd = \"x-amz-tagging-directive\";\nconst _xatdmos = \"x-amz-transition-default-minimum-object-size\";\nconst _xavi = \"x-amz-version-id\";\nconst _xawob = \"x-amz-write-offset-bytes\";\nconst _xawrl = \"x-amz-website-redirect-location\";\nconst _xi = \"x-id\";\n","import { getThrow200ExceptionsPlugin } from \"@aws-sdk/middleware-sdk-s3\";\nimport { getEndpointPlugin } from \"@smithy/middleware-endpoint\";\nimport { getSerdePlugin } from \"@smithy/middleware-serde\";\nimport { Command as $Command } from \"@smithy/smithy-client\";\nimport { commonParams } from \"../endpoint/EndpointParameters\";\nimport { CreateSessionOutputFilterSensitiveLog, CreateSessionRequestFilterSensitiveLog, } from \"../models/models_0\";\nimport { de_CreateSessionCommand, se_CreateSessionCommand } from \"../protocols/Aws_restXml\";\nexport { $Command };\nexport class CreateSessionCommand extends $Command\n    .classBuilder()\n    .ep({\n    ...commonParams,\n    DisableS3ExpressSessionAuth: { type: \"staticContextParams\", value: true },\n    Bucket: { type: \"contextParams\", name: \"Bucket\" },\n})\n    .m(function (Command, cs, config, o) {\n    return [\n        getSerdePlugin(config, this.serialize, this.deserialize),\n        getEndpointPlugin(config, Command.getEndpointParameterInstructions()),\n        getThrow200ExceptionsPlugin(config),\n    ];\n})\n    .s(\"AmazonS3\", \"CreateSession\", {})\n    .n(\"S3Client\", \"CreateSessionCommand\")\n    .f(CreateSessionRequestFilterSensitiveLog, CreateSessionOutputFilterSensitiveLog)\n    .ser(se_CreateSessionCommand)\n    .de(de_CreateSessionCommand)\n    .build() {\n}\n","import { setCredentialFeature } from \"@aws-sdk/core/client\";\nimport { CredentialsProviderError } from \"@smithy/property-provider\";\nexport const ENV_KEY = \"AWS_ACCESS_KEY_ID\";\nexport const ENV_SECRET = \"AWS_SECRET_ACCESS_KEY\";\nexport const ENV_SESSION = \"AWS_SESSION_TOKEN\";\nexport const ENV_EXPIRATION = \"AWS_CREDENTIAL_EXPIRATION\";\nexport const ENV_CREDENTIAL_SCOPE = \"AWS_CREDENTIAL_SCOPE\";\nexport const ENV_ACCOUNT_ID = \"AWS_ACCOUNT_ID\";\nexport const fromEnv = (init) => async () => {\n    init?.logger?.debug(\"@aws-sdk/credential-provider-env - fromEnv\");\n    const accessKeyId = process.env[ENV_KEY];\n    const secretAccessKey = process.env[ENV_SECRET];\n    const sessionToken = process.env[ENV_SESSION];\n    const expiry = process.env[ENV_EXPIRATION];\n    const credentialScope = process.env[ENV_CREDENTIAL_SCOPE];\n    const accountId = process.env[ENV_ACCOUNT_ID];\n    if (accessKeyId && secretAccessKey) {\n        const credentials = {\n            accessKeyId,\n            secretAccessKey,\n            ...(sessionToken && { sessionToken }),\n            ...(expiry && { expiration: new Date(expiry) }),\n            ...(credentialScope && { credentialScope }),\n            ...(accountId && { accountId }),\n        };\n        setCredentialFeature(credentials, \"CREDENTIALS_ENV_VARS\", \"g\");\n        return credentials;\n    }\n    throw new CredentialsProviderError(\"Unable to find environment variable credentials.\", { logger: init?.logger });\n};\n","import { chain, CredentialsProviderError } from \"@smithy/property-provider\";\nexport const ENV_IMDS_DISABLED = \"AWS_EC2_METADATA_DISABLED\";\nexport const remoteProvider = async (init) => {\n    const { ENV_CMDS_FULL_URI, ENV_CMDS_RELATIVE_URI, fromContainerMetadata, fromInstanceMetadata } = await import(\"@smithy/credential-provider-imds\");\n    if (process.env[ENV_CMDS_RELATIVE_URI] || process.env[ENV_CMDS_FULL_URI]) {\n        init.logger?.debug(\"@aws-sdk/credential-provider-node - remoteProvider::fromHttp/fromContainerMetadata\");\n        const { fromHttp } = await import(\"@aws-sdk/credential-provider-http\");\n        return chain(fromHttp(init), fromContainerMetadata(init));\n    }\n    if (process.env[ENV_IMDS_DISABLED] && process.env[ENV_IMDS_DISABLED] !== \"false\") {\n        return async () => {\n            throw new CredentialsProviderError(\"EC2 Instance Metadata Service access disabled\", { logger: init.logger });\n        };\n    }\n    init.logger?.debug(\"@aws-sdk/credential-provider-node - remoteProvider::fromInstanceMetadata\");\n    return fromInstanceMetadata(init);\n};\n","import { ENV_KEY, ENV_SECRET, fromEnv } from \"@aws-sdk/credential-provider-env\";\nimport { chain, CredentialsProviderError, memoize } from \"@smithy/property-provider\";\nimport { ENV_PROFILE } from \"@smithy/shared-ini-file-loader\";\nimport { remoteProvider } from \"./remoteProvider\";\nlet multipleCredentialSourceWarningEmitted = false;\nexport const defaultProvider = (init = {}) => memoize(chain(async () => {\n    const profile = init.profile ?? process.env[ENV_PROFILE];\n    if (profile) {\n        const envStaticCredentialsAreSet = process.env[ENV_KEY] && process.env[ENV_SECRET];\n        if (envStaticCredentialsAreSet) {\n            if (!multipleCredentialSourceWarningEmitted) {\n                const warnFn = init.logger?.warn && init.logger?.constructor?.name !== \"NoOpLogger\" ? init.logger.warn : console.warn;\n                warnFn(`@aws-sdk/credential-provider-node - defaultProvider::fromEnv WARNING:\n    Multiple credential sources detected: \n    Both AWS_PROFILE and the pair AWS_ACCESS_KEY_ID/AWS_SECRET_ACCESS_KEY static credentials are set.\n    This SDK will proceed with the AWS_PROFILE value.\n    \n    However, a future version may change this behavior to prefer the ENV static credentials.\n    Please ensure that your environment only sets either the AWS_PROFILE or the\n    AWS_ACCESS_KEY_ID/AWS_SECRET_ACCESS_KEY pair.\n`);\n                multipleCredentialSourceWarningEmitted = true;\n            }\n        }\n        throw new CredentialsProviderError(\"AWS_PROFILE is set, skipping fromEnv provider.\", {\n            logger: init.logger,\n            tryNextLink: true,\n        });\n    }\n    init.logger?.debug(\"@aws-sdk/credential-provider-node - defaultProvider::fromEnv\");\n    return fromEnv(init)();\n}, async () => {\n    init.logger?.debug(\"@aws-sdk/credential-provider-node - defaultProvider::fromSSO\");\n    const { ssoStartUrl, ssoAccountId, ssoRegion, ssoRoleName, ssoSession } = init;\n    if (!ssoStartUrl && !ssoAccountId && !ssoRegion && !ssoRoleName && !ssoSession) {\n        throw new CredentialsProviderError(\"Skipping SSO provider in default chain (inputs do not include SSO fields).\", { logger: init.logger });\n    }\n    const { fromSSO } = await import(\"@aws-sdk/credential-provider-sso\");\n    return fromSSO(init)();\n}, async () => {\n    init.logger?.debug(\"@aws-sdk/credential-provider-node - defaultProvider::fromIni\");\n    const { fromIni } = await import(\"@aws-sdk/credential-provider-ini\");\n    return fromIni(init)();\n}, async () => {\n    init.logger?.debug(\"@aws-sdk/credential-provider-node - defaultProvider::fromProcess\");\n    const { fromProcess } = await import(\"@aws-sdk/credential-provider-process\");\n    return fromProcess(init)();\n}, async () => {\n    init.logger?.debug(\"@aws-sdk/credential-provider-node - defaultProvider::fromTokenFile\");\n    const { fromTokenFile } = await import(\"@aws-sdk/credential-provider-web-identity\");\n    return fromTokenFile(init)();\n}, async () => {\n    init.logger?.debug(\"@aws-sdk/credential-provider-node - defaultProvider::remoteProvider\");\n    return (await remoteProvider(init))();\n}, async () => {\n    throw new CredentialsProviderError(\"Could not load credentials from any providers\", {\n        tryNextLink: false,\n        logger: init.logger,\n    });\n}), credentialsTreatedAsExpired, credentialsWillNeedRefresh);\nexport const credentialsWillNeedRefresh = (credentials) => credentials?.expiration !== undefined;\nexport const credentialsTreatedAsExpired = (credentials) => credentials?.expiration !== undefined && credentials.expiration.getTime() - Date.now() < 300000;\n","import { booleanSelector, SelectorType } from \"@smithy/util-config-provider\";\nexport const NODE_USE_ARN_REGION_ENV_NAME = \"AWS_S3_USE_ARN_REGION\";\nexport const NODE_USE_ARN_REGION_INI_NAME = \"s3_use_arn_region\";\nexport const NODE_USE_ARN_REGION_CONFIG_OPTIONS = {\n    environmentVariableSelector: (env) => booleanSelector(env, NODE_USE_ARN_REGION_ENV_NAME, SelectorType.ENV),\n    configFileSelector: (profile) => booleanSelector(profile, NODE_USE_ARN_REGION_INI_NAME, SelectorType.CONFIG),\n    default: false,\n};\n","import { platform, release } from \"os\";\nimport { env, versions } from \"process\";\nimport { isCrtAvailable } from \"./is-crt-available\";\nexport { crtAvailability } from \"./crt-availability\";\nexport const createDefaultUserAgentProvider = ({ serviceId, clientVersion }) => {\n    return async (config) => {\n        const sections = [\n            [\"aws-sdk-js\", clientVersion],\n            [\"ua\", \"2.1\"],\n            [`os/${platform()}`, release()],\n            [\"lang/js\"],\n            [\"md/nodejs\", `${versions.node}`],\n        ];\n        const crtAvailable = isCrtAvailable();\n        if (crtAvailable) {\n            sections.push(crtAvailable);\n        }\n        if (serviceId) {\n            sections.push([`api/${serviceId}`, clientVersion]);\n        }\n        if (env.AWS_EXECUTION_ENV) {\n            sections.push([`exec-env/${env.AWS_EXECUTION_ENV}`]);\n        }\n        const appId = await config?.userAgentAppId?.();\n        const resolvedUserAgent = appId ? [...sections, [`app/${appId}`]] : [...sections];\n        return resolvedUserAgent;\n    };\n};\nexport const defaultUserAgent = createDefaultUserAgentProvider;\n","import { DEFAULT_UA_APP_ID } from \"@aws-sdk/middleware-user-agent\";\nexport const UA_APP_ID_ENV_NAME = \"AWS_SDK_UA_APP_ID\";\nexport const UA_APP_ID_INI_NAME = \"sdk_ua_app_id\";\nconst UA_APP_ID_INI_NAME_DEPRECATED = \"sdk-ua-app-id\";\nexport const NODE_APP_ID_CONFIG_OPTIONS = {\n    environmentVariableSelector: (env) => env[UA_APP_ID_ENV_NAME],\n    configFileSelector: (profile) => profile[UA_APP_ID_INI_NAME] ?? profile[UA_APP_ID_INI_NAME_DEPRECATED],\n    default: DEFAULT_UA_APP_ID,\n};\n","import { toHex } from \"@smithy/util-hex-encoding\";\nexport class Int64 {\n    constructor(bytes) {\n        this.bytes = bytes;\n        if (bytes.byteLength !== 8) {\n            throw new Error(\"Int64 buffers must be exactly 8 bytes\");\n        }\n    }\n    static fromNumber(number) {\n        if (number > 9223372036854776000 || number < -9223372036854776000) {\n            throw new Error(`${number} is too large (or, if negative, too small) to represent as an Int64`);\n        }\n        const bytes = new Uint8Array(8);\n        for (let i = 7, remaining = Math.abs(Math.round(number)); i > -1 && remaining > 0; i--, remaining /= 256) {\n            bytes[i] = remaining;\n        }\n        if (number < 0) {\n            negate(bytes);\n        }\n        return new Int64(bytes);\n    }\n    valueOf() {\n        const bytes = this.bytes.slice(0);\n        const negative = bytes[0] & 0b10000000;\n        if (negative) {\n            negate(bytes);\n        }\n        return parseInt(toHex(bytes), 16) * (negative ? -1 : 1);\n    }\n    toString() {\n        return String(this.valueOf());\n    }\n}\nfunction negate(bytes) {\n    for (let i = 0; i < 8; i++) {\n        bytes[i] ^= 0xff;\n    }\n    for (let i = 7; i > -1; i--) {\n        bytes[i]++;\n        if (bytes[i] !== 0)\n            break;\n    }\n}\n","import { fromHex, toHex } from \"@smithy/util-hex-encoding\";\nimport { Int64 } from \"./Int64\";\nexport class HeaderMarshaller {\n    constructor(toUtf8, fromUtf8) {\n        this.toUtf8 = toUtf8;\n        this.fromUtf8 = fromUtf8;\n    }\n    format(headers) {\n        const chunks = [];\n        for (const headerName of Object.keys(headers)) {\n            const bytes = this.fromUtf8(headerName);\n            chunks.push(Uint8Array.from([bytes.byteLength]), bytes, this.formatHeaderValue(headers[headerName]));\n        }\n        const out = new Uint8Array(chunks.reduce((carry, bytes) => carry + bytes.byteLength, 0));\n        let position = 0;\n        for (const chunk of chunks) {\n            out.set(chunk, position);\n            position += chunk.byteLength;\n        }\n        return out;\n    }\n    formatHeaderValue(header) {\n        switch (header.type) {\n            case \"boolean\":\n                return Uint8Array.from([header.value ? 0 : 1]);\n            case \"byte\":\n                return Uint8Array.from([2, header.value]);\n            case \"short\":\n                const shortView = new DataView(new ArrayBuffer(3));\n                shortView.setUint8(0, 3);\n                shortView.setInt16(1, header.value, false);\n                return new Uint8Array(shortView.buffer);\n            case \"integer\":\n                const intView = new DataView(new ArrayBuffer(5));\n                intView.setUint8(0, 4);\n                intView.setInt32(1, header.value, false);\n                return new Uint8Array(intView.buffer);\n            case \"long\":\n                const longBytes = new Uint8Array(9);\n                longBytes[0] = 5;\n                longBytes.set(header.value.bytes, 1);\n                return longBytes;\n            case \"binary\":\n                const binView = new DataView(new ArrayBuffer(3 + header.value.byteLength));\n                binView.setUint8(0, 6);\n                binView.setUint16(1, header.value.byteLength, false);\n                const binBytes = new Uint8Array(binView.buffer);\n                binBytes.set(header.value, 3);\n                return binBytes;\n            case \"string\":\n                const utf8Bytes = this.fromUtf8(header.value);\n                const strView = new DataView(new ArrayBuffer(3 + utf8Bytes.byteLength));\n                strView.setUint8(0, 7);\n                strView.setUint16(1, utf8Bytes.byteLength, false);\n                const strBytes = new Uint8Array(strView.buffer);\n                strBytes.set(utf8Bytes, 3);\n                return strBytes;\n            case \"timestamp\":\n                const tsBytes = new Uint8Array(9);\n                tsBytes[0] = 8;\n                tsBytes.set(Int64.fromNumber(header.value.valueOf()).bytes, 1);\n                return tsBytes;\n            case \"uuid\":\n                if (!UUID_PATTERN.test(header.value)) {\n                    throw new Error(`Invalid UUID received: ${header.value}`);\n                }\n                const uuidBytes = new Uint8Array(17);\n                uuidBytes[0] = 9;\n                uuidBytes.set(fromHex(header.value.replace(/\\-/g, \"\")), 1);\n                return uuidBytes;\n        }\n    }\n    parse(headers) {\n        const out = {};\n        let position = 0;\n        while (position < headers.byteLength) {\n            const nameLength = headers.getUint8(position++);\n            const name = this.toUtf8(new Uint8Array(headers.buffer, headers.byteOffset + position, nameLength));\n            position += nameLength;\n            switch (headers.getUint8(position++)) {\n                case 0:\n                    out[name] = {\n                        type: BOOLEAN_TAG,\n                        value: true,\n                    };\n                    break;\n                case 1:\n                    out[name] = {\n                        type: BOOLEAN_TAG,\n                        value: false,\n                    };\n                    break;\n                case 2:\n                    out[name] = {\n                        type: BYTE_TAG,\n                        value: headers.getInt8(position++),\n                    };\n                    break;\n                case 3:\n                    out[name] = {\n                        type: SHORT_TAG,\n                        value: headers.getInt16(position, false),\n                    };\n                    position += 2;\n                    break;\n                case 4:\n                    out[name] = {\n                        type: INT_TAG,\n                        value: headers.getInt32(position, false),\n                    };\n                    position += 4;\n                    break;\n                case 5:\n                    out[name] = {\n                        type: LONG_TAG,\n                        value: new Int64(new Uint8Array(headers.buffer, headers.byteOffset + position, 8)),\n                    };\n                    position += 8;\n                    break;\n                case 6:\n                    const binaryLength = headers.getUint16(position, false);\n                    position += 2;\n                    out[name] = {\n                        type: BINARY_TAG,\n                        value: new Uint8Array(headers.buffer, headers.byteOffset + position, binaryLength),\n                    };\n                    position += binaryLength;\n                    break;\n                case 7:\n                    const stringLength = headers.getUint16(position, false);\n                    position += 2;\n                    out[name] = {\n                        type: STRING_TAG,\n                        value: this.toUtf8(new Uint8Array(headers.buffer, headers.byteOffset + position, stringLength)),\n                    };\n                    position += stringLength;\n                    break;\n                case 8:\n                    out[name] = {\n                        type: TIMESTAMP_TAG,\n                        value: new Date(new Int64(new Uint8Array(headers.buffer, headers.byteOffset + position, 8)).valueOf()),\n                    };\n                    position += 8;\n                    break;\n                case 9:\n                    const uuidBytes = new Uint8Array(headers.buffer, headers.byteOffset + position, 16);\n                    position += 16;\n                    out[name] = {\n                        type: UUID_TAG,\n                        value: `${toHex(uuidBytes.subarray(0, 4))}-${toHex(uuidBytes.subarray(4, 6))}-${toHex(uuidBytes.subarray(6, 8))}-${toHex(uuidBytes.subarray(8, 10))}-${toHex(uuidBytes.subarray(10))}`,\n                    };\n                    break;\n                default:\n                    throw new Error(`Unrecognized header type tag`);\n            }\n        }\n        return out;\n    }\n}\nvar HEADER_VALUE_TYPE;\n(function (HEADER_VALUE_TYPE) {\n    HEADER_VALUE_TYPE[HEADER_VALUE_TYPE[\"boolTrue\"] = 0] = \"boolTrue\";\n    HEADER_VALUE_TYPE[HEADER_VALUE_TYPE[\"boolFalse\"] = 1] = \"boolFalse\";\n    HEADER_VALUE_TYPE[HEADER_VALUE_TYPE[\"byte\"] = 2] = \"byte\";\n    HEADER_VALUE_TYPE[HEADER_VALUE_TYPE[\"short\"] = 3] = \"short\";\n    HEADER_VALUE_TYPE[HEADER_VALUE_TYPE[\"integer\"] = 4] = \"integer\";\n    HEADER_VALUE_TYPE[HEADER_VALUE_TYPE[\"long\"] = 5] = \"long\";\n    HEADER_VALUE_TYPE[HEADER_VALUE_TYPE[\"byteArray\"] = 6] = \"byteArray\";\n    HEADER_VALUE_TYPE[HEADER_VALUE_TYPE[\"string\"] = 7] = \"string\";\n    HEADER_VALUE_TYPE[HEADER_VALUE_TYPE[\"timestamp\"] = 8] = \"timestamp\";\n    HEADER_VALUE_TYPE[HEADER_VALUE_TYPE[\"uuid\"] = 9] = \"uuid\";\n})(HEADER_VALUE_TYPE || (HEADER_VALUE_TYPE = {}));\nconst BOOLEAN_TAG = \"boolean\";\nconst BYTE_TAG = \"byte\";\nconst SHORT_TAG = \"short\";\nconst INT_TAG = \"integer\";\nconst LONG_TAG = \"long\";\nconst BINARY_TAG = \"binary\";\nconst STRING_TAG = \"string\";\nconst TIMESTAMP_TAG = \"timestamp\";\nconst UUID_TAG = \"uuid\";\nconst UUID_PATTERN = /^[a-f0-9]{8}-[a-f0-9]{4}-[a-f0-9]{4}-[a-f0-9]{4}-[a-f0-9]{12}$/;\n","import { Crc32 } from \"@aws-crypto/crc32\";\nimport { HeaderMarshaller } from \"./HeaderMarshaller\";\nimport { splitMessage } from \"./splitMessage\";\nexport class EventStreamCodec {\n    constructor(toUtf8, fromUtf8) {\n        this.headerMarshaller = new HeaderMarshaller(toUtf8, fromUtf8);\n        this.messageBuffer = [];\n        this.isEndOfStream = false;\n    }\n    feed(message) {\n        this.messageBuffer.push(this.decode(message));\n    }\n    endOfStream() {\n        this.isEndOfStream = true;\n    }\n    getMessage() {\n        const message = this.messageBuffer.pop();\n        const isEndOfStream = this.isEndOfStream;\n        return {\n            getMessage() {\n                return message;\n            },\n            isEndOfStream() {\n                return isEndOfStream;\n            },\n        };\n    }\n    getAvailableMessages() {\n        const messages = this.messageBuffer;\n        this.messageBuffer = [];\n        const isEndOfStream = this.isEndOfStream;\n        return {\n            getMessages() {\n                return messages;\n            },\n            isEndOfStream() {\n                return isEndOfStream;\n            },\n        };\n    }\n    encode({ headers: rawHeaders, body }) {\n        const headers = this.headerMarshaller.format(rawHeaders);\n        const length = headers.byteLength + body.byteLength + 16;\n        const out = new Uint8Array(length);\n        const view = new DataView(out.buffer, out.byteOffset, out.byteLength);\n        const checksum = new Crc32();\n        view.setUint32(0, length, false);\n        view.setUint32(4, headers.byteLength, false);\n        view.setUint32(8, checksum.update(out.subarray(0, 8)).digest(), false);\n        out.set(headers, 12);\n        out.set(body, headers.byteLength + 12);\n        view.setUint32(length - 4, checksum.update(out.subarray(8, length - 4)).digest(), false);\n        return out;\n    }\n    decode(message) {\n        const { headers, body } = splitMessage(message);\n        return { headers: this.headerMarshaller.parse(headers), body };\n    }\n    formatHeaders(rawHeaders) {\n        return this.headerMarshaller.format(rawHeaders);\n    }\n}\n","import { Crc32 } from \"@aws-crypto/crc32\";\nconst PRELUDE_MEMBER_LENGTH = 4;\nconst PRELUDE_LENGTH = PRELUDE_MEMBER_LENGTH * 2;\nconst CHECKSUM_LENGTH = 4;\nconst MINIMUM_MESSAGE_LENGTH = PRELUDE_LENGTH + CHECKSUM_LENGTH * 2;\nexport function splitMessage({ byteLength, byteOffset, buffer }) {\n    if (byteLength < MINIMUM_MESSAGE_LENGTH) {\n        throw new Error(\"Provided message too short to accommodate event stream message overhead\");\n    }\n    const view = new DataView(buffer, byteOffset, byteLength);\n    const messageLength = view.getUint32(0, false);\n    if (byteLength !== messageLength) {\n        throw new Error(\"Reported message length does not match received message length\");\n    }\n    const headerLength = view.getUint32(PRELUDE_MEMBER_LENGTH, false);\n    const expectedPreludeChecksum = view.getUint32(PRELUDE_LENGTH, false);\n    const expectedMessageChecksum = view.getUint32(byteLength - CHECKSUM_LENGTH, false);\n    const checksummer = new Crc32().update(new Uint8Array(buffer, byteOffset, PRELUDE_LENGTH));\n    if (expectedPreludeChecksum !== checksummer.digest()) {\n        throw new Error(`The prelude checksum specified in the message (${expectedPreludeChecksum}) does not match the calculated CRC32 checksum (${checksummer.digest()})`);\n    }\n    checksummer.update(new Uint8Array(buffer, byteOffset + PRELUDE_LENGTH, byteLength - (PRELUDE_LENGTH + CHECKSUM_LENGTH)));\n    if (expectedMessageChecksum !== checksummer.digest()) {\n        throw new Error(`The message checksum (${checksummer.digest()}) did not match the expected value of ${expectedMessageChecksum}`);\n    }\n    return {\n        headers: new DataView(buffer, byteOffset + PRELUDE_LENGTH + CHECKSUM_LENGTH, headerLength),\n        body: new Uint8Array(buffer, byteOffset + PRELUDE_LENGTH + CHECKSUM_LENGTH + headerLength, messageLength - headerLength - (PRELUDE_LENGTH + CHECKSUM_LENGTH + CHECKSUM_LENGTH)),\n    };\n}\n","export class MessageDecoderStream {\n    constructor(options) {\n        this.options = options;\n    }\n    [Symbol.asyncIterator]() {\n        return this.asyncIterator();\n    }\n    async *asyncIterator() {\n        for await (const bytes of this.options.inputStream) {\n            const decoded = this.options.decoder.decode(bytes);\n            yield decoded;\n        }\n    }\n}\n","export class MessageEncoderStream {\n    constructor(options) {\n        this.options = options;\n    }\n    [Symbol.asyncIterator]() {\n        return this.asyncIterator();\n    }\n    async *asyncIterator() {\n        for await (const msg of this.options.messageStream) {\n            const encoded = this.options.encoder.encode(msg);\n            yield encoded;\n        }\n        if (this.options.includeEndFrame) {\n            yield new Uint8Array(0);\n        }\n    }\n}\n","export class SmithyMessageDecoderStream {\n    constructor(options) {\n        this.options = options;\n    }\n    [Symbol.asyncIterator]() {\n        return this.asyncIterator();\n    }\n    async *asyncIterator() {\n        for await (const message of this.options.messageStream) {\n            const deserialized = await this.options.deserializer(message);\n            if (deserialized === undefined)\n                continue;\n            yield deserialized;\n        }\n    }\n}\n","export class SmithyMessageEncoderStream {\n    constructor(options) {\n        this.options = options;\n    }\n    [Symbol.asyncIterator]() {\n        return this.asyncIterator();\n    }\n    async *asyncIterator() {\n        for await (const chunk of this.options.inputStream) {\n            const payloadBuf = this.options.serializer(chunk);\n            yield payloadBuf;\n        }\n    }\n}\n","export function getUnmarshalledStream(source, options) {\n    const messageUnmarshaller = getMessageUnmarshaller(options.deserializer, options.toUtf8);\n    return {\n        [Symbol.asyncIterator]: async function* () {\n            for await (const chunk of source) {\n                const message = options.eventStreamCodec.decode(chunk);\n                const type = await messageUnmarshaller(message);\n                if (type === undefined)\n                    continue;\n                yield type;\n            }\n        },\n    };\n}\nexport function getMessageUnmarshaller(deserializer, toUtf8) {\n    return async function (message) {\n        const { value: messageType } = message.headers[\":message-type\"];\n        if (messageType === \"error\") {\n            const unmodeledError = new Error(message.headers[\":error-message\"].value || \"UnknownError\");\n            unmodeledError.name = message.headers[\":error-code\"].value;\n            throw unmodeledError;\n        }\n        else if (messageType === \"exception\") {\n            const code = message.headers[\":exception-type\"].value;\n            const exception = { [code]: message };\n            const deserializedException = await deserializer(exception);\n            if (deserializedException.$unknown) {\n                const error = new Error(toUtf8(message.body));\n                error.name = code;\n                throw error;\n            }\n            throw deserializedException[code];\n        }\n        else if (messageType === \"event\") {\n            const event = {\n                [message.headers[\":event-type\"].value]: message,\n            };\n            const deserialized = await deserializer(event);\n            if (deserialized.$unknown)\n                return;\n            return deserialized;\n        }\n        else {\n            throw Error(`Unrecognizable event type: ${message.headers[\":event-type\"].value}`);\n        }\n    };\n}\n","import { EventStreamCodec, MessageDecoderStream, MessageEncoderStream, SmithyMessageDecoderStream, SmithyMessageEncoderStream, } from \"@smithy/eventstream-codec\";\nimport { getChunkedStream } from \"./getChunkedStream\";\nimport { getMessageUnmarshaller } from \"./getUnmarshalledStream\";\nexport class EventStreamMarshaller {\n    constructor({ utf8Encoder, utf8Decoder }) {\n        this.eventStreamCodec = new EventStreamCodec(utf8Encoder, utf8Decoder);\n        this.utfEncoder = utf8Encoder;\n    }\n    deserialize(body, deserializer) {\n        const inputStream = getChunkedStream(body);\n        return new SmithyMessageDecoderStream({\n            messageStream: new MessageDecoderStream({ inputStream, decoder: this.eventStreamCodec }),\n            deserializer: getMessageUnmarshaller(deserializer, this.utfEncoder),\n        });\n    }\n    serialize(inputStream, serializer) {\n        return new MessageEncoderStream({\n            messageStream: new SmithyMessageEncoderStream({ inputStream, serializer }),\n            encoder: this.eventStreamCodec,\n            includeEndFrame: true,\n        });\n    }\n}\n","export function getChunkedStream(source) {\n    let currentMessageTotalLength = 0;\n    let currentMessagePendingLength = 0;\n    let currentMessage = null;\n    let messageLengthBuffer = null;\n    const allocateMessage = (size) => {\n        if (typeof size !== \"number\") {\n            throw new Error(\"Attempted to allocate an event message where size was not a number: \" + size);\n        }\n        currentMessageTotalLength = size;\n        currentMessagePendingLength = 4;\n        currentMessage = new Uint8Array(size);\n        const currentMessageView = new DataView(currentMessage.buffer);\n        currentMessageView.setUint32(0, size, false);\n    };\n    const iterator = async function* () {\n        const sourceIterator = source[Symbol.asyncIterator]();\n        while (true) {\n            const { value, done } = await sourceIterator.next();\n            if (done) {\n                if (!currentMessageTotalLength) {\n                    return;\n                }\n                else if (currentMessageTotalLength === currentMessagePendingLength) {\n                    yield currentMessage;\n                }\n                else {\n                    throw new Error(\"Truncated event message received.\");\n                }\n                return;\n            }\n            const chunkLength = value.length;\n            let currentOffset = 0;\n            while (currentOffset < chunkLength) {\n                if (!currentMessage) {\n                    const bytesRemaining = chunkLength - currentOffset;\n                    if (!messageLengthBuffer) {\n                        messageLengthBuffer = new Uint8Array(4);\n                    }\n                    const numBytesForTotal = Math.min(4 - currentMessagePendingLength, bytesRemaining);\n                    messageLengthBuffer.set(value.slice(currentOffset, currentOffset + numBytesForTotal), currentMessagePendingLength);\n                    currentMessagePendingLength += numBytesForTotal;\n                    currentOffset += numBytesForTotal;\n                    if (currentMessagePendingLength < 4) {\n                        break;\n                    }\n                    allocateMessage(new DataView(messageLengthBuffer.buffer).getUint32(0, false));\n                    messageLengthBuffer = null;\n                }\n                const numBytesToWrite = Math.min(currentMessageTotalLength - currentMessagePendingLength, chunkLength - currentOffset);\n                currentMessage.set(value.slice(currentOffset, currentOffset + numBytesToWrite), currentMessagePendingLength);\n                currentMessagePendingLength += numBytesToWrite;\n                currentOffset += numBytesToWrite;\n                if (currentMessageTotalLength && currentMessageTotalLength === currentMessagePendingLength) {\n                    yield currentMessage;\n                    currentMessage = null;\n                    currentMessageTotalLength = 0;\n                    currentMessagePendingLength = 0;\n                }\n            }\n        }\n    };\n    return {\n        [Symbol.asyncIterator]: iterator,\n    };\n}\n","import { EventStreamMarshaller as UniversalEventStreamMarshaller } from \"@smithy/eventstream-serde-universal\";\nimport { Readable } from \"stream\";\nimport { readabletoIterable } from \"./utils\";\nexport class EventStreamMarshaller {\n    constructor({ utf8Encoder, utf8Decoder }) {\n        this.universalMarshaller = new UniversalEventStreamMarshaller({\n            utf8Decoder,\n            utf8Encoder,\n        });\n    }\n    deserialize(body, deserializer) {\n        const bodyIterable = typeof body[Symbol.asyncIterator] === \"function\" ? body : readabletoIterable(body);\n        return this.universalMarshaller.deserialize(bodyIterable, deserializer);\n    }\n    serialize(input, serializer) {\n        return Readable.from(this.universalMarshaller.serialize(input, serializer));\n    }\n}\n","export async function* readabletoIterable(readStream) {\n    let streamEnded = false;\n    let generationEnded = false;\n    const records = new Array();\n    readStream.on(\"error\", (err) => {\n        if (!streamEnded) {\n            streamEnded = true;\n        }\n        if (err) {\n            throw err;\n        }\n    });\n    readStream.on(\"data\", (data) => {\n        records.push(data);\n    });\n    readStream.on(\"end\", () => {\n        streamEnded = true;\n    });\n    while (!generationEnded) {\n        const value = await new Promise((resolve) => setTimeout(() => resolve(records.shift()), 0));\n        if (value) {\n            yield value;\n        }\n        generationEnded = streamEnded && records.length === 0;\n    }\n}\n","import { EventStreamMarshaller } from \"./EventStreamMarshaller\";\nexport const eventStreamSerdeProvider = (options) => new EventStreamMarshaller(options);\n","import { fromArrayBuffer, fromString } from \"@smithy/util-buffer-from\";\nimport { toUint8Array } from \"@smithy/util-utf8\";\nimport { Buffer } from \"buffer\";\nimport { createHash, createHmac } from \"crypto\";\nexport class Hash {\n    constructor(algorithmIdentifier, secret) {\n        this.algorithmIdentifier = algorithmIdentifier;\n        this.secret = secret;\n        this.reset();\n    }\n    update(toHash, encoding) {\n        this.hash.update(toUint8Array(castSourceData(toHash, encoding)));\n    }\n    digest() {\n        return Promise.resolve(this.hash.digest());\n    }\n    reset() {\n        this.hash = this.secret\n            ? createHmac(this.algorithmIdentifier, castSourceData(this.secret))\n            : createHash(this.algorithmIdentifier);\n    }\n}\nfunction castSourceData(toCast, encoding) {\n    if (Buffer.isBuffer(toCast)) {\n        return toCast;\n    }\n    if (typeof toCast === \"string\") {\n        return fromString(toCast, encoding);\n    }\n    if (ArrayBuffer.isView(toCast)) {\n        return fromArrayBuffer(toCast.buffer, toCast.byteOffset, toCast.byteLength);\n    }\n    return fromArrayBuffer(toCast);\n}\n","import { toUint8Array } from \"@smithy/util-utf8\";\nimport { Writable } from \"stream\";\nexport class HashCalculator extends Writable {\n    constructor(hash, options) {\n        super(options);\n        this.hash = hash;\n    }\n    _write(chunk, encoding, callback) {\n        try {\n            this.hash.update(toUint8Array(chunk));\n        }\n        catch (err) {\n            return callback(err);\n        }\n        callback();\n    }\n}\n","import { HashCalculator } from \"./HashCalculator\";\nexport const readableStreamHasher = (hashCtor, readableStream) => {\n    if (readableStream.readableFlowing !== null) {\n        throw new Error(\"Unable to calculate hash for flowing readable stream\");\n    }\n    const hash = new hashCtor();\n    const hashCalculator = new HashCalculator(hash);\n    readableStream.pipe(hashCalculator);\n    return new Promise((resolve, reject) => {\n        readableStream.on(\"error\", (err) => {\n            hashCalculator.end();\n            reject(err);\n        });\n        hashCalculator.on(\"error\", reject);\n        hashCalculator.on(\"finish\", () => {\n            hash.digest().then(resolve).catch(reject);\n        });\n    });\n};\n","import { fstatSync, lstatSync } from \"fs\";\nexport const calculateBodyLength = (body) => {\n    if (!body) {\n        return 0;\n    }\n    if (typeof body === \"string\") {\n        return Buffer.byteLength(body);\n    }\n    else if (typeof body.byteLength === \"number\") {\n        return body.byteLength;\n    }\n    else if (typeof body.size === \"number\") {\n        return body.size;\n    }\n    else if (typeof body.start === \"number\" && typeof body.end === \"number\") {\n        return body.end + 1 - body.start;\n    }\n    else if (typeof body.path === \"string\" || Buffer.isBuffer(body.path)) {\n        return lstatSync(body.path).size;\n    }\n    else if (typeof body.fd === \"number\") {\n        return fstatSync(body.fd).size;\n    }\n    throw new Error(`Body Length computation failed for ${body}`);\n};\n","export const AWS_EXECUTION_ENV = \"AWS_EXECUTION_ENV\";\nexport const AWS_REGION_ENV = \"AWS_REGION\";\nexport const AWS_DEFAULT_REGION_ENV = \"AWS_DEFAULT_REGION\";\nexport const ENV_IMDS_DISABLED = \"AWS_EC2_METADATA_DISABLED\";\nexport const DEFAULTS_MODE_OPTIONS = [\"in-region\", \"cross-region\", \"mobile\", \"standard\", \"legacy\"];\nexport const IMDS_REGION_PATH = \"/latest/meta-data/placement/region\";\n","const AWS_DEFAULTS_MODE_ENV = \"AWS_DEFAULTS_MODE\";\nconst AWS_DEFAULTS_MODE_CONFIG = \"defaults_mode\";\nexport const NODE_DEFAULTS_MODE_CONFIG_OPTIONS = {\n    environmentVariableSelector: (env) => {\n        return env[AWS_DEFAULTS_MODE_ENV];\n    },\n    configFileSelector: (profile) => {\n        return profile[AWS_DEFAULTS_MODE_CONFIG];\n    },\n    default: \"legacy\",\n};\n","import { NODE_REGION_CONFIG_OPTIONS } from \"@smithy/config-resolver\";\nimport { loadConfig } from \"@smithy/node-config-provider\";\nimport { memoize } from \"@smithy/property-provider\";\nimport { AWS_DEFAULT_REGION_ENV, AWS_EXECUTION_ENV, AWS_REGION_ENV, DEFAULTS_MODE_OPTIONS, ENV_IMDS_DISABLED, IMDS_REGION_PATH, } from \"./constants\";\nimport { NODE_DEFAULTS_MODE_CONFIG_OPTIONS } from \"./defaultsModeConfig\";\nexport const resolveDefaultsModeConfig = ({ region = loadConfig(NODE_REGION_CONFIG_OPTIONS), defaultsMode = loadConfig(NODE_DEFAULTS_MODE_CONFIG_OPTIONS), } = {}) => memoize(async () => {\n    const mode = typeof defaultsMode === \"function\" ? await defaultsMode() : defaultsMode;\n    switch (mode?.toLowerCase()) {\n        case \"auto\":\n            return resolveNodeDefaultsModeAuto(region);\n        case \"in-region\":\n        case \"cross-region\":\n        case \"mobile\":\n        case \"standard\":\n        case \"legacy\":\n            return Promise.resolve(mode?.toLocaleLowerCase());\n        case undefined:\n            return Promise.resolve(\"legacy\");\n        default:\n            throw new Error(`Invalid parameter for \"defaultsMode\", expect ${DEFAULTS_MODE_OPTIONS.join(\", \")}, got ${mode}`);\n    }\n});\nconst resolveNodeDefaultsModeAuto = async (clientRegion) => {\n    if (clientRegion) {\n        const resolvedRegion = typeof clientRegion === \"function\" ? await clientRegion() : clientRegion;\n        const inferredRegion = await inferPhysicalRegion();\n        if (!inferredRegion) {\n            return \"standard\";\n        }\n        if (resolvedRegion === inferredRegion) {\n            return \"in-region\";\n        }\n        else {\n            return \"cross-region\";\n        }\n    }\n    return \"standard\";\n};\nconst inferPhysicalRegion = async () => {\n    if (process.env[AWS_EXECUTION_ENV] && (process.env[AWS_REGION_ENV] || process.env[AWS_DEFAULT_REGION_ENV])) {\n        return process.env[AWS_REGION_ENV] ?? process.env[AWS_DEFAULT_REGION_ENV];\n    }\n    if (!process.env[ENV_IMDS_DISABLED]) {\n        try {\n            const { getInstanceMetadataEndpoint, httpRequest } = await import(\"@smithy/credential-provider-imds\");\n            const endpoint = await getInstanceMetadataEndpoint();\n            return (await httpRequest({ ...endpoint, path: IMDS_REGION_PATH })).toString();\n        }\n        catch (e) {\n        }\n    }\n};\n","import packageInfo from \"../package.json\";\nimport { NODE_SIGV4A_CONFIG_OPTIONS, emitWarningIfUnsupportedVersion as awsCheckVersion } from \"@aws-sdk/core\";\nimport { defaultProvider as credentialDefaultProvider } from \"@aws-sdk/credential-provider-node\";\nimport { NODE_USE_ARN_REGION_CONFIG_OPTIONS } from \"@aws-sdk/middleware-bucket-endpoint\";\nimport { NODE_REQUEST_CHECKSUM_CALCULATION_CONFIG_OPTIONS, NODE_RESPONSE_CHECKSUM_VALIDATION_CONFIG_OPTIONS, } from \"@aws-sdk/middleware-flexible-checksums\";\nimport { NODE_DISABLE_S3_EXPRESS_SESSION_AUTH_OPTIONS } from \"@aws-sdk/middleware-sdk-s3\";\nimport { NODE_APP_ID_CONFIG_OPTIONS, createDefaultUserAgentProvider } from \"@aws-sdk/util-user-agent-node\";\nimport { NODE_REGION_CONFIG_FILE_OPTIONS, NODE_REGION_CONFIG_OPTIONS, NODE_USE_DUALSTACK_ENDPOINT_CONFIG_OPTIONS, NODE_USE_FIPS_ENDPOINT_CONFIG_OPTIONS, } from \"@smithy/config-resolver\";\nimport { eventStreamSerdeProvider } from \"@smithy/eventstream-serde-node\";\nimport { Hash } from \"@smithy/hash-node\";\nimport { readableStreamHasher as streamHasher } from \"@smithy/hash-stream-node\";\nimport { NODE_MAX_ATTEMPT_CONFIG_OPTIONS, NODE_RETRY_MODE_CONFIG_OPTIONS } from \"@smithy/middleware-retry\";\nimport { loadConfig as loadNodeConfig } from \"@smithy/node-config-provider\";\nimport { NodeHttpHandler as RequestHandler, streamCollector } from \"@smithy/node-http-handler\";\nimport { calculateBodyLength } from \"@smithy/util-body-length-node\";\nimport { DEFAULT_RETRY_MODE } from \"@smithy/util-retry\";\nimport { getRuntimeConfig as getSharedRuntimeConfig } from \"./runtimeConfig.shared\";\nimport { loadConfigsForDefaultMode } from \"@smithy/smithy-client\";\nimport { resolveDefaultsModeConfig } from \"@smithy/util-defaults-mode-node\";\nimport { emitWarningIfUnsupportedVersion } from \"@smithy/smithy-client\";\nexport const getRuntimeConfig = (config) => {\n    emitWarningIfUnsupportedVersion(process.version);\n    const defaultsMode = resolveDefaultsModeConfig(config);\n    const defaultConfigProvider = () => defaultsMode().then(loadConfigsForDefaultMode);\n    const clientSharedValues = getSharedRuntimeConfig(config);\n    awsCheckVersion(process.version);\n    const profileConfig = { profile: config?.profile };\n    return {\n        ...clientSharedValues,\n        ...config,\n        runtime: \"node\",\n        defaultsMode,\n        bodyLengthChecker: config?.bodyLengthChecker ?? calculateBodyLength,\n        credentialDefaultProvider: config?.credentialDefaultProvider ?? credentialDefaultProvider,\n        defaultUserAgentProvider: config?.defaultUserAgentProvider ??\n            createDefaultUserAgentProvider({ serviceId: clientSharedValues.serviceId, clientVersion: packageInfo.version }),\n        disableS3ExpressSessionAuth: config?.disableS3ExpressSessionAuth ??\n            loadNodeConfig(NODE_DISABLE_S3_EXPRESS_SESSION_AUTH_OPTIONS, profileConfig),\n        eventStreamSerdeProvider: config?.eventStreamSerdeProvider ?? eventStreamSerdeProvider,\n        maxAttempts: config?.maxAttempts ?? loadNodeConfig(NODE_MAX_ATTEMPT_CONFIG_OPTIONS, config),\n        md5: config?.md5 ?? Hash.bind(null, \"md5\"),\n        region: config?.region ??\n            loadNodeConfig(NODE_REGION_CONFIG_OPTIONS, { ...NODE_REGION_CONFIG_FILE_OPTIONS, ...profileConfig }),\n        requestChecksumCalculation: config?.requestChecksumCalculation ??\n            loadNodeConfig(NODE_REQUEST_CHECKSUM_CALCULATION_CONFIG_OPTIONS, profileConfig),\n        requestHandler: RequestHandler.create(config?.requestHandler ?? defaultConfigProvider),\n        responseChecksumValidation: config?.responseChecksumValidation ??\n            loadNodeConfig(NODE_RESPONSE_CHECKSUM_VALIDATION_CONFIG_OPTIONS, profileConfig),\n        retryMode: config?.retryMode ??\n            loadNodeConfig({\n                ...NODE_RETRY_MODE_CONFIG_OPTIONS,\n                default: async () => (await defaultConfigProvider()).retryMode || DEFAULT_RETRY_MODE,\n            }, config),\n        sha1: config?.sha1 ?? Hash.bind(null, \"sha1\"),\n        sha256: config?.sha256 ?? Hash.bind(null, \"sha256\"),\n        sigv4aSigningRegionSet: config?.sigv4aSigningRegionSet ?? loadNodeConfig(NODE_SIGV4A_CONFIG_OPTIONS, profileConfig),\n        streamCollector: config?.streamCollector ?? streamCollector,\n        streamHasher: config?.streamHasher ?? streamHasher,\n        useArnRegion: config?.useArnRegion ?? loadNodeConfig(NODE_USE_ARN_REGION_CONFIG_OPTIONS, profileConfig),\n        useDualstackEndpoint: config?.useDualstackEndpoint ?? loadNodeConfig(NODE_USE_DUALSTACK_ENDPOINT_CONFIG_OPTIONS, profileConfig),\n        useFipsEndpoint: config?.useFipsEndpoint ?? loadNodeConfig(NODE_USE_FIPS_ENDPOINT_CONFIG_OPTIONS, profileConfig),\n        userAgentAppId: config?.userAgentAppId ?? loadNodeConfig(NODE_APP_ID_CONFIG_OPTIONS, profileConfig),\n    };\n};\n","import { AwsSdkSigV4ASigner, AwsSdkSigV4Signer } from \"@aws-sdk/core\";\nimport { SignatureV4MultiRegion } from \"@aws-sdk/signature-v4-multi-region\";\nimport { NoOpLogger } from \"@smithy/smithy-client\";\nimport { parseUrl } from \"@smithy/url-parser\";\nimport { fromBase64, toBase64 } from \"@smithy/util-base64\";\nimport { getAwsChunkedEncodingStream, sdkStreamMixin } from \"@smithy/util-stream\";\nimport { fromUtf8, toUtf8 } from \"@smithy/util-utf8\";\nimport { defaultS3HttpAuthSchemeProvider } from \"./auth/httpAuthSchemeProvider\";\nimport { defaultEndpointResolver } from \"./endpoint/endpointResolver\";\nexport const getRuntimeConfig = (config) => {\n    return {\n        apiVersion: \"2006-03-01\",\n        base64Decoder: config?.base64Decoder ?? fromBase64,\n        base64Encoder: config?.base64Encoder ?? toBase64,\n        disableHostPrefix: config?.disableHostPrefix ?? false,\n        endpointProvider: config?.endpointProvider ?? defaultEndpointResolver,\n        extensions: config?.extensions ?? [],\n        getAwsChunkedEncodingStream: config?.getAwsChunkedEncodingStream ?? getAwsChunkedEncodingStream,\n        httpAuthSchemeProvider: config?.httpAuthSchemeProvider ?? defaultS3HttpAuthSchemeProvider,\n        httpAuthSchemes: config?.httpAuthSchemes ?? [\n            {\n                schemeId: \"aws.auth#sigv4\",\n                identityProvider: (ipc) => ipc.getIdentityProvider(\"aws.auth#sigv4\"),\n                signer: new AwsSdkSigV4Signer(),\n            },\n            {\n                schemeId: \"aws.auth#sigv4a\",\n                identityProvider: (ipc) => ipc.getIdentityProvider(\"aws.auth#sigv4a\"),\n                signer: new AwsSdkSigV4ASigner(),\n            },\n        ],\n        logger: config?.logger ?? new NoOpLogger(),\n        sdkStreamMixin: config?.sdkStreamMixin ?? sdkStreamMixin,\n        serviceId: config?.serviceId ?? \"S3\",\n        signerConstructor: config?.signerConstructor ?? SignatureV4MultiRegion,\n        signingEscapePath: config?.signingEscapePath ?? false,\n        urlParser: config?.urlParser ?? parseUrl,\n        useArnRegion: config?.useArnRegion ?? false,\n        utf8Decoder: config?.utf8Decoder ?? fromUtf8,\n        utf8Encoder: config?.utf8Encoder ?? toUtf8,\n    };\n};\n","export const getAwsRegionExtensionConfiguration = (runtimeConfig) => {\n    let runtimeConfigRegion = async () => {\n        if (runtimeConfig.region === undefined) {\n            throw new Error(\"Region is missing from runtimeConfig\");\n        }\n        const region = runtimeConfig.region;\n        if (typeof region === \"string\") {\n            return region;\n        }\n        return region();\n    };\n    return {\n        setRegion(region) {\n            runtimeConfigRegion = region;\n        },\n        region() {\n            return runtimeConfigRegion;\n        },\n    };\n};\nexport const resolveAwsRegionExtensionConfiguration = (awsRegionExtensionConfiguration) => {\n    return {\n        region: awsRegionExtensionConfiguration.region(),\n    };\n};\n","export const getHttpAuthExtensionConfiguration = (runtimeConfig) => {\n    const _httpAuthSchemes = runtimeConfig.httpAuthSchemes;\n    let _httpAuthSchemeProvider = runtimeConfig.httpAuthSchemeProvider;\n    let _credentials = runtimeConfig.credentials;\n    return {\n        setHttpAuthScheme(httpAuthScheme) {\n            const index = _httpAuthSchemes.findIndex((scheme) => scheme.schemeId === httpAuthScheme.schemeId);\n            if (index === -1) {\n                _httpAuthSchemes.push(httpAuthScheme);\n            }\n            else {\n                _httpAuthSchemes.splice(index, 1, httpAuthScheme);\n            }\n        },\n        httpAuthSchemes() {\n            return _httpAuthSchemes;\n        },\n        setHttpAuthSchemeProvider(httpAuthSchemeProvider) {\n            _httpAuthSchemeProvider = httpAuthSchemeProvider;\n        },\n        httpAuthSchemeProvider() {\n            return _httpAuthSchemeProvider;\n        },\n        setCredentials(credentials) {\n            _credentials = credentials;\n        },\n        credentials() {\n            return _credentials;\n        },\n    };\n};\nexport const resolveHttpAuthRuntimeConfig = (config) => {\n    return {\n        httpAuthSchemes: config.httpAuthSchemes(),\n        httpAuthSchemeProvider: config.httpAuthSchemeProvider(),\n        credentials: config.credentials(),\n    };\n};\n","import { getAddExpectContinuePlugin } from \"@aws-sdk/middleware-expect-continue\";\nimport { resolveFlexibleChecksumsConfig, } from \"@aws-sdk/middleware-flexible-checksums\";\nimport { getHostHeaderPlugin, resolveHostHeaderConfig, } from \"@aws-sdk/middleware-host-header\";\nimport { getLoggerPlugin } from \"@aws-sdk/middleware-logger\";\nimport { getRecursionDetectionPlugin } from \"@aws-sdk/middleware-recursion-detection\";\nimport { getRegionRedirectMiddlewarePlugin, getS3ExpressHttpSigningPlugin, getS3ExpressPlugin, getValidateBucketNamePlugin, resolveS3Config, } from \"@aws-sdk/middleware-sdk-s3\";\nimport { getUserAgentPlugin, resolveUserAgentConfig, } from \"@aws-sdk/middleware-user-agent\";\nimport { resolveRegionConfig } from \"@smithy/config-resolver\";\nimport { DefaultIdentityProviderConfig, getHttpAuthSchemeEndpointRuleSetPlugin, getHttpSigningPlugin, } from \"@smithy/core\";\nimport { resolveEventStreamSerdeConfig, } from \"@smithy/eventstream-serde-config-resolver\";\nimport { getContentLengthPlugin } from \"@smithy/middleware-content-length\";\nimport { resolveEndpointConfig } from \"@smithy/middleware-endpoint\";\nimport { getRetryPlugin, resolveRetryConfig } from \"@smithy/middleware-retry\";\nimport { Client as __Client, } from \"@smithy/smithy-client\";\nimport { defaultS3HttpAuthSchemeParametersProvider, resolveHttpAuthSchemeConfig, } from \"./auth/httpAuthSchemeProvider\";\nimport { CreateSessionCommand, } from \"./commands/CreateSessionCommand\";\nimport { resolveClientEndpointParameters, } from \"./endpoint/EndpointParameters\";\nimport { getRuntimeConfig as __getRuntimeConfig } from \"./runtimeConfig\";\nimport { resolveRuntimeExtensions } from \"./runtimeExtensions\";\nexport { __Client };\nexport class S3Client extends __Client {\n    config;\n    constructor(...[configuration]) {\n        const _config_0 = __getRuntimeConfig(configuration || {});\n        const _config_1 = resolveClientEndpointParameters(_config_0);\n        const _config_2 = resolveUserAgentConfig(_config_1);\n        const _config_3 = resolveFlexibleChecksumsConfig(_config_2);\n        const _config_4 = resolveRetryConfig(_config_3);\n        const _config_5 = resolveRegionConfig(_config_4);\n        const _config_6 = resolveHostHeaderConfig(_config_5);\n        const _config_7 = resolveEndpointConfig(_config_6);\n        const _config_8 = resolveEventStreamSerdeConfig(_config_7);\n        const _config_9 = resolveHttpAuthSchemeConfig(_config_8);\n        const _config_10 = resolveS3Config(_config_9, { session: [() => this, CreateSessionCommand] });\n        const _config_11 = resolveRuntimeExtensions(_config_10, configuration?.extensions || []);\n        super(_config_11);\n        this.config = _config_11;\n        this.middlewareStack.use(getUserAgentPlugin(this.config));\n        this.middlewareStack.use(getRetryPlugin(this.config));\n        this.middlewareStack.use(getContentLengthPlugin(this.config));\n        this.middlewareStack.use(getHostHeaderPlugin(this.config));\n        this.middlewareStack.use(getLoggerPlugin(this.config));\n        this.middlewareStack.use(getRecursionDetectionPlugin(this.config));\n        this.middlewareStack.use(getHttpAuthSchemeEndpointRuleSetPlugin(this.config, {\n            httpAuthSchemeParametersProvider: defaultS3HttpAuthSchemeParametersProvider,\n            identityProviderConfigProvider: async (config) => new DefaultIdentityProviderConfig({\n                \"aws.auth#sigv4\": config.credentials,\n                \"aws.auth#sigv4a\": config.credentials,\n            }),\n        }));\n        this.middlewareStack.use(getHttpSigningPlugin(this.config));\n        this.middlewareStack.use(getValidateBucketNamePlugin(this.config));\n        this.middlewareStack.use(getAddExpectContinuePlugin(this.config));\n        this.middlewareStack.use(getRegionRedirectMiddlewarePlugin(this.config));\n        this.middlewareStack.use(getS3ExpressPlugin(this.config));\n        this.middlewareStack.use(getS3ExpressHttpSigningPlugin(this.config));\n    }\n    destroy() {\n        super.destroy();\n    }\n}\n","import { normalizeProvider } from \"@smithy/util-middleware\";\nimport { DEFAULT_REQUEST_CHECKSUM_CALCULATION, DEFAULT_RESPONSE_CHECKSUM_VALIDATION, } from \"./constants\";\nexport const resolveFlexibleChecksumsConfig = (input) => ({\n    ...input,\n    requestChecksumCalculation: normalizeProvider(input.requestChecksumCalculation ?? DEFAULT_REQUEST_CHECKSUM_CALCULATION),\n    responseChecksumValidation: normalizeProvider(input.responseChecksumValidation ?? DEFAULT_RESPONSE_CHECKSUM_VALIDATION),\n});\n","export const resolveEventStreamSerdeConfig = (input) => ({\n    ...input,\n    eventStreamMarshaller: input.eventStreamSerdeProvider(input),\n});\n","import { S3ExpressIdentityProviderImpl } from \"./s3-express\";\nexport const resolveS3Config = (input, { session, }) => {\n    const [s3ClientProvider, CreateSessionCommandCtor] = session;\n    return {\n        ...input,\n        forcePathStyle: input.forcePathStyle ?? false,\n        useAccelerateEndpoint: input.useAccelerateEndpoint ?? false,\n        disableMultiregionAccessPoints: input.disableMultiregionAccessPoints ?? false,\n        followRegionRedirects: input.followRegionRedirects ?? false,\n        s3ExpressIdentityProvider: input.s3ExpressIdentityProvider ??\n            new S3ExpressIdentityProviderImpl(async (key) => s3ClientProvider().send(new CreateSessionCommandCtor({\n                Bucket: key,\n            }))),\n        bucketEndpoint: input.bucketEndpoint ?? false,\n    };\n};\n","import { getAwsRegionExtensionConfiguration, resolveAwsRegionExtensionConfiguration, } from \"@aws-sdk/region-config-resolver\";\nimport { getHttpHandlerExtensionConfiguration, resolveHttpHandlerRuntimeConfig } from \"@smithy/protocol-http\";\nimport { getDefaultExtensionConfiguration, resolveDefaultRuntimeConfig } from \"@smithy/smithy-client\";\nimport { getHttpAuthExtensionConfiguration, resolveHttpAuthRuntimeConfig } from \"./auth/httpAuthExtensionConfiguration\";\nconst asPartial = (t) => t;\nexport const resolveRuntimeExtensions = (runtimeConfig, extensions) => {\n    const extensionConfiguration = {\n        ...asPartial(getAwsRegionExtensionConfiguration(runtimeConfig)),\n        ...asPartial(getDefaultExtensionConfiguration(runtimeConfig)),\n        ...asPartial(getHttpHandlerExtensionConfiguration(runtimeConfig)),\n        ...asPartial(getHttpAuthExtensionConfiguration(runtimeConfig)),\n    };\n    extensions.forEach((extension) => extension.configure(extensionConfiguration));\n    return {\n        ...runtimeConfig,\n        ...resolveAwsRegionExtensionConfiguration(extensionConfiguration),\n        ...resolveDefaultRuntimeConfig(extensionConfiguration),\n        ...resolveHttpHandlerRuntimeConfig(extensionConfiguration),\n        ...resolveHttpAuthRuntimeConfig(extensionConfiguration),\n    };\n};\n","export function ssecMiddleware(options) {\n    return (next) => async (args) => {\n        const input = { ...args.input };\n        const properties = [\n            {\n                target: \"SSECustomerKey\",\n                hash: \"SSECustomerKeyMD5\",\n            },\n            {\n                target: \"CopySourceSSECustomerKey\",\n                hash: \"CopySourceSSECustomerKeyMD5\",\n            },\n        ];\n        for (const prop of properties) {\n            const value = input[prop.target];\n            if (value) {\n                let valueForHash;\n                if (typeof value === \"string\") {\n                    if (isValidBase64EncodedSSECustomerKey(value, options)) {\n                        valueForHash = options.base64Decoder(value);\n                    }\n                    else {\n                        valueForHash = options.utf8Decoder(value);\n                        input[prop.target] = options.base64Encoder(valueForHash);\n                    }\n                }\n                else {\n                    valueForHash = ArrayBuffer.isView(value)\n                        ? new Uint8Array(value.buffer, value.byteOffset, value.byteLength)\n                        : new Uint8Array(value);\n                    input[prop.target] = options.base64Encoder(valueForHash);\n                }\n                const hash = new options.md5();\n                hash.update(valueForHash);\n                input[prop.hash] = options.base64Encoder(await hash.digest());\n            }\n        }\n        return next({\n            ...args,\n            input,\n        });\n    };\n}\nexport const ssecMiddlewareOptions = {\n    name: \"ssecMiddleware\",\n    step: \"initialize\",\n    tags: [\"SSE\"],\n    override: true,\n};\nexport const getSsecPlugin = (config) => ({\n    applyToStack: (clientStack) => {\n        clientStack.add(ssecMiddleware(config), ssecMiddlewareOptions);\n    },\n});\nexport function isValidBase64EncodedSSECustomerKey(str, options) {\n    const base64Regex = /^(?:[A-Za-z0-9+/]{4})*([A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$/;\n    if (!base64Regex.test(str))\n        return false;\n    try {\n        const decodedBytes = options.base64Decoder(str);\n        return decodedBytes.length === 32;\n    }\n    catch {\n        return false;\n    }\n}\n","import { getFlexibleChecksumsPlugin } from \"@aws-sdk/middleware-flexible-checksums\";\nimport { getS3ExpiresMiddlewarePlugin } from \"@aws-sdk/middleware-sdk-s3\";\nimport { getSsecPlugin } from \"@aws-sdk/middleware-ssec\";\nimport { getEndpointPlugin } from \"@smithy/middleware-endpoint\";\nimport { getSerdePlugin } from \"@smithy/middleware-serde\";\nimport { Command as $Command } from \"@smithy/smithy-client\";\nimport { commonParams } from \"../endpoint/EndpointParameters\";\nimport { GetObjectOutputFilterSensitiveLog, GetObjectRequestFilterSensitiveLog, } from \"../models/models_0\";\nimport { de_GetObjectCommand, se_GetObjectCommand } from \"../protocols/Aws_restXml\";\nexport { $Command };\nexport class GetObjectCommand extends $Command\n    .classBuilder()\n    .ep({\n    ...commonParams,\n    Bucket: { type: \"contextParams\", name: \"Bucket\" },\n    Key: { type: \"contextParams\", name: \"Key\" },\n})\n    .m(function (Command, cs, config, o) {\n    return [\n        getSerdePlugin(config, this.serialize, this.deserialize),\n        getEndpointPlugin(config, Command.getEndpointParameterInstructions()),\n        getFlexibleChecksumsPlugin(config, {\n            requestChecksumRequired: false,\n            requestValidationModeMember: \"ChecksumMode\",\n            responseAlgorithms: [\"CRC64NVME\", \"CRC32\", \"CRC32C\", \"SHA256\", \"SHA1\"],\n        }),\n        getSsecPlugin(config),\n        getS3ExpiresMiddlewarePlugin(config),\n    ];\n})\n    .s(\"AmazonS3\", \"GetObject\", {})\n    .n(\"S3Client\", \"GetObjectCommand\")\n    .f(GetObjectRequestFilterSensitiveLog, GetObjectOutputFilterSensitiveLog)\n    .ser(se_GetObjectCommand)\n    .de(de_GetObjectCommand)\n    .build() {\n}\n","import { getS3ExpiresMiddlewarePlugin, getThrow200ExceptionsPlugin } from \"@aws-sdk/middleware-sdk-s3\";\nimport { getSsecPlugin } from \"@aws-sdk/middleware-ssec\";\nimport { getEndpointPlugin } from \"@smithy/middleware-endpoint\";\nimport { getSerdePlugin } from \"@smithy/middleware-serde\";\nimport { Command as $Command } from \"@smithy/smithy-client\";\nimport { commonParams } from \"../endpoint/EndpointParameters\";\nimport { HeadObjectOutputFilterSensitiveLog, HeadObjectRequestFilterSensitiveLog, } from \"../models/models_0\";\nimport { de_HeadObjectCommand, se_HeadObjectCommand } from \"../protocols/Aws_restXml\";\nexport { $Command };\nexport class HeadObjectCommand extends $Command\n    .classBuilder()\n    .ep({\n    ...commonParams,\n    Bucket: { type: \"contextParams\", name: \"Bucket\" },\n    Key: { type: \"contextParams\", name: \"Key\" },\n})\n    .m(function (Command, cs, config, o) {\n    return [\n        getSerdePlugin(config, this.serialize, this.deserialize),\n        getEndpointPlugin(config, Command.getEndpointParameterInstructions()),\n        getThrow200ExceptionsPlugin(config),\n        getSsecPlugin(config),\n        getS3ExpiresMiddlewarePlugin(config),\n    ];\n})\n    .s(\"AmazonS3\", \"HeadObject\", {})\n    .n(\"S3Client\", \"HeadObjectCommand\")\n    .f(HeadObjectRequestFilterSensitiveLog, HeadObjectOutputFilterSensitiveLog)\n    .ser(se_HeadObjectCommand)\n    .de(de_HeadObjectCommand)\n    .build() {\n}\n","/* eslint-disable @typescript-eslint/no-non-null-assertion */\n/* eslint-disable @typescript-eslint/no-unused-vars */\n// S3Store.ts\n\nimport { AsyncStore } from \"./types\";\nimport { GetObjectCommand, HeadObjectCommand, NoSuchKey, S3Client, S3ClientConfig } from \"@aws-sdk/client-s3\";\n\n// A very minimal custom S3 store example. \n// This store is read-only; 'setItem' or 'deleteItem' either throw \n// or remain unimplemented.\n//\n// Usage: const store = new S3Store('my-bucket', 'my-zarr-prefix/');\n// Then pass `store` to openArray({ store, path: '', mode: 'r' }) (or with a sub-path).\n\nexport class S3Store implements AsyncStore<ArrayBuffer, any> {\n  private s3: S3Client;\n\n  // TODO Doesnt this fuck up storage - caching locally\n  private cache: Map<string, ArrayBuffer> = new Map(); \n  private cacheStack: string[] = [];\n  \n  private cacheHits = 0;\n  private cacheMisses = 0;\n  private cacheReplaces = 0;\n\n  constructor(private bucketName: string, private prefix: string, private cacheLimit: number = 3, options?: S3ClientConfig) {\n    this.s3 = new S3Client(options ?? []);\n  }\n\n  /**\n   * Get an item (chunk or metadata) from S3.\n   * @param key The Zarr key (e.g. \"0.0\", \".zarray\", etc.)\n   */\n  async getItem(key: string, opts?: { signal?: AbortSignal }): Promise<ArrayBuffer | any> {\n    const objectKey = `${this.prefix}/${key}`;\n\n    if (objectKey.split(\"/\").pop()!.charAt(0) == '.'){\n      // .zarray, .zmetadata etc.\n      // cached automatically within zarr.js so no need to cache here\n      const response = await this.s3.send(new GetObjectCommand({ Bucket: this.bucketName, Key: objectKey }));\n\n      if (!response.Body) \n        throw new Error(`Object body not found at ${this.bucketName}/${objectKey}`);\n\n      return response.Body.transformToString();\n    }\n\n    // Array chunk file\n    // Return from cache if present:\n    if (this.cache.has(objectKey)) {\n      this.cacheHits++;\n      return this.cache.get(objectKey)!;\n    }\n    this.cacheMisses++;\n\n    // Fetch from S3:\n    const response = await this.s3.send(new GetObjectCommand({ Bucket: this.bucketName, Key: objectKey }));\n\n    if (!response.Body) {\n      throw new Error(`Object body not found at ${this.bucketName}/${objectKey}`);\n    }\n    \n    // Convert Body to ArrayBuffer:\n    // console.time('timer');\n    const arrayBuffer = await this.streamToArrayBuffer(response.Body);\n    // console.timeEnd('timer');\n    \n    if (this.cacheStack.length >= this.cacheLimit){\n      this.cacheReplaces++;\n      const keyToDelete = this.cacheStack.shift()!;\n      this.cache.delete(keyToDelete);\n    }\n\n    this.cache.set(objectKey, arrayBuffer);\n    this.cacheStack.push(objectKey);\n\n    return arrayBuffer;\n  }\n\n  /**\n   * Set an item in S3 (not implemented in this example).\n   */\n  async setItem(key: string, value: ArrayBuffer): Promise<boolean> {\n    throw new Error(\"S3Store setItem not implemented in this read-only example.\");\n  }\n\n  /**\n   * Delete an item in S3 (not implemented).\n   */\n  async deleteItem(key: string): Promise<boolean> {\n    throw new Error(\"S3Store deleteItem not implemented in this read-only example.\");\n  }\n\n  /**\n   * Check if an item exists in S3.\n   */\n  async containsItem(key: string): Promise<boolean> {\n    const objectKey = `${this.prefix}/${key}`;\n    try {\n      await this.s3.send(\n        new HeadObjectCommand({\n          Bucket: this.bucketName,\n          Key: objectKey\n        })\n      );\n    } catch (caught) {\n      if (caught instanceof NoSuchKey)\n        return false;\n    }\n    return true;\n  }\n\n  /**\n   * streamToArrayBuffer helper: convert an AWS SDK v3 response Body stream into an ArrayBuffer.\n   * Works in Node.js. If you are in a browser, adapt to a web stream or use a different approach.\n   */\n  private async streamToArrayBuffer(stream: any): Promise<ArrayBuffer> {\n    const chunks: Uint8Array[] = [];\n    for await (const chunk of stream) {\n      chunks.push(chunk);\n    }\n    const totalLength = chunks.reduce((acc, c) => acc + c.length, 0);\n    const buffer = new Uint8Array(totalLength);\n    let offset = 0;\n    for (const c of chunks) {\n      buffer.set(c, offset);\n      offset += c.length;\n    }\n    return buffer.buffer;\n  }\n\n  /**\n   * Optional: list known keys (not used by the default zarr.js reading path).\n   * Potentially expensive for large datasets. Not implemented here.\n   */\n  async keys(): Promise<string[]> {\n    throw new Error(\"S3Store keys() not implemented.\");\n  }\n\n  /**\n   * Clean up if needed. Here, nothing to do.\n   */\n  async close(): Promise<void> {\n    this.s3.destroy();\n    console.log(`Closing Store: cache had ${this.cacheHits} hits, ${this.cacheMisses} misses and ${this.cacheReplaces} replacements`);\n  }\n}"],"names":["registry","Map","addCodec","id","importFn","set","async","getCodec","config","has","Error","get","fromConfig","createProxy","mapping","Proxy","target","key","value","_receiver","setItem","getItem","deleteProperty","deleteItem","containsItem","isKeyError","o","err","__zarr__","ContainsArrayError","constructor","path","super","this","Object","setPrototypeOf","prototype","ContainsGroupError","ArrayNotFoundError","GroupNotFoundError","PathNotFoundError","PermissionError","message","KeyError","TooManyIndicesError","RangeError","selection","shape","length","BoundsCheckError","InvalidSliceError","from","to","stepSize","reason","NegativeStepError","ValueError","HTTPError","code","slice","start","stop","undefined","step","_slice","sliceIndices","Number","MAX_SAFE_INTEGER","s","Math","floor","adjustIndices","ensureArray","Array","isArray","selectionToSliceIndices","sliceIndicesResult","outShape","i","push","x","dimLength","normalizeArraySelection","convertIntegerSelectionToSlices","ellipsisIndex","numEllipsis","numItemsLeft","numItemsRight","numItems","filter","numNewItems","newItem","concat","fill","numMissing","checkSelectionLength","replaceEllipsis","dimSelection","normalizeIntegerSelection","isIntegerArray","TypeError","isInteger","e","isSlice","isContiguousSlice","BasicIndexer","array","dimIndexers","arrayShape","dimChunkLength","chunks","IntDimIndexer","SliceDimIndexer","d","dropAxes","iter","dimIndexerIterables","map","dimIndexerProduct","iterables","iterators","it","results","next","done","product","dimProjections","chunkCoords","chunkSelection","outSelection","p","dimChunkIndex","dimChunkSelection","dimOutSelection","dimOffset","max","ceil","numChunks","dimChunkIndexFrom","dimChunkIndexTo","dimLimit","min","dimChunkSelStart","dimChunkSelStop","dimOutOffset","remainder","IS_NODE","process","versions","node","noop","normalizeStoragePath","String","valueOf","replace","segments","split","normalizeShape","isTotalSlice","item","isStepOne","resolveUrl","root","base","URL","pathname","endsWith","resolved","search","href","byteSwapInplace","src","b","BYTES_PER_ELEMENT","bytes","Buffer","buffer","byteOffset","swap16","swap32","swap64","flipper","Uint8Array","numFlips","endByteIndex","t","j","convertColMajorToRowMajorGeneric","out","nDims","size","reduce","r","a","rowMajorStrides","_","index","colMajorIdx","rowMajorIdx","dim","colMajorToRowMajorConverters","idx","shape0","shape1","stride0","i1","i0","shape2","stride1","i2","shape3","stride2","i3","convertColMajorToRowMajor","isArrayBufferLike","obj","ArrayBuffer","SharedArrayBuffer","toString","startsWith","ARRAY_META_KEY","GROUP_META_KEY","ATTRS_META_KEY","containsArray","store","pathToPrefix","containsGroup","requireParentGroup","chunkStore","overwrite","initGroupMetadata","JSON","stringify","zarr_format","initGroup","initArrayMetadata","dtype","compressor","fillValue","order","filters","dimensionSeparator","normalizeChunks","toUpperCase","normalizeOrder","serializedFillValue","isNaN","POSITIVE_INFINITY","NEGATIVE_INFINITY","metadata","fill_value","dimension_separator","metaKey","initArray","parseMetadata","isBuffer","parse","utf8Decoder","TextDecoder","decode","Attributes","readOnly","cache","cachedValue","asObject","getNoSync","error","setNoSync","putNoSync","m","delNoSync","put","proxy","Float16Array","globalThis","DTYPE_TYPEDARRAY_MAPPING","Int8Array","Uint16Array","Int16Array","Uint32Array","Int32Array","Float64Array","Float32Array","getTypedArrayCtr","ctr","getTypedArrayDtypeString","getNestedArrayConstructor","arr","byteLength","sliceNestedArray","normalizedSelection","_sliceNestedArray","currentSlice","outputSize","newArrData","newArr","setNestedArray","dstArr","sourceArr","destShape","sourceShape","_setNestedArray","_setNestedArrayToScalar","_to","flattenNestedArray","constr","y","outArr","_flattenNestedArray","offset","nextShape","mult","NestedArray","data","dataIsTypedArray","numShapeElements","parseInt","numDataElements","typeConstructor","createNestedArray","sliceResult","_outShape","setNestedArrayToScalar","flatten","arange","rangeTypedArray","tContructor","keys","setRawArrayToScalar","dstStrides","dstShape","dstSelection","_setRawArrayToScalar","setRawArray","sourceStrides","normalizedDstSelection","dstSliceIndices","_setRawArray","setRawArrayFromChunkItem","sourceSelection","normalizedSourceSelection","sourceSliceIndicies","_setRawArrayFromChunkItem","currentDstSlice","nextDstSliceIndices","currentDstStride","nextDstStrides","subarray","currentSourceStride","nextSourceStrides","sourceSliceIndices","currentSourceSlice","nextSourceSliceIndices","sfrom","_sto","sstep","_soutputSize","RawArray","strides","ndim","getStrides","hasOwnProperty","prefix","Events","EE","fn","context","once","addListener","emitter","event","listener","evt","_events","_eventsCount","clearEvent","EventEmitter","create","__proto__","eventNames","events","name","names","call","getOwnPropertySymbols","listeners","handlers","l","ee","listenerCount","emit","a1","a2","a3","a4","a5","args","len","arguments","removeListener","apply","on","removeAllListeners","off","prefixed","module","exports","TimeoutError","AbortError","getDOMException","errorMessage","DOMException","getAbortedReason","signal","_PriorityQueue_queue","__classPrivateFieldGet","receiver","state","kind","f","PriorityQueue","enqueue","run","options","element","priority","comparator","first","count","trunc","lowerBound","splice","dequeue","shift","WeakMap","_PQueue_instances","_PQueue_carryoverConcurrencyCount","_PQueue_isIntervalIgnored","_PQueue_intervalCount","_PQueue_intervalCap","_PQueue_interval","_PQueue_intervalEnd","_PQueue_intervalId","_PQueue_timeoutId","_PQueue_queue","_PQueue_queueClass","_PQueue_pending","_PQueue_concurrency","_PQueue_isPaused","_PQueue_throwOnTimeout","_PQueue_doesIntervalAllowAnother_get","_PQueue_doesConcurrentAllowAnother_get","_PQueue_next","_PQueue_onResumeInterval","_PQueue_isIntervalPaused_get","_PQueue_tryToStartAnother","_PQueue_initializeIntervalIfNeeded","_PQueue_onInterval","_PQueue_processQueue","_PQueue_throwOnAbort","_PQueue_onEvent","HTTPMethod","__classPrivateFieldSet","PQueue","_a","_b","_c","_d","add","defineProperty","enumerable","configurable","writable","carryoverConcurrencyCount","intervalCap","interval","concurrency","autoStart","queueClass","isFinite","timeout","throwOnTimeout","newConcurrency","function_","Promise","resolve","reject","aborted","operation","promise","milliseconds","fallback","timer","cancelablePromise","sign","customTimers","setTimeout","clearTimeout","addEventListener","timeoutError","cancel","clear","pTimeout","race","result","addAll","functions","all","pause","onEmpty","onSizeLessThan","limit","onIdle","sizeBy","pending","isPaused","WeakSet","now","Date","delay","clearInterval","canInitializeInterval","job","setInterval","_resolve","ZarrArray","cacheMetadata","cacheAttrs","_chunkStore","keyPrefix","meta","attrKey","attrs","basename","parts","chunkSize","fillTypeValue","NaN","Infinity","_chunkDataShape","chunkDataShape","loadMetadataForConstructor","reloadMetadata","metaStoreValue","refreshMetadata","opts","getBasicSelection","getRaw","asRaw","concurrencyLimit","progressCallback","storeOptions","getBasicSelectionND","indexer","getSelection","outDtype","outSize","itr","proj","chunkProjection","decodeDirectToRawArray","queue","allTasks","progress","queueSize","chunkGetItem","cKey","chunkKey","cdata","decodedChunk","decodeChunk","isContiguousSelection","toNestedArray","tmp","chunkBufferToRawArray","getRawChunk","join","sep","ensureByteArray","chunkData","toTypedArray","includes","setBasicSelection","setBasicSelectionND","setSelection","getChunkValue","selectionShape","chunkValue","arrayEquals1D","chunkSetItem","chunk","dtypeConstr","chunkStoreData","dBytes","chunkNestedArray","encodeChunk","copy","byteSwap","encode","MemoryStore","getParent","parent","k","requireParent","DEFAULT_METHODS","HEAD","GET","PUT","HTTPStore","url","fetchOptions","supportedMethods","Set","fetch","status","arrayBuffer","TextEncoder","method","body","_item","storeArgument","normalizeStoreArgument","empty","zeros","ones","full","wasReadOnly","z","openArray","mode","Group","itemPath","absolute","createGroup","requireGroup","getOptsForArrayCreation","createDataset","group","openGroup","ObjectStore","object","getOwnPropertyNames","getHttpHandlerExtensionConfiguration","runtimeConfig","httpHandler","setHttpHandler","handler","updateHttpClientConfig","httpHandlerConfigs","resolveHttpHandlerRuntimeConfig","httpHandlerExtensionConfiguration","HttpAuthLocation","HttpApiKeyAuthLocation","EndpointURLScheme","AlgorithmId","FieldPosition","SMITHY_CONTEXT_KEY","IniSectionType","RequestHandlerProtocol","HttpRequest","hostname","port","query","headers","protocol","charAt","username","password","fragment","clone","request","cloned","carry","paramName","param","isInstance","req","HttpResponse","statusCode","response","resp","addExpectContinueMiddlewareOptions","tags","override","getAddExpectContinuePlugin","applyToStack","clientStack","runtime","requestHandler","Expect","addExpectContinueMiddleware","RequestChecksumCalculation","WHEN_SUPPORTED","WHEN_REQUIRED","DEFAULT_REQUEST_CHECKSUM_CALCULATION","ResponseChecksumValidation","DEFAULT_RESPONSE_CHECKSUM_VALIDATION","ChecksumAlgorithm","ChecksumLocation","DEFAULT_CHECKSUM_ALGORITHM","CRC32","SelectorType","stringUnionSelector","union","type","values","NODE_REQUEST_CHECKSUM_CALCULATION_CONFIG_OPTIONS","environmentVariableSelector","env","ENV","configFileSelector","profile","CONFIG","default","NODE_RESPONSE_CHECKSUM_VALIDATION_CONFIG_OPTIONS","warningEmitted","emitWarningIfUnsupportedVersion","version","substring","indexOf","emitWarning","setCredentialFeature","credentials","feature","$source","setFeature","__aws_sdk_context","features","getDateHeader","date","getSkewCorrectedDate","systemClockOffset","getUpdatedSystemClockOffset","clockTime","currentSystemClockOffset","clockTimeInMs","abs","getTime","isClockSkewed","throwSigningPropertyError","property","validateSigningProperties","signingProperties","authScheme","endpointV2","properties","authSchemes","signerFunction","signer","signingRegion","signingRegionSet","signingName","AwsSdkSigV4Signer","httpRequest","identity","validatedProps","handlerExecutionContext","second","signingDate","signingService","errorHandler","serverTime","ServerTime","$response","initialSystemClockOffset","$metadata","clockSkewCorrected","successHandler","httpResponse","dateHeader","AwsSdkSigV4ASigner","multiRegionOverride","sigv4aSigningRegionSet","getSmithyContext","normalizeProvider","input","promisified","httpAuthSchemeMiddleware","mwOptions","httpAuthSchemeProvider","httpAuthSchemeParametersProvider","httpAuthSchemes","scheme","schemeId","convertHttpAuthSchemesToMap","smithyContext","failureReasons","option","identityProvider","identityProviderConfigProvider","identityProperties","propertiesExtractor","assign","selectedHttpAuthScheme","httpAuthOption","httpAuthSchemeEndpointRuleSetMiddlewareOptions","relation","toMiddleware","getHttpAuthSchemeEndpointRuleSetPlugin","addRelativeTo","deserializerMiddlewareOption","serializerMiddlewareOption","getSerdePlugin","serializer","deserializer","commandStack","output","hint","logger","warn","console","$responseBodyText","deserializerMiddleware","endpoint","urlParser","serializerMiddleware","defaultErrorHandler","defaultSuccessHandler","httpSigningMiddlewareOptions","aliases","getHttpSigningPlugin","catch","isArrayBuffer","arg","fromArrayBuffer","fromString","encoding","BASE64_REGEX","fromBase64","exec","fromUtf8","buf","toUint8Array","isView","toUtf8","toBase64","_input","Uint8ArrayBlobAdapter","source","str","mutate","transformFromString","transformToString","payload","getAwsChunkedEncodingStream","readableStream","base64Encoder","bodyLengthChecker","checksumAlgorithmFn","checksumLocationName","streamHasher","checksumRequired","digest","awsChunkedEncodingStream","Readable","read","checksum","escapeUri","uri","encodeURIComponent","hexEncode","c","charCodeAt","NODEJS_TIMEOUT_ERROR_CODES","getTransformedHeaders","transformedHeaders","headerValues","timing","cb","ms","timeoutId","writeRequestBody","maxContinueTimeoutMs","expect","sendBody","pipe","end","uint8","writeBody","DEFAULT_REQUEST_TIMEOUT","NodeHttpHandler","instanceOrOptions","handle","checkSocketUsage","agent","socketWarningTimestamp","sockets","requests","maxSockets","origin","socketsInUse","requestsEnqueued","handlerProtocol","configProvider","then","_options","resolveDefaultConfig","requestTimeout","connectionTimeout","socketTimeout","httpAgent","httpsAgent","keepAlive","hAgent","destroy","hsAgent","abortSignal","_reject","writeRequestBodyPromise","timeouts","forEach","abortError","isSSL","socketAcquisitionWarningTimeout","queryString","sort","iLen","qsEntry","buildQueryString","auth","nodeHttpsOptions","host","hsRequest","hRequest","res","statusMessage","onAbort","removeEventListener","onabort","timeoutInMs","registerTimeout","doWithSocket","socket","connecting","bind","setConnectionTimeout","onTimeout","setSocketTimeout","keepAliveMsecs","deferTimeMs","registerListener","setKeepAlive","setSocketKeepAlive","Collector","Writable","bufferedBytes","_write","callback","streamCollector","stream","isReadableStreamInstance","reader","getReader","isDone","collected","collectReadableStream","collector","ReadableStream","Blob","blob","base64","FileReader","onloadend","readyState","commaIndex","dataOffset","onerror","readAsDataURL","readToBase64","collectBlob","collectStream","SHORT_TO_HEX","HEX_TO_SHORT","encodedByte","toLowerCase","fromHex","encoded","toHex","isReadableStream","ERR_MSG_STREAM_HAS_BEEN_TRANSFORMED","sdkStreamMixin","isBlobInstance","transformed","transformToByteArray","transformToWebStream","blobToWebStream","sdkStreamMixinReadableStream","isEncoding","readableFlowing","toWeb","splitStream","tee","splitWebStream","stream1","PassThrough","stream2","headStream","byteLengthCounter","releaseLock","headWebStream","buffers","bytesBuffered","excess","tailBuffer","ChecksumStream","Duplex","expectedChecksum","checksumSourceLocation","_read","update","_final","received","ReadableStreamRef","createChecksumStream","init","encoder","TransformStream","transform","controller","flush","terminate","pipeThrough","readable","createChecksumStreamWeb","collectBody","streamBody","fromContext","extendedEncodeURIComponent","requestBuilder","RequestBuilder","resolvePathStack","build","basePath","resolvePath","hn","bp","uriLabel","memberName","labelValueProvider","isGreedyLabel","resolvedPath","labelValue","segment","h","q","DefaultIdentityProviderConfig","entries","getIdentityProvider","NoAuthSigner","isIdentityExpired","expirationMs","doesIdentityRequireRefresh","expiration","ProviderError","tryNextLink","debug","CredentialsProviderError","TokenProviderError","chain","providers","lastProviderError","provider","memoize","isExpired","requiresRefresh","hasResult","isConstant","coalesceProvider","forceRefresh","NODE_SIGV4A_CONFIG_OPTIONS","AWS_SIGV4A_SIGNING_REGION_SET","trim","sigv4a_signing_region_set","AMZ_DATE_QUERY_PARAM","SIGNATURE_QUERY_PARAM","TOKEN_QUERY_PARAM","AUTH_HEADER","AMZ_DATE_HEADER","GENERATED_HEADERS","SIGNATURE_HEADER","SHA256_HEADER","TOKEN_HEADER","ALWAYS_UNSIGNABLE_HEADERS","authorization","connection","pragma","referer","te","trailer","upgrade","PROXY_HEADER_PATTERN","SEC_HEADER_PATTERN","ALGORITHM_IDENTIFIER","EVENT_ALGORITHM_IDENTIFIER","KEY_TYPE_IDENTIFIER","signingKeyCache","cacheQueue","createScope","shortDate","region","service","hmac","ctor","secret","hash","getCanonicalHeaders","unsignableHeaders","signableHeaders","canonical","headerName","canonicalHeaderName","test","getPayloadHash","hashConstructor","hashCtor","HeaderFormatter","format","formatHeaderValue","position","header","shortView","DataView","setUint8","setInt16","intView","setInt32","longBytes","binView","setUint16","binBytes","utf8Bytes","strView","strBytes","tsBytes","Int64","fromNumber","UUID_PATTERN","uuidBytes","HEADER_VALUE_TYPE","number","remaining","round","negate","negative","prepareRequest","toDate","time","SignatureV4","applyChecksum","sha256","uriEscapePath","headerFormatter","regionProvider","credentialProvider","presign","originalRequest","expiresIn","unhoistableHeaders","hoistableHeaders","validateResolvedCredentials","longDate","formatDate","scope","lname","moveHeadersToQuery","sessionToken","accessKeyId","canonicalHeaders","getCanonicalHeaderList","getSignature","getSigningKey","createCanonicalRequest","toSign","signString","signEvent","signMessage","signRequest","priorSignature","hashedPayload","hashedHeaders","stringToSign","signableMessage","signature","requestToSign","payloadHash","soughtHeader","hasHeader","sortedHeaders","getCanonicalPath","serialized","encodedKey","getCanonicalQuery","createStringToSign","credentialScope","canonicalRequest","hashedRequest","normalizedPathSegments","pathSegment","pop","normalizedPath","keyPromise","sha256Constructor","cacheKey","secretAccessKey","signable","toISOString","resolveAwsSdkSigV4Config","credentialsProvider","isUserSupplied","normalizedProvider","memoizeIdentityProvider","credentialDefaultProvider","parentClientConfig","boundCredentialsProvider","callerClientConfig","signingEscapePath","regionInfoProvider","useFipsEndpoint","useDualstackEndpoint","regionInfo","serviceId","params","signerConstructor","defaultSigningName","creds","getAllAliases","_aliases","alias","getMiddlewareNameWithAliases","constructStack","absoluteEntries","relativeEntries","identifyOnResolve","entriesNameSet","cloneTo","toStack","entry","middleware","stack","expandRelativeMiddlewareList","expandedMiddlewareList","before","after","reverse","getMiddlewareList","normalizedAbsoluteEntries","normalizedRelativeEntries","normalizedEntriesNameMap","normalizedEntry","mainChain","stepWeights","priorityWeights","wholeList","some","toOverrideIndex","findIndex","toOverride","use","plugin","remove","toRemove","isRemoved","filterCb","delete","removeByName","removeByReference","removeByTag","identify","mw","toggle","log","initialize","serialize","finalizeRequest","deserialize","high","normal","low","Client","middlewareStack","send","command","optionsOrCb","cacheMiddleware","resolveMiddleware","Command","classBuilder","ClassBuilder","resolveMiddlewareWithContext","configuration","middlewareFn","clientName","commandName","inputFilterSensitiveLog","outputFilterSensitiveLog","additionalContext","CommandCtor","commandInstance","_init","_ep","_middlewareFn","_commandName","_clientName","_additionalContext","_smithyContext","_inputFilterSensitiveLog","_outputFilterSensitiveLog","_serializer","_deserializer","ep","endpointParameterInstructions","middlewareSupplier","n","inputFilter","outputFilter","ser","de","closure","CommandRef","getEndpointParameterInstructions","SENSITIVE_STRING","createAggregatedClient","commands","methodImpl","methodName","parseBoolean","MAX_FLOAT","expectFloat32","expected","parsed","parseFloat","stackTraceWarning","expectNumber","expectLong","expectInt32","expectSizedInt","expectShort","expectByte","castInt","of","expectNonNull","location","expectObject","receivedType","expectString","NUMBER_REGEX","parseNumber","matches","match","strictParseLong","strictParseInt32","strictParseShort","DAYS","MONTHS","dateToUtcString","year","getUTCFullYear","month","getUTCMonth","dayOfWeek","getUTCDay","dayOfMonthInt","getUTCDate","hoursInt","getUTCHours","minutesInt","getUTCMinutes","secondsInt","getUTCSeconds","hoursString","minutesString","secondsString","RFC3339","RegExp","parseRfc3339DateTime","yearStr","monthStr","dayStr","hours","minutes","seconds","fractionalMilliseconds","stripLeadingZeroes","parseDateValue","day","buildDate","RFC3339_WITH_OFFSET","parseRfc3339DateTimeWithOffset","offsetStr","setTime","parseOffsetToMilliseconds","IMF_FIXDATE","RFC_850_DATE","ASC_TIME","parseRfc7231DateTime","parseMonthByShortName","adjustRfc850Year","parseTwoDigitYear","trimLeft","adjustedMonth","validateDayOfMonth","UTC","parseMilliseconds","thisYear","valueInThisCentury","getUTCMilliseconds","monthIdx","DAYS_IN_MONTH","maxDays","isLeapYear","lower","upper","dateVal","strictParseByte","strictParseFloat32","directionStr","direction","ServiceException","getPrototypeOf","$fault","candidate","isPrototypeOf","Boolean","Symbol","hasInstance","instance","decorateServiceException","exception","additions","v","Message","withBaseException","ExceptionCtor","parsedBody","errorCode","exceptionCtor","deserializeMetadata","httpStatusCode","Code","throwDefaultError","requestId","extendedRequestId","cfId","loadConfigsForDefaultMode","retryMode","getChecksumConfiguration","checksumAlgorithms","algorithmId","checksumConstructor","_checksumAlgorithms","addChecksumAlgorithm","algo","resolveChecksumRuntimeConfig","clientConfig","checksumAlgorithm","getRetryConfiguration","_retryStrategy","retryStrategy","setRetryStrategy","resolveRetryRuntimeConfig","retryStrategyConfiguration","getDefaultExtensionConfiguration","resolveDefaultRuntimeConfig","getValueFromTextNode","textNodeName","isSerializableHeaderValue","NoOpLogger","trace","info","arg0","arg1","arg2","instructions","mapWithFilter","applyInstruction","take","_instructions","targetKey","instruction","nonNullish","valueFn","pass","sourceKey","_value","defaultFilterPassed","customFilterPassed","_json","collectBodyString","utf8Encoder","parseJsonBody","parseJsonErrorBody","errorBody","loadRestJsonErrorCode","sanitizeErrorCode","rawValue","cleanValue","headerKey","find","nameStartChar","nameRegexp","regexName","isExist","isEmptyObject","merge","arrayMode","getValue","isName","string","getAllMatches","regex","allmatches","startIndex","lastIndex","util","require$$0","defaultOptions","allowBooleanAttributes","unpairedTags","isWhiteSpace","char","readPI","xmlData","tagname","substr","getErrorObject","getLineNumberForPosition","readCommentAndCDATA","angleBracketsCount","validator","validate","tagFound","reachedRoot","tagStartPos","closingTag","tagName","msg","readAttributeStr","attrStr","attrStrStart","isValid","validateAttributeString","line","tagClosed","otg","openPos","col","afterAmp","validateAmpersand","doubleQuote","singleQuote","startChar","validAttrStrRegxp","attrNames","getPositionFromMatch","attrName","validateAttrName","re","validateNumberAmpersand","lineNumber","lines","preserveOrder","attributeNamePrefix","attributesGroupName","ignoreAttributes","removeNSPrefix","parseTagValue","parseAttributeValue","trimValues","cdataPropName","numberParseOptions","hex","leadingZeros","eNotation","tagValueProcessor","val","attributeValueProcessor","stopNodes","alwaysCreateTextNode","commentPropName","processEntities","htmlEntities","ignoreDeclaration","ignorePiTags","transformTagName","transformAttributeName","updateTag","jPath","OptionsBuilder","buildOptions","xmlNode","child","addChild","readEntityExp","entityName","isComment","isEntity","isElement","isAttlist","isNotation","validateEntityName","DocTypeReader","entities","hasBody","comment","exp","regx","hexRegex","numRegex","window","consider","decimalPoint","require$$1","readDocType","require$$2","toNumber","trimmedStr","skipLike","numTrimmedByZeros","numStr","trimZeros","num","addExternalEntities","externalEntities","entKeys","ent","lastEntities","parseTextData","dontTrim","hasAttributes","isLeafNode","escapeEntities","replaceEntitiesValue","newval","parseValue","resolveNameSpace","attrsRegx","buildAttributesMap","oldVal","aName","newVal","attrCollection","parseXml","xmlObj","currentNode","textData","closeIndex","findClosingIndex","colonIndex","saveTextToParentTag","lastTagName","lastIndexOf","propIndex","tagsNodeStack","tagData","readTagExp","childNode","tagExp","attrExpPresent","endIndex","docTypeEntities","rawTagName","lastTag","isItStopNode","tagContent","readStopNodeData","entity","ampEntity","currentTagName","allNodesExp","stopNodePath","stopNodeExp","errMsg","closingIndex","closingChar","attrBoundary","ch","tagExpWithClosingIndex","separatorIndex","trimStart","openTagCount","shouldParse","OrderedObjParser_1","apos","gt","lt","quot","space","cent","pound","yen","euro","copyright","reg","inr","num_dec","fromCharCode","num_hex","compress","text","compressedObj","tagObj","propName","newJpath","isLeaf","isLeafTag","assignAttributes","attrMap","jpath","atrrName","propCount","node2json","prettify","OrderedObjParser","require$$3","XMLParser_1","validationOption","orderedObjParser","orderedResult","addEntity","arrToStr","indentation","xmlStr","isPreviousElementTag","newJPath","tagText","isStopNode","attStr","attr_to_str","tempInd","piTextNodeName","newIdentation","indentBy","tagStart","tagValue","suppressUnpairedNode","suppressEmptyNode","attr","attrVal","suppressBooleanAttributes","textValue","buildFromOrderedJs","jArray","oneListGroup","Builder","isAttribute","attrPrefixLen","processTextOrObjNode","indentate","tagEndChar","newLine","level","j2x","buildTextValNode","buildObjectNode","repeat","jObj","arrayNodeName","buildAttrPairStr","arrLen","listTagVal","listTagAttr","Ks","L","closeTag","tagEndExp","piClosingChar","fxp","XMLParser","XMLValidator","XMLBuilder","parseXmlBody","parser","parsedObj","parsedObjToReturn","parseXmlErrorBody","CLIENT_SUPPORTED_ALGORITHMS","CRC32C","CRC64NVME","SHA1","SHA256","PRIORITY_ORDER_ALGORITHMS","getChecksumLocationName","algorithm","MD5","isStreaming","convertToBuffer","isEmptyData","numToUint8","uint32ArrayFrom","a_lookUpTable","return_array","a_index","AwsCrc32c","crc32c","Crc32c","toHash","__awaiter","__generator","reset","e_1","data_1","__values","data_1_1","byte","lookupTable","e_1_1","return","AwsCrc32","crc32","Crc32","NodeCrc32","zlib","selectChecksumAlgorithmFunction","md5","sha1","stringHasher","flexibleChecksumsMiddlewareOptions","flexibleChecksumsMiddleware","middlewareConfig","headerPrefix","soughtHeaderPrefix","hasHeaderWithPrefix","requestBody","requestChecksumRequired","requestAlgorithmMember","requestChecksumCalculation","requestAlgorithmMemberName","requestAlgorithmMemberHttpHeader","httpHeader","getChecksumAlgorithmForRequest","updatedBody","updatedHeaders","rawChecksum","flexibleChecksumsInputMiddlewareOptions","getChecksumAlgorithmListForResponse","responseAlgorithms","validChecksumAlgorithms","getChecksum","flexibleChecksumsResponseMiddlewareOptions","flexibleChecksumsResponseMiddleware","requestValidationModeMember","every","responseHeader","checksumFromResponse","lastHyphenIndex","numberPart","isChecksumWithPartNumber","responseBody","responseHeaders","validateChecksumFromResponse","getFlexibleChecksumsPlugin","responseChecksumValidation","flexibleChecksumsInputMiddleware","resolveHostHeaderConfig","hostHeaderMiddlewareOptions","getHostHeaderPlugin","hostHeaderMiddleware","loggerMiddlewareOptions","getLoggerPlugin","dynamoDbDocumentClientOptions","overrideInputFilterSensitiveLog","overrideOutputFilterSensitiveLog","outputWithoutMetadata","TRACE_ID_HEADER_NAME","addRecursionDetectionMiddlewareOptions","getRecursionDetectionPlugin","functionName","traceId","nonEmptyString","recursionDetectionMiddleware","regionRedirectEndpointMiddlewareOptions","regionRedirectMiddlewareOptions","getRegionRedirectMiddlewarePlugin","followRegionRedirects","actualRegion","__s3RegionRedirect","regionRedirectMiddleware","originalRegion","regionProviderRef","unlock","s3ExpiresMiddlewareOptions","getS3ExpiresMiddlewarePlugin","expires","expiresstring","S3ExpressIdentityCache","lastPurgeTime","static","purgeExpired","EXPIRED_CREDENTIAL_PURGE_INTERVAL_MS","isRefreshing","credential","S3ExpressIdentityCacheEntry","_identity","accessed","S3ExpressIdentityProviderImpl","createSessionFn","getS3ExpressIdentity","awsIdentity","Bucket","getIdentity","REFRESH_WINDOW_MS","session","Credentials","AccessKeyId","SecretAccessKey","SessionToken","Expiration","booleanSelector","SESSION_TOKEN_QUERY_PARAM","SESSION_TOKEN_HEADER","NODE_DISABLE_S3_EXPRESS_SESSION_AUTH_OPTIONS","SignatureV4S3Express","signWithCredentials","credentialsWithoutSessionToken","getCredentialsWithoutSessionToken","setSingleOverride","presignWithCredentials","privateAccess","currentCredentialProvider","s3ExpressMiddlewareOptions","getS3ExpressPlugin","isS3ExpressAuth","backend","bucketType","isS3ExpressBucket","requestBucket","s3ExpressIdentity","s3ExpressIdentityProvider","s3ExpressMiddleware","s3ExpressHttpSigningMiddleware","signingOptions","sigV4MultiRegionSigner","signedRequest","signS3Express","THROW_IF_EMPTY_BODY","CopyObjectCommand","UploadPartCopyCommand","CompleteMultipartUploadCommand","throw200ExceptionsMiddlewareOptions","getThrow200ExceptionsPlugin","sourceBody","bodyCopy","bodyBytes","bodyStringTail","throw200ExceptionsMiddleware","bucketEndpointMiddlewareOptions","validateBucketNameMiddlewareOptions","getValidateBucketNamePlugin","bucketEndpoint","validateBucketNameMiddleware","bucket","bucketEndpointUrl","warning","bucketEndpointMiddleware","DEFAULT_UA_APP_ID","resolveUserAgentConfig","normalizedAppIdProvider","userAgentAppId","customUserAgent","appId","isValidUserAgentAppId","EndpointCache","parameters","capacity","endpointParams","resolver","IP_V4_REGEX","isIpAddress","VALID_HOST_LABEL_REGEX","isValidHostLabel","allowSubDomains","labels","label","customEndpointFunctions","debugId","toDebugString","ref","argv","EndpointError","getAttr","pathList","part","squareBracketIndex","arrayIndex","getAttrPathList","acc","DEFAULT_PORTS","HTTP","HTTPS","endpointFunctions","booleanEquals","value1","value2","isSet","not","parseURL","whatwgURL","urlString","isIp","authority","stringEquals","uriEncode","evaluateTemplate","template","evaluatedTemplateArr","templateContext","referenceRecord","currentIndex","openingBraceIndex","closingBraceIndex","parameterName","refName","evaluateExpression","keyName","callFunction","getReferenceValue","evaluatedArgs","fnSegments","evaluateCondition","fnArgs","toAssign","evaluateConditions","conditions","conditionsReferenceRecord","condition","getEndpointHeaders","headerVal","headerValEntry","processedExpr","getEndpointProperty","propertyEntry","getEndpointProperties","propertyKey","propertyVal","getEndpointUrl","endpointUrl","expression","evaluateEndpointRule","endpointRule","endpointRuleOptions","evaluateErrorRule","errorRule","evaluateTreeRule","treeRule","rules","evaluateRules","rule","endpointOrUndefined","resolveEndpoint","ruleSetObject","paramsWithDefault","paramKey","paramDefaultValue","requiredParams","required","requiredParam","isVirtualHostableS3Bucket","selectedPartitionsInfo","awsEndpointFunctions","parseArn","arn","partition","accountId","resourcePath","resourceId","resource","flat","partitions","regions","outputs","regionData","regionRegex","DEFAULT_PARTITION","aws","ACCOUNT_ID_ENDPOINT_REGEX","USER_AGENT","X_AMZ_USER_AGENT","UA_NAME_ESCAPE_REGEX","UA_VALUE_ESCAPE_REGEX","userAgentMiddleware","userAgent","escapeUserAgent","defaultUserAgent","defaultUserAgentProvider","acquireInitialRetryToken","accountIdEndpointMode","__smithy_context","checkFeatures","awsContext","encodeFeatures","sdkUserAgentValue","normalUAValue","section","userAgentPair","prefixSeparatorIndex","uaName","getUserAgentMiddlewareOptions","getUserAgentPlugin","NODE_USE_DUALSTACK_ENDPOINT_CONFIG_OPTIONS","NODE_USE_FIPS_ENDPOINT_CONFIG_OPTIONS","NODE_REGION_CONFIG_OPTIONS","NODE_REGION_CONFIG_FILE_OPTIONS","preferredFile","isFipsRegion","getRealRegion","resolveRegionConfig","providedRegion","CONTENT_LENGTH_HEADER","contentLengthMiddlewareOptions","getContentLengthPlugin","DOMAIN_PATTERN","IP_ADDRESS_PATTERN","DOTS_PATTERN","isDnsCompatibleBucketName","bucketName","isArnBucketName","isArn","isValidArn","createConfigValueProvider","configKey","canonicalEndpointParamKey","configValue","CredentialScope","AccountId","getSelectorName","functionString","constants","homeDirCache","getHomeDir","HOME","USERPROFILE","HOMEPATH","HOMEDRIVE","homeDirCacheKey","geteuid","homedir","ENV_PROFILE","getProfileName","getSSOTokenFilepath","cacheName","createHash","readFile","fsPromises","getSSOTokenFromFile","ssoTokenFilepath","ssoTokenText","getConfigData","indexOfSeparator","CONFIG_PREFIX_SEPARATOR","PROFILE","getConfigFilepath","getCredentialsFilepath","prefixKeyRegex","profileNameBlockList","parseIni","iniData","currentSection","currentSubSection","iniLine","trimmedLine","sectionName","indexOfEqualsSign","filePromisesHash","slurpFile","ignoreCache","swallowError","loadSharedConfigFiles","filepath","configFilepath","homeDir","resolvedFilepath","resolvedConfigFilepath","parsedFiles","configFile","credentialsFile","getSsoSessionData","SSO_SESSION","loadSsoSessionData","parseKnownFiles","files","merged","file","mergeConfigFiles","fromStatic","defaultValue","isFunction","staticValue","loadConfig","envVarSelector","fromEnv","configSelector","profileFromCredentials","profileFromConfig","mergedProfile","fromSharedConfigFiles","ENV_ENDPOINT_URL","CONFIG_ENDPOINT_URL","getEndpointFromConfig","serviceSuffixParts","w","serviceEndpointUrl","services","servicesSection","servicePrefixParts","getEndpointUrlConfig","parseUrl","querystring","pair","decodeURIComponent","parseQueryString","toEndpointV1","resolveParams","commandInput","instructionsSupplier","ForcePathStyle","Endpoint","DisableMultiRegionAccessPoints","disableMultiRegionAccessPoints","DisableMRAP","resolveParamsForS3","endpointMiddleware","endpointFromConfig","serviceConfiguredEndpoint","endpointProvider","getEndpointFromInstructions","signing_region","signing_service","endpointMiddlewareOptions","getEndpointPlugin","resolveEndpointConfig","tls","customEndpointProvider","isCustomEndpoint","resolvedConfig","configuredEndpointPromise","RETRY_MODES","DEFAULT_RETRY_MODE","STANDARD","THROTTLING_ERROR_CODES","TRANSIENT_ERROR_CODES","TRANSIENT_ERROR_STATUS_CODES","isThrottlingError","$retryable","throttling","isTransientError","depth","isClockSkewCorrectedError","cause","DefaultRateLimiter","currentCapacity","enabled","lastMaxRate","measuredTxRate","requestCount","lastTimestamp","timeWindow","beta","minCapacity","minFillRate","scaleConstant","smooth","currentTimeInSeconds","getCurrentTimeInSeconds","lastThrottleTime","lastTxRateBucket","fillRate","maxCapacity","getSendToken","acquireTokenBucket","amount","refillTokenBucket","setTimeoutFn","timestamp","fillAmount","updateClientSendingRate","calculatedRate","updateMeasuredRate","rateToUse","calculateTimeWindow","cubicThrottle","enableTokenBucket","cubicSuccess","newRate","updateTokenBucketRate","getPrecise","pow","timeBucket","currentRate","toFixed","createDefaultRetryToken","retryDelay","retryCount","retryCost","getRetryCount","getRetryDelay","getRetryCost","StandardRetryStrategy","maxAttempts","retryBackoffStrategy","delayBase","computeNextBackoffDelay","attempts","random","setDelayBase","getDefaultRetryBackoffStrategy","maxAttemptsProvider","retryTokenScope","refreshRetryTokenForRetry","token","errorInfo","getMaxAttempts","shouldRetry","errorType","delayFromErrorType","retryAfterHint","capacityCost","getCapacityCost","recordSuccess","getCapacity","tokenToRenew","isRetryableError","AdaptiveRetryStrategy","ADAPTIVE","rateLimiter","standardRetryStrategy","getRandomValues","rnds8","rng","crypto","byteToHex","native","randomUUID","v4","rnds","unsafeStringify","ENV_MAX_ATTEMPTS","CONFIG_MAX_ATTEMPTS","NODE_MAX_ATTEMPT_CONFIG_OPTIONS","maxAttempt","resolveRetryConfig","NODE_RETRY_MODE_CONFIG_OPTIONS","isStreamingPayload","isRetryStrategyV2","getRetryErrorInfo","getRetryErrorType","getRetryAfterHint","isServerError","retryMiddlewareOptions","getRetryPlugin","retry","retryToken","lastError","totalRetryDelay","isRequest","retryErrorInfo","refreshError","retryMiddleware","retryAfterHeaderName","retryAfter","retryAfterSeconds","signatureV4CrtContainer","SignatureV4MultiRegion","sigv4aSigner","sigv4Signer","signerOptions","getSigv4aSigner","CrtSignerV4","signingAlgorithm","ci","cj","ck","cl","cm","cn","co","cp","cq","cr","cs","ct","cu","cv","cw","cx","g","u","A","B","C","D","E","F","G","H","J","K","M","N","O","P","Q","R","S","T","U","V","W","X","Y","Z","aa","ab","ac","ad","ae","af","ag","ah","ai","aj","ak","al","am","an","ao","ap","aq","ar","as","at","au","av","aw","ax","ay","az","aA","aB","aC","aD","aE","aF","aG","aH","aI","aJ","aK","aL","aM","aN","aO","aP","aQ","aR","aS","aT","aU","aV","aW","aX","aY","aZ","ba","bb","bc","bd","be","bf","bg","bh","bi","bj","bk","bl","bm","bn","bo","bq","br","bs","bt","bu","bv","bw","bx","by","bz","bA","bB","bC","bD","bE","bF","bG","bH","bI","bJ","bK","bL","bM","bN","bO","bP","bQ","bR","bT","bU","bV","bW","bX","bY","bZ","ca","cc","cd","ce","cf","cg","ruleSet","Region","UseFIPS","UseDualStack","Accelerate","UseGlobalEndpoint","UseObjectLambdaEndpoint","Key","Prefix","CopySource","DisableAccessPoints","UseArnRegion","UseS3ExpressControlEndpoint","DisableS3ExpressSessionAuth","defaultEndpointResolver","defaultS3HttpAuthSchemeParametersProvider","defaultHttpAuthSchemeParametersProvider","defaultParameters","instructionsFn","endpointParameters","createAwsAuthSigv4HttpAuthOption","authParameters","createAwsAuthSigv4aHttpAuthOption","defaultS3HttpAuthSchemeProvider","defaultHttpAuthSchemeResolver","createHttpAuthOptionFunctions","resolvedName","rest","sigv4Present","createOption","createEndpointRuleSetHttpAuthSchemeProvider","resolveHttpAuthSchemeConfig","config_1","resolveAwsSdkSigV4AConfig","commonParams","S3ServiceException","__ServiceException","NoSuchUpload","__BaseException","ObjectNotInActiveTierError","BucketAlreadyExists","BucketAlreadyOwnedByYou","NoSuchBucket","AnalyticsFilter","MetricsFilter","visit","visitor","Tag","And","$unknown","AccessPointArn","InvalidObjectState","StorageClass","AccessTier","NoSuchKey","NotFound","SessionCredentialsFilterSensitiveLog","CreateSessionOutputFilterSensitiveLog","SSEKMSKeyId","SSEKMSEncryptionContext","CreateSessionRequestFilterSensitiveLog","GetObjectOutputFilterSensitiveLog","GetObjectRequestFilterSensitiveLog","SSECustomerKey","HeadObjectOutputFilterSensitiveLog","HeadObjectRequestFilterSensitiveLog","EncryptionTypeMismatch","InvalidRequest","InvalidWriteOffset","TooManyParts","ObjectAlreadyInActiveTierError","SelectObjectContentEventStream","Records","Stats","Progress","Cont","End","se_CreateSessionCommand","rb","_xacsm","_SM","_xasse","_SSE","_xasseakki","_SSEKMSKI","_xassec","_SSEKMSEC","_xassebke","_BKE","_s","se_GetObjectCommand","_im","_IM","_ims","_IMSf","__dateToUtcString","_inm","_INM","_ius","_IUS","_ra","_R","_xasseca","_SSECA","_xasseck","_SSECK","_xasseckm","_SSECKMD","_xarp","_RP","_xaebo","_EBO","_xacm","_CM","_xi","_rcc","_RCC","_rcd","_RCD","_rce","_RCE","_rcl","_RCL","_rct","_RCT","_re","ResponseExpires","_RE","_vI","_VI","_pN","PartNumber","_PN","se_HeadObjectCommand","de_CreateSessionCommand","de_CommandError","contents","__parseBoolean","__expectNonNull","__expectObject","parseBody","_C","de_SessionCredentials","de_GetObjectCommand","_DM","_xadm","_AR","_ar","_Exp","_xae","_Re","_xar","_LM","_lm","__parseRfc7231DateTime","_CLo","_cl_","__strictParseLong","_ETa","_eta","_CCRC","_xacc","_CCRCC","_xacc_","_CCRCNVME","_xacc__","_CSHA","_xacs","_CSHAh","_xacs_","_CT","_xact","_MM","_xamm","__strictParseInt32","_xavi","_CC","_cc","_CD","_cd","_CE","_ce","_CL","_cl","_CR","_cr","_CTo","_ct","_E","_e","_ES","_ex","_WRL","_xawrl","_SC","_xasc","_RC","_xarc","_RS","_xars","_PC","_xampc","_TC","_xatc","_OLM","_xaolm","_OLRUD","_xaolrud","__parseRfc3339DateTimeWithOffset","_OLLHS","_xaollh","Metadata","Body","de_HeadObjectCommand","_AS","_xaas","parsedOutput","parseErrorBody","loadRestXmlErrorCode","de_NoSuchUploadRes","de_ObjectNotInActiveTierErrorRes","de_BucketAlreadyExistsRes","de_BucketAlreadyOwnedByYouRes","de_NoSuchBucketRes","de_InvalidObjectStateRes","de_NoSuchKeyRes","de_NotFoundRes","de_EncryptionTypeMismatchRes","de_InvalidRequestRes","de_InvalidWriteOffsetRes","de_TooManyPartsRes","de_ObjectAlreadyInActiveTierErrorRes","__decorateServiceException","_AT","__expectString","_AKI","_SAK","_ST","CreateSessionCommand","$Command","ENV_KEY","ENV_SECRET","ENV_SESSION","ENV_EXPIRATION","ENV_CREDENTIAL_SCOPE","ENV_ACCOUNT_ID","expiry","ENV_IMDS_DISABLED","multipleCredentialSourceWarningEmitted","defaultProvider","ssoStartUrl","ssoAccountId","ssoRegion","ssoRoleName","ssoSession","fromSSO","import","fromIni","fromProcess","fromTokenFile","ENV_CMDS_FULL_URI","ENV_CMDS_RELATIVE_URI","fromContainerMetadata","fromInstanceMetadata","fromHttp","remoteProvider","credentialsTreatedAsExpired","credentialsWillNeedRefresh","NODE_USE_ARN_REGION_CONFIG_OPTIONS","createDefaultUserAgentProvider","clientVersion","sections","platform","release","AWS_EXECUTION_ENV","NODE_APP_ID_CONFIG_OPTIONS","HeaderMarshaller","nameLength","getUint8","BOOLEAN_TAG","BYTE_TAG","getInt8","SHORT_TAG","getInt16","INT_TAG","getInt32","LONG_TAG","binaryLength","getUint16","BINARY_TAG","stringLength","STRING_TAG","TIMESTAMP_TAG","UUID_TAG","EventStreamCodec","headerMarshaller","messageBuffer","isEndOfStream","feed","endOfStream","getMessage","getAvailableMessages","messages","getMessages","rawHeaders","view","setUint32","PRELUDE_LENGTH","messageLength","getUint32","headerLength","expectedPreludeChecksum","PRELUDE_MEMBER_LENGTH","expectedMessageChecksum","checksummer","splitMessage","formatHeaders","MessageDecoderStream","asyncIterator","inputStream","decoded","decoder","MessageEncoderStream","messageStream","includeEndFrame","SmithyMessageDecoderStream","deserialized","SmithyMessageEncoderStream","payloadBuf","getMessageUnmarshaller","messageType","unmodeledError","deserializedException","EventStreamMarshaller","eventStreamCodec","utfEncoder","currentMessageTotalLength","currentMessagePendingLength","currentMessage","messageLengthBuffer","allocateMessage","sourceIterator","chunkLength","currentOffset","bytesRemaining","numBytesForTotal","numBytesToWrite","getChunkedStream","universalMarshaller","UniversalEventStreamMarshaller","bodyIterable","readStream","streamEnded","generationEnded","records","readabletoIterable","eventStreamSerdeProvider","Hash","algorithmIdentifier","castSourceData","createHmac","toCast","HashCalculator","readableStreamHasher","hashCalculator","calculateBodyLength","lstatSync","fd","fstatSync","AWS_REGION_ENV","AWS_DEFAULT_REGION_ENV","DEFAULTS_MODE_OPTIONS","NODE_DEFAULTS_MODE_CONFIG_OPTIONS","resolveDefaultsModeConfig","defaultsMode","resolveNodeDefaultsModeAuto","toLocaleLowerCase","clientRegion","resolvedRegion","inferredRegion","inferPhysicalRegion","getInstanceMetadataEndpoint","getRuntimeConfig","defaultConfigProvider","clientSharedValues","apiVersion","base64Decoder","disableHostPrefix","extensions","ipc","useArnRegion","getSharedRuntimeConfig","awsCheckVersion","profileConfig","packageInfo","disableS3ExpressSessionAuth","loadNodeConfig","RequestHandler","getAwsRegionExtensionConfiguration","runtimeConfigRegion","setRegion","resolveAwsRegionExtensionConfiguration","awsRegionExtensionConfiguration","getHttpAuthExtensionConfiguration","_httpAuthSchemes","_httpAuthSchemeProvider","_credentials","setHttpAuthScheme","httpAuthScheme","setHttpAuthSchemeProvider","setCredentials","S3Client","__Client","_config_0","__getRuntimeConfig","_config_2","forcePathStyle","useAccelerateEndpoint","useGlobalEndpoint","disableMultiregionAccessPoints","_config_3","_config_4","_config_5","_config_8","eventStreamMarshaller","resolveEventStreamSerdeConfig","_config_10","s3ClientProvider","CreateSessionCommandCtor","resolveS3Config","_config_11","extensionConfiguration","extension","configure","resolveRuntimeExtensions","ssecMiddlewareOptions","getSsecPlugin","prop","valueForHash","isValidBase64EncodedSSECustomerKey","GetObjectCommand","HeadObjectCommand","S3Store","cacheLimit","cacheStack","cacheHits","cacheMisses","cacheReplaces","s3","objectKey","streamToArrayBuffer","keyToDelete","caught","totalLength","close"],"mappings":"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"}